Statistical Debugging using Latent Topic Models ∗

David Andrzejewski, Anne Mulhern, Ben Liblit, and Xiaojin Zhu

Computer Sciences Department, University of Wisconsin, Madison WI 53706, USA

Abstract. Statistical debugging uses machine learning to model program fail-
ures and help identify root causes of bugs. We approach this task using a novel
Delta-Latent-Dirichlet-Allocation model. We model execution traces attributed
to failed runs of a program as being generated by two types of latent topics: nor-
mal usage topics and bug topics. Execution traces attributed to successful runs of
the same program, however, are modeled by usage topics only. Joint modeling of
both kinds of traces allows us to identify weak bug topics that would otherwise
remain undetected. We perform model inference with collapsed Gibbs sampling.
In quantitative evaluations on four real programs, our model produces bug topics
highly correlated to the true bugs, as measured by the Rand index. Qualitative
evaluation by domain experts suggests that our model outperforms existing sta-
tistical methods for bug cause identiﬁcation, and may help support other software
tasks not addressed by earlier models.

1

Introduction

We all depend on buggy software. Computers and computer failures are inescapable
features of modern life. As software grows ever more complex and more dynamic, per-
fectly predicting the (mis)behavior of a software application becomes impossible both
in theory and in practice. Therefore, we see increasing interest in statistical debugging:
the use of statistical machine learning to support debugging. Statistical methods can
cope with uncertain and incomplete information while still providing best-eﬀort clues
about the causes of software failure. In particular, one can collect examples of suc-
cessful and failed (e.g., crashed) program runs, then use machine learning techniques
to identify those software actions which are strongly associated with program failure.
Our goal is not to predict whether a run succeeded or failed, but to identify potentially
multiple types of bugs in the program.

In contrast with earlier work [1–8] we approach this task using latent topic models.
These models, such as probabilistic Latent Semantic Analysis [9] and Latent Dirichlet
Allocation (LDA [10]), have been successfully applied to model natural language doc-
uments [11], images [12] and so on. The contribution of the present work is two-fold:
1. To the best of our knowledge, our work is the ﬁrst to apply latent topic models
to debugging. We employ a novel variant of the LDA model. Each run of a program
yields a record of its execution behavior. This record is our document; the words in the
document are the events that have been recorded. We describe these records in greater
∗ This research was supported in part by AFOSR Grant FA9550-07-1-0210, NSF Grant CCF-
0621487, and NLM Training Grant 5T15LM07359.

