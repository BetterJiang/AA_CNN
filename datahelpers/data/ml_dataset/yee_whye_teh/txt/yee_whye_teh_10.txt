Hierarchical Dirichlet Processes

Yee Whye Teh
Department of Computer Science, National University of Singapore,
Singapore 117543

tehyw@comp.nus.edu.sg

Michael I. Jordan
Computer Science Division and Department of Statistics,
University of California at Berkeley, Berkeley CA 94720-1776, USA

jordan@eecs.berkeley.edu

Matthew J. Beal
Department of Computer Science & Engineering,
State University of New York at Buffalo, Buffalo NY 14260-2000, USA

mbeal@cse.buffalo.edu

David M. Blei
Department of Computer Science, Princeton University,
Princeton, NJ 08544, USA

blei@eecs.berkeley.edu

November 15, 2005

Abstract

We consider problems involving groups of data, where each observation within a group is
a draw from a mixture model, and where it is desirable to share mixture components between
groups. We assume that the number of mixture components is unknown a priori and is to be
inferred from the data. In this setting it is natural to consider sets of Dirichlet processes, one
for each group, where the well-known clustering property of the Dirichlet process provides a
nonparametric prior for the number of mixture components within each group. Given our desire
to tie the mixture models in the various groups, we consider a hierarchical model, speciﬁcally
one in which the base measure for the child Dirichlet processes is itself distributed according to
a Dirichlet process. Such a base measure being discrete, the child Dirichlet processes necessar-
ily share atoms. Thus, as desired, the mixture models in the different groups necessarily share
mixture components. We discuss representations of hierarchical Dirichlet processes in terms of
a stick-breaking process, and a generalization of the Chinese restaurant process that we refer
to as the “Chinese restaurant franchise.” We present Markov chain Monte Carlo algorithms
for posterior inference in hierarchical Dirichlet process mixtures, and describe applications to
problems in information retrieval and text modelling.

Keywords: clustering, mixture models, nonparametric Bayesian statistics, hierarchical
models, Markov chain Monte Carlo

1

1 INTRODUCTION

A recurring theme in statistics is the need to separate observations into groups, and yet allow the
groups to remain linked—to “share statistical strength.” In the Bayesian formalism such sharing is
achieved naturally via hierarchical modeling; parameters are shared among groups, and the random-
ness of the parameters induces dependencies among the groups. Estimates based on the posterior
distribution exhibit “shrinkage.”

In the current paper we explore a hierarchical approach to the problem of model-based clustering
of grouped data. We assume that the data are subdivided into a set of groups, and that within each
group we wish to ﬁnd clusters that capture latent structure in the data assigned to that group. The
number of clusters within each group is unknown and is to be inferred. Moreover, in a sense that
we make precise, we wish to allow clusters to be shared among the groups.

An example of the kind of problem that motivates us can be found in genetics. Consider a set
of k binary markers (e.g., single nucleotide polymorphisms or “SNPs”) in a localized region of the
human genome. While an individual human could exhibit any of 2k different patterns of markers
on a single chromosome, in real populations only a small subset of such patterns—haplotypes—are
actually observed (Gabriel et al. 2002). Given a meiotic model for the combination of a pair of
haplotypes into a genotype during mating, and given a set of observed genotypes in a sample from
a human population, it is of great interest to identify the underlying haplotypes (Stephens et al.
2001). Now consider an extension of this problem in which the population is divided into a set of
groups; e.g., African, Asian and European subpopulations. We may not only want to discover the
sets of haplotypes within each subpopulation, but we may also wish to discover which haplotypes
are shared between subpopulations. The identiﬁcation of such haplotypes would have signiﬁcant
implications for the understanding of the migration patterns of ancestral populations of humans.

As a second example, consider the problem from the ﬁeld of information retrieval (IR) of mod-
eling of relationships among sets of documents. In IR, documents are generally modeled under
an exchangeability assumption, the “bag of words” assumption, in which the order of words in a
document is ignored (Salton and McGill 1983). It is also common to view the words in a document
as arising from a number of latent clusters or “topics,” where a topic is generally modeled as a
multinomial probability distribution on words from some basic vocabulary (Blei et al. 2003). Thus,
in a document concerned with university funding the words in the document might be drawn from
the topics “education” and “ﬁnance.” Considering a collection of such documents, we may wish
to allow topics to be shared among the documents in the corpus. For example, if the corpus also
contains a document concerned with university football, the topics may be “education” and “sports,”
and we would want the former topic to be related to that discovered in the analysis of the document
on university funding.

Moreover, we may want to extend the model to allow for multiple corpora. For example, doc-
uments in scientiﬁc journals are often grouped into themes (e.g., “empirical process theory,” “mul-
tivariate statistics,” “survival analysis”), and it would be of interest to discover to what extent the
latent topics that are shared among documents are also shared across these groupings. Thus in
general we wish to consider the sharing of clusters across multiple, nested groupings of data.

Our approach to the problem of sharing clusters among multiple, related groups is a nonpara-
metric Bayesian approach, reposing on the Dirichlet process (Ferguson 1973). The Dirichlet process
DP((cid:11)0; G0) is a measure on measures. It has two parameters, a scaling parameter (cid:11)0 > 0 and a
base probability measure G0. An explicit representation of a draw from a Dirichlet process (DP)

2

was given by Sethuraman (1994), who showed that if G (cid:24) DP((cid:11)0; G0), then with probability one:

1

G =

(cid:12)k(cid:14)(cid:30)k ;

(1)

Xk=1

where the (cid:30)k are independent random variables distributed according to G0, where (cid:14)(cid:30)k is an atom
at (cid:30)k, and where the “stick-breaking weights” (cid:12)k are also random and depend on the parameter (cid:11)0
(the deﬁnition of the (cid:12)k is provided in Section 3.1).

The representation in (1) shows that draws from a DP are discrete (with probability one). The
discrete nature of the DP makes it unsuitable for general applications in Bayesian nonparametrics,
but it is well suited for the problem of placing priors on mixture components in mixture modeling.
The idea is basically to associate a mixture component with each atom in G. Introducing indica-
tor variables to associate data points with mixture components, the posterior distribution yields a
probability distribution on partitions of the data. A number of authors have studied such Dirichlet
process mixture models (Antoniak 1974; Escobar and West 1995; MacEachern and M ¨uller 1998).
These models provide an alternative to methods that attempt to select a particular number of mixture
components, or methods that place an explicit parametric prior on the number of components.

Let us now consider the setting in which the data are subdivided into a number of groups. Given
our goal of solving a clustering problem within each group, we consider a set of random measures
Gj, one for each group j, where Gj is distributed according to a group-speciﬁc Dirichlet process
DP((cid:11)0j; G0j). To link these clustering problems, we link the group-speciﬁc DPs. Many authors
have considered ways to induce dependencies among multiple DPs via links among the parameters
G0j and/or (cid:11)0j (Cifarelli and Regazzini 1978; MacEachern 1999; Tomlinson 1998; M ¨uller et al.
2004; De Iorio et al. 2004; Kleinman and Ibrahim 1998; Mallick and Walker 1997; Ishwaran and
James 2004). Focusing on the G0j, one natural proposal is a hierarchy in which the measures Gj are
conditionally independent draws from a single underlying Dirichlet process DP((cid:11)0; G0((cid:28) )), where
G0((cid:28) ) is a parametric distribution with random parameter (cid:28) (Carota and Parmigiani 2002; Fong
et al. 2002; Muliere and Petrone 1993). Integrating over (cid:28) induces dependencies among the DPs.

That this simple hierarchical approach will not solve our problem can be observed by consider-
ing the case in which G0((cid:28) ) is absolutely continuous with respect to Lebesgue measure for almost
all (cid:28) (e.g., G0 is Gaussian with mean (cid:28) ). In this case, given that the draws Gj arise as conditionally
independent draws from G0((cid:28) ), they necessarily have no atoms in common (with probability one).
Thus, although clusters arise within each group via the discreteness of draws from a DP, the atoms
associated with the different groups are different and there is no sharing of clusters between groups.
This problem can be skirted by assuming that G0 lies in a discrete parametric family, but such an
assumption would be overly restrictive.

Our proposed solution to the problem is straightforward: to force G0 to be discrete and yet
have broad support, we consider a nonparametric hierarchical model in which G0 is itself a draw
from a Dirichlet process DP((cid:13); H). This restores ﬂexibility in that the modeler can choose H to be
continuous or discrete. In either case, with probability one, G0 is discrete and has a stick-breaking
representation as in (1). The atoms (cid:30)k are shared among the multiple DPs, yielding the desired
sharing of atoms among groups. In summary, we consider the hierarchical speciﬁcation:

G0 j (cid:13); H (cid:24) DP((cid:13); H)

Gj j (cid:11)0; G0 (cid:24) DP((cid:11)0; G0)

for each j,

(2)

which we refer to as a hierarchical Dirichlet process. The immediate extension to hierarchical
Dirichlet process mixture models yields our proposed formalism for sharing clusters among related
clustering problems.

3

Related nonparametric approaches to linking multiple DPs have been discussed by a number of
authors. Our approach is a special case of a general framework for “dependent Dirichlet processes”
due to MacEachern (1999) and MacEachern et al. (2001). In this framework the random variables
(cid:12)k and (cid:30)k in (1) are general stochastic processes (i.e., indexed collections of random variables);
this allows very general forms of dependency among DPs. Our hierarchical approach ﬁts into this
framework; we endow the stick-breaking weights (cid:12)k in (1) with a second subscript indexing the
groups j, and view the weights (cid:12)jk as dependent for each ﬁxed value of k. Indeed, as we show in
Section 4, the deﬁnition in (2) yields a speciﬁc, canonical form of dependence among the weights
(cid:12)jk.

Our approach is also a special case of a framework referred to as analysis of densities (AnDe)
by Tomlinson (1998) and Tomlinson and Escobar (2003). The AnDe model is a hierarchical model
for multiple DPs in which the common base measure G0 is random, but rather than treating G0 as
a draw from a DP, as in our case, it is treated as a draw from a mixture of DPs. The resulting G0
is continuous in general (Antoniak 1974), which, as we have discussed, is ruinous for our problem
of sharing clusters. It is an appropriate choice, however, for the problem addressed by Tomlin-
son (1998), which is that of sharing statistical strength among multiple sets of density estimation
problems. Thus, while the AnDe framework and our hierarchical DP framework are closely related
formally, the inferential goal is rather different. Moreover, as we will see, our restriction to discrete
G0 has important implications for the design of efﬁcient MCMC inference algorithms.

The terminology of “hierarchical Dirichlet process” has also been used by M ¨uller et al. (2004)
to describe a different notion of hierarchy than the one discussed here. These authors consider a
model in which a coupled set of random measures Gj are deﬁned as Gj = (cid:15)F0 + (1 (cid:0) (cid:15))Fj, where
F0 and the Fj are draws from DPs. This model provides an alternative approach to sharing clusters,
one in which the shared clusters are given the same stick-breaking weights (those associated with
F0) in each of the groups. By contrast, in our hierarchical model, the draws Gj are based on the
same underlying base measure G0, but each draw assigns different stick-breaking weights to the
shared atoms associated with G0. Thus, atoms can be partially shared.

Finally, the terminology of “hierarchical Dirichlet process” has been used in yet a third way by
Beal et al. (2002) in the context of a model known as the inﬁnite hidden Markov model, a hidden
Markov model with a countably inﬁnite state space. The “hierarchical Dirichlet process” of Beal
et al. (2002) is, however, not a hierarchy in the Bayesian sense; rather, it is an algorithmic description
of a coupled set of urn models. We discuss this model in more detail in Section 7, where we show
that the notion of hierarchical DP presented here yields an elegant treatment of the inﬁnite hidden
Markov model.

In summary, the notion of hierarchical Dirichlet process that we explore is a speciﬁc example
of a dependency model for multiple Dirichlet processes, one speciﬁcally aimed at the problem of
sharing clusters among related groups of data. It involves a simple Bayesian hierarchy where the
base measure for a set of Dirichlet processes is itself distributed according to a Dirichlet process.
While there are many ways to couple Dirichlet processes, we view this simple, canonical Bayesian
hierarchy as particularly worthy of study. Note in particular the appealing recursiveness of the
deﬁnition; a hierarchical Dirichlet process can be readily extended to multiple hierarchical levels.
This is natural in applications. For example, in our application to document modeling, one level
of hierarchy is needed to share clusters among multiple documents within a corpus, and second
level of hierarchy is needed to share clusters among multiple corpora. Similarly, in the genetics
example, it is of interest to consider nested subdivisions of populations according to various criteria
(geographic, cultural, economic), and to consider the ﬂow of haplotypes on the resulting tree.

As is the case with other nonparametric Bayesian methods, a signiﬁcant component of the chal-

4

lenge in working with the hierarchical Dirichlet process is computational. To provide a general
framework for designing procedures for posterior inference in the hierarchical Dirichlet process
that parallel those available for the Dirichlet process, it is necessary to develop analogs for the hi-
erarchical Dirichlet process of some of the representations that have proved useful in the Dirichlet
process setting. We provide these analogs in Section 4 where we discuss a stick-breaking repre-
sentation of the hierarchical Dirichlet process, an analog of the P ´olya urn model that we refer to
as the “Chinese restaurant franchise,” and a representation of the hierarchical Dirichlet process in
terms of an inﬁnite limit of ﬁnite mixture models. With these representations as background, we
present MCMC algorithms for posterior inference under hierarchical Dirichlet process mixtures in
Section 5. We present experimental results in Section 6 and present our conclusions in Section 8.

2 SETTING

We are interested in problems where the observations are organized into groups, and assumed ex-
changeable both within each group and across groups. To be precise, letting j index the groups and
i index the observations within each group, we assume that xj1; xj2; : : : are exchangeable within
each group j. We also assume that the observations are exchangeable at the group level, that is, if
xj = (xj1; xj2; : : :) denote all observations in group j, then x1; x2; : : : are exchangeable.

Assuming each observation is drawn independently from a mixture model, there is a mixture
component associated with each observation. Let (cid:18)ji denote a parameter specifying the mixture
component associated with the observation xji. We will refer to the variables (cid:18)ji as factors. Note
that these variables are not generally distinct; we will develop a different notation for the distinct
values of factors. Let F ((cid:18)ji) denote the distribution of xji given the factor (cid:18)ji. Let Gj denote a
prior distribution for the factors (cid:18)j = ((cid:18)j1; (cid:18)j2; : : :) associated with group j. We assume that the
factors are conditionally independent given Gj. Thus we have the following probability model:

(cid:18)ji j Gj (cid:24) Gj
xji j (cid:18)ji (cid:24) F ((cid:18)ji)

for each j and i,
for each j and i,

(3)

to augment the speciﬁcation given in (2).

3 DIRICHLET PROCESSES

In this section, we provide a brief overview of Dirichlet processes. After a discussion of basic
deﬁnitions, we present three different perspectives on the Dirichlet process: one based on the stick-
breaking construction, one based on a P´olya urn model, and one based on a limit of ﬁnite mixture
models. Each of these perspectives has an analog in the hierarchical Dirichlet process, which is
described in Section 4.

Let ((cid:2); B) be a measurable space, with G0 a probability measure on the space. Let (cid:11)0 be a
positive real number. A Dirichlet process DP((cid:11)0; G0) is deﬁned to be the distribution of a random
probability measure G over ((cid:2); B) such that, for any ﬁnite measurable partition (A1; A2; : : : ; Ar)
of (cid:2), the random vector (G(A1); : : : ; G(Ar)) is distributed as a ﬁnite-dimensional Dirichlet distri-
bution with parameters ((cid:11)0G0(A1); : : : ; (cid:11)0G0(Ar)):

(G(A1); : : : ; G(Ar)) (cid:24) Dir((cid:11)0G0(A1); : : : ; (cid:11)0G0(Ar)) :

(4)

We write G (cid:24) DP((cid:11)0; G0) if G is a random probability measure with distribution given by the
Dirichlet process. The existence of the Dirichlet process was established by Ferguson (1973).

5

Yl=1

Xk=1

3.1 The stick-breaking construction

Measures drawn from a Dirichlet process are discrete with probability one (Ferguson 1973). This
property is made explicit in the stick-breaking construction due to Sethuraman (1994). The stick-
breaking construction is based on independent sequences of i.i.d. random variables ((cid:25) 0
k=1 and
((cid:30)k)1

k)1

k=1:

(cid:25)0
k j (cid:11)0; G0 (cid:24) Beta(1; (cid:11)0)

(cid:30)k j (cid:11)0; G0 (cid:24) G0 :

Now deﬁne a random measure G as

k(cid:0)1

1

(cid:25)k = (cid:25)0
k

(1 (cid:0) (cid:25)0
l)

G =

(cid:25)k(cid:14)(cid:30)k ;

(5)

(6)

where (cid:14)(cid:30) is a probability measure concentrated at (cid:30). Sethuraman (1994) showed that G as deﬁned
in this way is a random probability measure distributed according to DP((cid:11)0; G0).

P1

k=1 constructed by (5) and (6) satisﬁes
It is important to note that the sequence (cid:25) = ((cid:25)k)1
k=1 (cid:25)k = 1 with probability one. Thus we may interpret (cid:25) as a random probability measure on
the positive integers. For convenience, we shall write (cid:25) (cid:24) GEM((cid:11)0) if (cid:25) is a random probability
measure deﬁned by (5) and (6) (GEM stands for Grifﬁths, Engen and McCloskey; e.g. see Pitman
2002b).

3.2 The Chinese restaurant process

A second perspective on the Dirichlet process is provided by the P ´olya urn scheme (Blackwell and
MacQueen 1973). The P´olya urn scheme shows that draws from the Dirichlet process are both
discrete and exhibit a clustering property.

The P´olya urn scheme does not refer to G directly; it refers to draws from G. Thus, let (cid:18)1; (cid:18)2; : : :
be a sequence of i.i.d. random variables distributed according to G. That is, the variables (cid:18)1; (cid:18)2; : : :
are conditionally independent given G, and hence exchangeable. Let us consider the successive
conditional distributions of (cid:18)i given (cid:18)1; : : : ; (cid:18)i(cid:0)1, where G has been integrated out. Blackwell and
MacQueen (1973) showed that these conditional distributions have the following form:

(cid:18)i j (cid:18)1; : : : ; (cid:18)i(cid:0)1; (cid:11)0; G0 (cid:24)

1

i (cid:0) 1 + (cid:11)0

(cid:14)(cid:18)‘ +

(cid:11)0

i (cid:0) 1 + (cid:11)0

G0 :

(7)

i(cid:0)1

X‘=1

We can interpret the conditional distributions in terms of a simple urn model in which a ball of a
distinct color is associated with each atom. The balls are drawn equiprobably; when a ball is drawn
it is placed back in the urn together with another ball of the same color. In addition, with probability
proportional to (cid:11)0 a new atom is created by drawing from G0 and a ball of a new color is added to
the urn.

Expression (7) shows that (cid:18)i has positive probability of being equal to one of the previous draws.
Moreover, there is a positive reinforcement effect; the more often a point is drawn, the more likely
it is to be drawn in the future. To make the clustering property explicit, it is helpful to introduce a
new set of variables that represent distinct values of the atoms. Deﬁne (cid:30)1; : : : ; (cid:30)K to be the distinct
values taken on by (cid:18)1; : : : ; (cid:18)i(cid:0)1, and let mk be the number of values (cid:18)i0 that are equal to (cid:30)k for
1 (cid:20) i0 < i. We can re-express (7) as

(cid:18)i j (cid:18)1; : : : ; (cid:18)i(cid:0)1; (cid:11)0; G0 (cid:24)

mk

i (cid:0) 1 + (cid:11)0

(cid:14)(cid:30)k +

(cid:11)0

i (cid:0) 1 + (cid:11)0

G0 :

(8)

K

Xk=1

6

0a

0G

G

i

xi

0a

H

G0

Gj

ji

xji

Figure 1: (Left) A representation of a Dirichlet process mixture model as a graphical model. (Right)
A hierarchical Dirichlet process mixture model. In the graphical model formalism, each node in the
graph is associated with a random variable, where shading denotes an observed variable. Rectangles
denote replication of the model within the rectangle. Sometimes the number of replicates is given
in the bottom right corner of the rectangle.

Using a somewhat different metaphor, the P´olya urn scheme is closely related to a distribution
on partitions known as the Chinese restaurant process (Aldous 1985). This metaphor has turned
out to be useful in considering various generalizations of the Dirichlet process (Pitman 2002a), and
it will be useful in this paper. The metaphor is as follows. Consider a Chinese restaurant with an
unbounded number of tables. Each (cid:18)i corresponds to a customer who enters the restaurant, while
the distinct values (cid:30)k correspond to the tables at which the customers sit. The ith customer sits at the
table indexed by (cid:30)k, with probability proportional to the number of customers mk already seated
there (in which case we set (cid:18)i = (cid:30)k), and sits at a new table with probability proportional to (cid:11)0
(increment K, draw (cid:30)K (cid:24) G0 and set (cid:18)i = (cid:30)K).

3.3 Dirichlet process mixture models

One of the most important applications of the Dirichlet process is as a nonparametric prior on the
parameters of a mixture model. In particular, suppose that observations xi arise as follows:

(cid:18)i j G (cid:24) G
xi j (cid:18)i (cid:24) F ((cid:18)i) ;

(9)

where F ((cid:18)i) denotes the distribution of the observation xi given (cid:18)i. The factors (cid:18)i are conditionally
independent given G, and the observation xi is conditionally independent of the other observations
given the factor (cid:18)i. When G is distributed according to a Dirichlet process, this model is referred
to as a Dirichlet process mixture model. A graphical model representation of a Dirichlet process
mixture model is shown in Figure 1 (Left).

Since G can be represented using a stick-breaking construction (6), the factors (cid:18)i take on values
(cid:30)k with probability (cid:25)k. We may denote this using an indicator variable zi which takes on positive
integral values and is distributed according to (cid:25) (interpreting (cid:25) as a random probability measure on

7

q
q
g
the positive integers). Hence an equivalent representation of a Dirichlet process mixture is given by
the following conditional distributions:

(cid:25) j (cid:11)0 (cid:24) GEM((cid:11)0)
(cid:30)k j G0 (cid:24) G0

zi j (cid:25) (cid:24) (cid:25)

xi j zi; ((cid:30)k)1

k=1 (cid:24) F ((cid:30)zi) :

(10)

Moreover, G =P1

k=1 (cid:25)k(cid:14)(cid:30)k and (cid:18)i = (cid:30)zi.

3.4 The inﬁnite limit of ﬁnite mixture models

A Dirichlet process mixture model can be derived as the limit of a sequence of ﬁnite mixture mod-
els, where the number of mixture components is taken to inﬁnity (Neal 1992; Rasmussen 2000;
Green and Richardson 2001; Ishwaran and Zarepour 2002). This limiting process provides a third
perspective on the Dirichlet process.

Suppose we have L mixture components. Let (cid:25) = ((cid:25)1; : : : (cid:25)L) denote the mixing proportions.
Note that we previously used the symbol (cid:25) to denote the weights associated with the atoms in G. We
have deliberately overloaded the deﬁnition of (cid:25) here; as we shall see later, they are closely related.
In fact, in the limit L ! 1 these vectors are equivalent up to a random size-biased permutation of
their entries (Pitman 1996).

We place a Dirichlet prior on (cid:25) with symmetric parameters ((cid:11)0=L; : : : ; (cid:11)0=L). Let (cid:30)k denote
the parameter vector associated with mixture component k, and let (cid:30)k have prior distribution G0.
Drawing an observation xi from the mixture model involves picking a speciﬁc mixture component
with probability given by the mixing proportions; let zi denote that component. We thus have the
following model:

(cid:25) j (cid:11)0 (cid:24) Dir((cid:11)0=L; : : : ; (cid:11)0=L)

zi j (cid:25) (cid:24) (cid:25)

(cid:30)k j G0 (cid:24) G0

xi j zi; ((cid:30)k)L

k=1 (cid:24) F ((cid:30)zi) :

(11)

Let GL = PL

integrable with respect to G0, we have, as L ! 1:

k=1 (cid:25)k(cid:14)(cid:30)k. Ishwaran and Zarepour (2002) show that for every measurable function f

Z f ((cid:18)) dGL((cid:18)) D(cid:0)!Z f ((cid:18)) dG((cid:18)) :

(12)

A consequence of this is that the marginal distribution induced on the observations x1; : : : ; xn ap-
proaches that of a Dirichlet process mixture model.

4 HIERARCHICAL DIRICHLET PROCESSES

We propose a nonparametric Bayesian approach to the modeling of grouped data, where each group
is associated with a mixture model, and where we wish to link these mixture models. By analogy
with Dirichlet process mixture models, we ﬁrst deﬁne the appropriate nonparametric prior, which
we refer to as the hierarchical Dirichlet process. We then show how this prior can be used in the
grouped mixture model setting. We present analogs of the three perspectives presented earlier for
the Dirichlet process—a stick-breaking construction, a Chinese restaurant process representation,
and a representation in terms of a limit of ﬁnite mixture models.

A hierarchical Dirichlet process is a distribution over a set of random probability measures over
((cid:2); B). The process deﬁnes a set of random probability measures Gj, one for each group, and a

8

global random probability measure G0. The global measure G0 is distributed as a Dirichlet process
with concentration parameter (cid:13) and base probability measure H:

G0 j (cid:13); H (cid:24) DP((cid:13); H) ;

(13)

and the random measures Gj are conditionally independent given G0, with distributions given by a
Dirichlet process with base probability measure G0:

Gj j (cid:11)0; G0 (cid:24) DP((cid:11)0; G0) :

(14)

The hyperparameters of the hierarchical Dirichlet process consist of the baseline probability
measure H, and the concentration parameters (cid:13) and (cid:11)0. The baseline H provides the prior distribu-
tion for the factors (cid:18)ji. The distribution G0 varies around the prior H, with the amount of variability
governed by (cid:13). The actual distribution Gj over the factors in the jth group deviates from G0, with
the amount of variability governed by (cid:11)0. If we expect the variability in different groups to be dif-
ferent, we can use a separate concentration parameter (cid:11)j for each group j. In this paper, following
Escobar and West (1995), we put vague gamma priors on (cid:13) and (cid:11)0.

A hierarchical Dirichlet process can be used as the prior distribution over the factors for grouped
data. For each j let (cid:18)j1; (cid:18)j2; : : : be i.i.d. random variables distributed as Gj. Each (cid:18)ji is a factor
corresponding to a single observation xji. The likelihood is given by:

(cid:18)ji j Gj (cid:24) Gj
xji j (cid:18)ji (cid:24) F ((cid:18)ji) :

(15)

This completes the deﬁnition of a hierarchical Dirichlet process mixture model. The corresponding
graphical model is shown in Figure 1 (Right).

The hierarchical Dirichlet process can readily be extended to more than two levels. That is, the
base measure H can itself be a draw from a DP, and the hierarchy can be extended for as many
levels as are deemed useful. In general, we obtain a tree in which a DP is associated with each node,
in which the children of a given node are conditionally independent given their parent, and in which
the draw from the DP at a given node serves as a base measure for its children. The atoms in the
stick-breaking representation at a given node are thus shared among all descendant nodes, providing
a notion of shared clusters at multiple levels of resolution.

4.1 The stick-breaking construction

Given that the global measure G0 is distributed as a Dirichlet process, it can be expressed using a
stick-breaking representation:

G0 =

1

Xk=1

(cid:12)k(cid:14)(cid:30)k ;

(16)

where (cid:30)k (cid:24) H independently and (cid:12) = ((cid:12)k)1
has support at the points (cid:30) = ((cid:30)k)1
can thus be written as:

k=1 (cid:24) GEM((cid:13)) are mutually independent. Since G0
k=1, each Gj necessarily has support at these points as well, and

(cid:25)jk(cid:14)(cid:30)k :

Gj =

1

Xk=1

9

(17)

Let (cid:25)j = ((cid:25)jk)1
given G0). We now describe how the weights (cid:25)j are related to the global weights (cid:12).

k=1. Note that the weights (cid:25)j are independent given (cid:12) (since the Gj are independent

Let (A1; : : : ; Ar) be a measurable partition of (cid:2) and let Kl = fk : (cid:30)k 2 Alg for l = 1; : : : ; r.
Note that (K1; : : : ; Kr) is a ﬁnite partition of the positive integers. Further, assuming that H is
non-atomic, the (cid:30)k’s are distinct with probability one, so any partition of the positive integers cor-
responds to some partition of (cid:2). Thus, for each j we have:

(Gj(A1); : : : ; Gj(Ar)) (cid:24) Dir((cid:11)0G0(A1); : : : ; (cid:11)0G0(Ar))

(18)

)0
@Xk2K1

(cid:25)jk; : : : ; Xk2Kr

A (cid:24) Dir0
(cid:25)jk1

@(cid:11)0 Xk2K1

(cid:12)k; : : : ; (cid:11)0 Xk2Kr

(cid:12)k1
A ;

for every ﬁnite partition of the positive integers. Hence each (cid:25) j is independently distributed accord-
ing to DP((cid:11)0; (cid:12)), where we interpret (cid:12) and (cid:25)j as probability measures on the positive integers. If
H is non-atomic then a weaker result still holds: if (cid:25)j (cid:24) DP((cid:11)0; (cid:12)) then Gj as given in (17) is still
DP((cid:11)0; G0) distributed.

As in the Dirichlet process mixture model, since each factor (cid:18)ji is distributed according to Gj, it
takes on the value (cid:30)k with probability (cid:25)jk. Again let zji be an indicator variable such that (cid:18)ji = (cid:30)zji.
Given zji we have xji (cid:24) F ((cid:30)zji). Thus we obtain an equivalent representation of the hierarchical
Dirichlet process mixture via the following conditional distributions:

(cid:12) j (cid:13) (cid:24) GEM((cid:13))

(cid:25)j j (cid:11)0; (cid:12) (cid:24) DP((cid:11)0; (cid:12))

(cid:30)k j H (cid:24) H

zji j (cid:25)j (cid:24) (cid:25)j

xji j zji; ((cid:30)k)1

k=1 (cid:24) F ((cid:30)zji) :

(19)

We now derive an explicit relationship between the elements of (cid:12) and (cid:25) j. Recall that the stick-

breaking construction for Dirichlet processes deﬁnes the variables (cid:12)k in (16) as follows:

(cid:12)0
k (cid:24) Beta(1; (cid:13))

(cid:12)k = (cid:12)0
k

k(cid:0)1

Yl=1

(1 (cid:0) (cid:12)0

l) :

(20)

Using (18), we show that the following stick-breaking construction produces a random probability
measure (cid:25)j (cid:24) DP((cid:11)0; (cid:12)):

(cid:25)0

jk (cid:24) Beta (cid:11)0(cid:12)k; (cid:11)0 1 (cid:0)

(cid:12)l!!

(cid:25)jk = (cid:25)0
jk

k

Xl=1

k(cid:0)1

Yl=1

(1 (cid:0) (cid:25)0

jl) :

(21)

To derive (21), ﬁrst notice that for a partition (f1; : : : ; k (cid:0) 1g; fkg; fk + 1; k + 2; : : :g), (18) gives:

 k(cid:0)1
Xl=1

(cid:25)jl; (cid:25)jk;

1

Xl=k+1

(cid:25)jl! (cid:24) Dir (cid:11)0

Xl=1

k(cid:0)1

1

(cid:12)l; (cid:11)0(cid:12)k; (cid:11)0

(cid:12)l! :

(22)

Xl=k+1

Removing the ﬁrst element, and using standard properties of the Dirichlet distribution, we have:

1

l=1 (cid:25)jl  (cid:25)jk;

1 (cid:0)Pk(cid:0)1
1(cid:0)Pk(cid:0)1

(cid:25)jk
l=1 (cid:25)jl

1

1

(cid:25)jl! (cid:24) Dir (cid:11)0(cid:12)k; (cid:11)0

Xl=k+1
and observe that 1 (cid:0) Pk

Xl=k+1
l=1 (cid:12)l = P1

jk =

l=k+1 (cid:12)l to obtain (21).
Finally, deﬁne (cid:25)0
Together with (20), (16) and (17), this completes the description of the stick-breaking construction
for hierarchical Dirichlet processes.

(cid:12)l! :

(23)

10

18

14

13

11

=
11

1

16

15

12

=y

12

=y

13

1

2

17

22

21

=y

21

3

26

24

23

=y

22

=y

23

3

28

27

=y

24

1

1

25

36

35

32

31

=y

31

1

34

33

=y

32

2

Figure 2: A depiction of a Chinese restaurant franchise. Each restaurant is represented by a rectan-
gle. Customers ((cid:18)ji’s) are seated at tables (circles) in the restaurants. At each table a dish is served.
The dish is served from a global menu ((cid:30)k), whereas the parameter  jt is a table-speciﬁc indicator
that serves to index items on the global menu. The customer (cid:18)ji sits at the table to which it has been
assigned in (24).

4.2 The Chinese restaurant franchise

In this section we describe an analog of the Chinese restaurant process for hierarchical Dirichlet
processes that we refer to as the Chinese restaurant franchise. In the Chinese restaurant franchise,
the metaphor of the Chinese restaurant process is extended to allow multiple restaurants which share
a set of dishes.

The metaphor is as follows (see Figure 2). We have a restaurant franchise with a shared menu
across the restaurants. At each table of each restaurant one dish is ordered from the menu by the
ﬁrst customer who sits there, and it is shared among all customers who sit at that table. Multiple
tables in multiple restaurants can serve the same dish.

In this setup, the restaurants correspond to groups and the customers correspond to the factors
(cid:18)ji. We also let (cid:30)1; : : : ; (cid:30)K denote K i.i.d. random variables distributed according to H; this is the
global menu of dishes. We also introduce variables  jt which represent the table-speciﬁc choice of
dishes; in particular,  jt is the dish served at table t in restaurant j.

Note that each (cid:18)ji is associated with one  jt, while each  jt is associated with one (cid:30)k. We
introduce indicators to denote these associations. In particular, let tji be the index of the  jt associ-
ated with (cid:18)ji, and let kjt be the index of (cid:30)k associated with  jt. In the Chinese restaurant franchise
metaphor, customer i in restaurant j sat at table tji while table t in restaurant j serves dish kjt.

We also need a notation for counts. In particular, we need to maintain counts of customers and
counts of tables. We use the notation njtk to denote the number of customers in restaurant j at
table t eating dish k. Marginal counts are represented with dots. Thus, njt(cid:1) represents the number
of customers in restaurant j at table t and nj(cid:1)k represents the number of customers in restaurant j
eating dish k. The notation mjk denotes the number of tables in restaurant j serving dish k. Thus,
mj(cid:1) represents the number of tables in restaurant j, m(cid:1)k represents the number of tables serving dish
k, and m(cid:1)(cid:1) the total number of tables occupied.

Let us now compute marginals under a hierarchical Dirichlet process when G0 and Gj are

11

f
f
f
y
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
f
f
f
f
f
f
f
f
integrated out. First consider the conditional distribution for (cid:18)ji given (cid:18)j1; : : : ; (cid:18)j;i(cid:0)1 and G0, where
Gj is integrated out. From (8):

(cid:18)ji j (cid:18)j1; : : : ; (cid:18)j;i(cid:0)1; (cid:11)0; G0 (cid:24)

mj (cid:1)

Xt=1

njt(cid:1)

i (cid:0) 1 + (cid:11)0

(cid:14) jt +

(cid:11)0

i (cid:0) 1 + (cid:11)0

G0 ;

(24)

This is a mixture, and a draw from this mixture can be obtained by drawing from the terms on the
right-hand side with probabilities given by the corresponding mixing proportions. If a term in the
ﬁrst summation is chosen then we set (cid:18)ji =  jt and let tji = t for the chosen t. If the second term
is chosen then we increment mj(cid:1) by one, draw  jmj (cid:1) (cid:24) G0 and set (cid:18)ji =  jmj (cid:1) and tji = mj(cid:1).

Now we proceed to integrate out G0. Notice that G0 appears only in its role as the distribution
of the variables  jt. Since G0 is distributed according to a Dirichlet process, we can integrate it out
by using (8) again and write the conditional distribution of  jt as:

 jt j  11;  12; : : : ;  21; : : : ;  j t(cid:0)1; (cid:13); H (cid:24)

m(cid:1)k

m(cid:1)(cid:1) + (cid:13)

(cid:14)(cid:30)k +

(cid:13)

m(cid:1)(cid:1) + (cid:13)

H :

(25)

K

Xk=1

If we draw  jt via choosing a term in the summation on the right-hand side of this equation, we set
 jt = (cid:30)k and let kjt = k for the chosen k. If the second term is chosen then we increment K by
one, draw (cid:30)K (cid:24) H and set  jt = (cid:30)K and kjt = K.

This completes the description of the conditional distributions of the (cid:18)ji variables. To use these
equations to obtain samples of (cid:18)ji, we proceed as follows. For each j and i, ﬁrst sample (cid:18)ji using
(24). If a new sample from G0 is needed, we use (25) to obtain a new sample  jt and set (cid:18)ji =  jt.
Note that in the hierarchical Dirichlet process the values of the factors are shared between the

groups, as well as within the groups. This is a key property of hierarchical Dirichlet processes.

4.3 The inﬁnite limit of ﬁnite mixture models

As in the case of a Dirichlet process mixture model, the hierarchical Dirichlet process mixture model
can be derived as the inﬁnite limit of ﬁnite mixtures. In this section, we present two apparently
different ﬁnite models that both yield the hierarchical Dirichlet process mixture in the inﬁnite limit,
each emphasizing a different aspect of the model.

Consider the following collection of ﬁnite mixture models, where (cid:12) is a global vector of mixing

proportions and (cid:25)j is a group-speciﬁc vector of mixing proportions:

(cid:12) j (cid:13) (cid:24) Dir((cid:13)=L; : : : ; (cid:13)=L)

(cid:25)j j (cid:11)0; (cid:12) (cid:24) Dir((cid:11)0(cid:12))

(cid:30)k j H (cid:24) H

zji j (cid:25)j (cid:24) (cid:25)j

xji j zji; ((cid:30)k)L

k=1 (cid:24) F ((cid:30)zji) :

(26)

The parametric hierarchical prior for (cid:12) and (cid:25) in (26) has been discussed by MacKay and Peto
(1994) as a model for natural languages. We will show that the limit of this model as L ! 1 is the
hierarchical Dirichlet process. Let us consider the random probability measures GL
k=1 (cid:12)k(cid:14)(cid:30)k
k=1 (cid:25)jk(cid:14)(cid:30)k. As in Section 3.4, for every measurable function f integrable with respect
and GL
to H we have

0 =PL

j =PL

Z f ((cid:18)) dGL

0 ((cid:18)) D(cid:0)!Z f ((cid:18)) dG0((cid:18)) ;

(27)

12

as L ! 1. Further, using standard properties of the Dirichlet distribution, we see that (18) still
holds for the ﬁnite case for partitions of f1; : : : ; Lg; hence we have:

GL

j (cid:24) DP((cid:11)0; GL

0 ) :

(28)

It is now clear that as L ! 1 the marginal distribution this ﬁnite model induces on x approaches
the hierarchical Dirichlet process mixture model.

There is an alternative ﬁnite model whose limit is also the hierarchical Dirichlet process mixture
model. Instead of introducing dependencies between the groups by placing a prior on (cid:12) (as in the
ﬁrst ﬁnite model), each group can instead choose a subset of T mixture components from a model-
wide set of L mixture components. In particular consider the following model:

(cid:12) j (cid:13) (cid:24) Dir((cid:13)=L; : : : ; (cid:13)=L)

(cid:25)j j (cid:11)0 (cid:24) Dir((cid:11)0=T; : : : ; (cid:11)0=T )

(cid:30)k j H (cid:24) H

kjt j (cid:12) (cid:24) (cid:12)
tji j (cid:25)j (cid:24) (cid:25)j

xji j tji; (kjt)T

t=1; ((cid:30)k)L

k=1 (cid:24) F ((cid:30)kjtji

) :

(29)

As T ! 1 and L ! 1, the limit of this model is the Chinese restaurant franchise process; hence
the inﬁnite limit of this model is also the hierarchical Dirichlet process mixture model.

5 INFERENCE

In this section we describe three related Markov chain Monte Carlo sampling schemes for the hi-
erarchical Dirichlet process mixture model. The ﬁrst is a straightforward Gibbs sampler based on
the Chinese restaurant franchise, the second is based upon an augmented representation involving
both the Chinese restaurant franchise and the posterior for G0, while the third is a variation on the
second sampling scheme with streamlined bookkeeping. To simplify the discussion we assume that
the base distribution H is conjugate to the data distribution F ; this allows us to focus on the issues
speciﬁc to the hierarchical Dirichlet process. The nonconjugate case can be approached by adapt-
ing to the hierarchical Dirichlet process techniques developed for nonconjugate DP mixtures (Neal
2000). Moreover, in this section we assume ﬁxed values for the concentration parameters (cid:11)0 and (cid:13);
we present a sampler for these parameters in the appendix.

We recall the random variables of interest. The variables xji are the observed data. Each xji
is assumed to arise as a draw from a distribution F ((cid:18)ji). Let the factor (cid:18)ji be associated with
the table tji in the restaurant representation; i.e., let (cid:18)ji =  jtji. The random variable  jt is an
instance of mixture component kjt; i.e.,  jt = (cid:30)kjt. The prior over the parameters (cid:30)k is H. Let
zji = kjtji denote the mixture component associated with the observation xji. We use the notation
njtk to denote the number of customers in restaurant j at table t eating dish k, while mjk denotes
the number of tables in restaurant j serving dish k. Marginal counts are represented with dots.

Let x = (xji : all j; i), xjt = (xji : all i with tji = t), t = (tji : all j; i), k = (kjt : all j; t),
z = (zji : all j; i), m = (mjk : all j; k) and (cid:30) = ((cid:30)1; : : : ; (cid:30)K). When a superscript is attached
to a set of variables or a count, e.g., x(cid:0)ji, k(cid:0)jt or n(cid:0)ji
jt(cid:1) , this means that the variable corresponding
to the superscripted index is removed from the set or from the calculation of the count.
In the
examples, x(cid:0)ji = xnxji, k(cid:0)jt = knkjt and n(cid:0)ji
is the number of observations in group j whose
jt(cid:1)
factor is associated with  jt, leaving out item xji.

Let F ((cid:18)) have density f ((cid:1)j(cid:18)) and H have density h((cid:1)). Since H is conjugate to F we integrate
out the mixture component parameters (cid:30) in the sampling schemes. Denote the conditional density

13

of xji under mixture component k given all data items except xji as

f (cid:0)xji
k

(xji) = R f (xjij(cid:30)k)Qj 0i06=ji;zj 0i0 =k f (xj 0i0j(cid:30)k)h((cid:30)k) d(cid:30)k

R Qj 0i06=ji;zj 0i0 =k f (xj 0i0j(cid:30)k)h((cid:30)k) d(cid:30)k

:

(30)

Similarly denote f (cid:0)xjt
mixture component k leaving out xjt.

k

(xjt) as the conditional density of xjt given all data items associated with

Finally, we will suppress references to all variables except those being sampled in the condi-

tional distributions to follow, in particular we omit references to x, (cid:11)0 and (cid:13).

5.1 Posterior sampling in the Chinese restaurant franchise

The Chinese restaurant franchise presented in Section 4.2 can be used to produce samples from
the prior distribution over the (cid:18)ji, as well as intermediary information related to the tables and
mixture components. This framework can be adapted to yield a Gibbs sampling scheme for posterior
sampling given observations x.

Rather than dealing with the (cid:18)ji’s and  jt’s directly, we shall sample their index variables tji
and kjt instead. The (cid:18)ji’s and  jt’s can be reconstructed from these index variables and the (cid:30)k’s.
This representation makes the Markov chain Monte Carlo sampling scheme more efﬁcient (cf. Neal
2000). Notice that the tji and the kjt inherit the exchangeability properties of the (cid:18)ji and the  jt—
the conditional distributions in (24) and (25) can be adapted to be expressed in terms of tji and kjt.
The state space consists of values of t and k. Notice that the number of kjt variables represented
explicitly by the algorithm is not ﬁxed. We can think of the actual state space as consisting of an
inﬁnite number of kjt’s; only ﬁnitely many are actually associated to data and represented explicitly.
Sampling t. To compute the conditional distribution of tji given the remainder of the variables,
we make use of exchangeability and treat tji as the last variable being sampled in the last group
in (24) and (25). We obtain the conditional posterior for tji by combining the conditional prior
distribution for tji with the likelihood of generating xji.

Using (24), the prior probability that tji takes on a particular previously used value t is pro-
jt(cid:1) , whereas the probability that it takes on a new value (say tnew = mj(cid:1) + 1) is
portional to n(cid:0)ji
proportional to (cid:11)0. The likelihood due to xji given tji = t for some previously used t is f (cid:0)xji
(xji).
The likelihood for tji = tnew can be calculated by integrating out the possible values of kjtnew
using (25):

k

p(xji j t(cid:0)ji; tji = tnew; k) =

K

Xk=1

m(cid:1)k

m(cid:1)(cid:1) + (cid:13)

f (cid:0)xji
k

(xji) +

(cid:13)

m(cid:1)(cid:1) + (cid:13)

f (cid:0)xji
knew (xji) ;

(31)

where f (cid:0)xji
tion of tji is then

knew (xji) =R f (xjij(cid:30))h((cid:30))d(cid:30) is simply the prior density of xji. The conditional distribu-

p(tji = t j t(cid:0)ji; k) /(n(cid:0)ji

jt(cid:1) f (cid:0)xji
(cid:11)0p(xjijt(cid:0)ji; tji = tnew; k)

(xji)

kjt

if t previously used,
if t = tnew.

If the sampled value of tji is tnew, we obtain a sample of kjtnew by sampling from (31):

p(kjtnew = k j t; k(cid:0)jtnew

) /(m(cid:1)kf (cid:0)xji

k
(cid:13)f (cid:0)xji

knew (xji)

(xji)

if k previously used,
if k = knew.

14

(32)

(33)

If as a result of updating tji some table t becomes unoccupied, i.e., njt(cid:1) = 0, then the probability
that this table will be reoccupied in the future will be zero, since this is always proportional to njt(cid:1).
As a result, we may delete the corresponding kjt from the data structure. If as a result of deleting
kjt some mixture component k becomes unallocated, we delete this mixture component as well.

Sampling k. Since changing kjt actually changes the component membership of all data items
(xjt), so that the conditional

in table t, the likelihood obtained by setting kjt = k is given by f (cid:0)xjt
probability of kjt is

k

p(kjt = k j t; k(cid:0)jt) /(m(cid:0)jt

(cid:1)k f (cid:0)xjt
knew (xjt)

k
(cid:13)f (cid:0)xjt

(xjt)

if k is previously used,
if k = knew.

(34)

5.2 Posterior sampling with an augmented representation

In the Chinese restaurant franchise sampling scheme, the sampling for all groups is coupled since
G0 is integrated out. This complicates matters in more elaborate models (e.g., in the case of the
hidden Markov model considered in Section 7). In this section we describe an alternative sampling
scheme where in addition to the Chinese restaurant franchise representation, G0 is instantiated and
sampled from so that the posterior conditioned on G0 factorizes across groups.

Given a posterior sample (t, k) from the Chinese restaurant franchise representation, we can
obtain a draw from the posterior of G0 by noting that G0 (cid:24) DP((cid:13); H) and  jt for each table t is a
).
draw from G0. Conditioning on the  jt’s, G0 is now distributed as DP((cid:13) + m(cid:1)(cid:1);
An explicit construction for G0 is now given as

(cid:13)H+PK

k=1 m(cid:1)k(cid:14)(cid:30)k
(cid:13)+m(cid:1)(cid:1)

(cid:12) = ((cid:12)1; : : : ; (cid:12)K; (cid:12)u) (cid:24) Dir(m(cid:1)1; : : : ; m(cid:1)K; (cid:13))

Gu (cid:24) DP((cid:13); H)

p((cid:30)k j t; k) / h((cid:30)k) Yji:kjtji =k

f (xjij(cid:30)k)

G0 =

K

Xk=1

(cid:12)k(cid:14)(cid:30)k + (cid:12)uGu

(35)

Given a sample of G0 the posterior for each group is factorized and sampling in each group can
be performed separately. The variables of interest in this scheme are t and k as in the Chinese
restaurant franchise sampling scheme and (cid:12) above, while both (cid:30) and Gu are integrated out (this
introduces couplings into the sampling for each group but is easily handled).

Sampling for t and k is almost identical to the Chinese restaurant franchise sampling scheme.
The only novelty is that we replace m(cid:1)k by (cid:12)k and (cid:13) by (cid:12)u in (31), (32), (33) and (34), and when
a new component knew is instantiated we draw b (cid:24) Beta(1; (cid:13)) and set (cid:12)knew = b(cid:12)u and (cid:12)new
u =
(1 (cid:0) b)(cid:12)u. We can understand b as follows: when a new component is instantiated, it is instantiated
from Gu by choosing an atom in Gu with probability given by its weight b. Using the fact that the
sequence of stick-breaking weights is a size-biased permutation of the weights in a draw from a
Dirichlet process (Pitman 1996), the weight b corresponding to the chosen atom in Gu will have the
same distribution as the ﬁrst stick-breaking weight, i.e., Beta(1; (cid:13)).

Sampling for (cid:12) has already been described in (35):

((cid:12)1; : : : ; (cid:12)K; (cid:12)u) j t; k (cid:24) Dir(m(cid:1)1; : : : ; m(cid:1)K; (cid:13)) :

(36)

5.3 Posterior sampling by direct assignment

In both the Chinese restaurant franchise and augmented representation sampling schemes, data items
are ﬁrst assigned to some table tji, and the tables are then assigned to some mixture component kjt.

15

This indirect association to mixture components can make the bookkeeping somewhat involved. In
this section we describe a variation on the augmented representation sampling scheme that directly
assigns data items to mixture components via a variable zji which is equivalent to kjtji in the earlier
sampling schemes. The tables are only represented in terms of the numbers of tables mjk.

Sampling z can be realized by grouping together terms associated with each k in (31) and (32):

p(zji = k j z(cid:0)ji; m; (cid:12)) =((n(cid:0)ji

(cid:11)0(cid:12)uf (cid:0)xji

knew (xji)

j(cid:1)k + (cid:11)0(cid:12)k)f (cid:0)xji

k

(xji)

if k previously used,
if k = knew.

(37)

where we have replaced m(cid:1)k with (cid:12)k and (cid:13) with (cid:12)u.

Sampling m. In the augmented representation sampling scheme, conditioned on the assignment
of data items to mixture components z, the only effect of t and k on other variables is via m in
the conditional distribution of (cid:12) in (36). As a result it is sufﬁcient to sample m in place of t and
k. To obtain the distribution of mjk conditioned on other variables, consider the distribution of tji
assuming that kjtji = zji. The probability that data item xji is assigned to some table t such that
kjt = k is

p(tji = tjkjt = k; t(cid:0)ji; k; (cid:12)) / n(cid:0)ji
jt(cid:1)

;

while the probability that it is assigned a new table under component k is

p(tji = tnewjkjtnew = k; t(cid:0)ji; k; (cid:12)) / (cid:11)0(cid:12)k :

(38)

(39)

These equations form the conditional distributions of a Gibbs sampler whose equilibrium distribu-
tion is the prior distribution over the assignment of nj(cid:1)k observations to components in an ordinary
Dirichlet process with concentration parameter (cid:11)0(cid:12)k. The corresponding distribution over the num-
ber of components is then the desired conditional distribution of mjk. Antoniak (1974) has shown
that this is:

p(mjk = m j z; m(cid:0)jk; (cid:12)) =

(cid:0)((cid:11)0(cid:12)k)

(cid:0)((cid:11)0(cid:12)k + nj(cid:1)k)

s(nj(cid:1)k; m)((cid:11)0(cid:12)k)m ;

(40)

where s(n; m) are unsigned Stirling numbers of the ﬁrst kind. We have by deﬁnition that s(0; 0) =
s(1; 1) = 1, s(n; 0) = 0 for n > 0 and s(n; m) = 0 for m > n. Other entries can be computed as
s(n + 1; m) = s(n; m (cid:0) 1) + ns(n; m).

Sampling for (cid:12) is the same as in the augmented sampling scheme and is given by (36).

5.4 Comparison of Sampling Schemes

Let us now consider the relative merits of these three sampling schemes. In terms of ease of im-
plementation, the direct assignment scheme is preferred because its bookkeeping is straightforward.
The two schemes based on the Chinese restaurant franchise involve more substantial effort. In ad-
dition, both the augmented and direct assignment schemes sample rather than integrate out G0, and
as a result the sampling of the groups is decoupled given G0. This simpliﬁes the sampling schemes
and makes them applicable in elaborate models such as the hidden Markov model in Section 7.

In terms of convergence speed, the direct assignment scheme changes the component mem-
bership of data items one at a time, while in both schemes using the Chinese restaurant franchise
changing the component membership of one table will change the membership of multiple data
items at the same time, leading to potentially improved performance. This is akin to split-and-merge

16

techniques in Dirichlet process mixture modeling (Jain and Neal 2000). This analogy is, however,
somewhat misleading in that unlike split-and-merge methods, the assignment of data items to tables
is a consequence of the prior clustering effect of a Dirichlet process with nj(cid:1)k samples. As a result,
we expect that the probability of obtaining a successful reassignment of a table to another previ-
ously used component will often be small, and we do not necessarily expect the Chinese restaurant
franchise schemes to dominate the direct assignment scheme.

The inference methods presented here should be viewed as ﬁrst steps in the development of
inference procedures for hierarchical Dirichlet process mixtures. More sophisticated methods—
such as split-and-merge methods (Jain and Neal 2000) and variational methods (Blei and Jordan
2005)—have shown promise for Dirichlet processes and we expect that they will prove useful for
hierarchical Dirichlet processes as well.

6 EXPERIMENTS

We describe two experiments in this section to highlight the two aspects of the hierarchical Dirichlet
process: its nonparametric nature and its hierarchical nature. In the next section we present a third
experiment highlighting the ease with which we can extend the framework to more complex models,
speciﬁcally a hidden Markov model with a countably inﬁnite state space.

6.1 Document modeling

Recall the problem of document modeling discussed in Section 1. Following standard method-
ology in the information retrieval literature (Salton and McGill 1983), we view a document as a
“bag of words”; that is, we make an exchangeability assumption for the words in the document.
Moreover, we model the words in a document as arising from a mixture model, in which a mixture
component—a “topic”—is a multinomial distribution over words from some ﬁnite and known vo-
cabulary. The goal is to model a corpus of documents in such a way as to allow the topics to be
shared among the documents in a corpus.

A parametric approach to this problem is provided by the latent Dirichlet allocation (LDA)
model of Blei et al. (2003). This model involves a ﬁnite mixture model in which the mixing propor-
tions are drawn on a document-speciﬁc basis from a Dirichlet distribution. Moreover, given these
mixing proportions, each word in the document is an independent draw from the mixture model.
That is, to generate a word, a mixture component (i.e., a topic) is selected, and then a word is
generated from that topic.

Note that the assumption that each word is associated with a possibly different topic differs from
a model in which a mixture component is selected once per document, and then words are generated
i.i.d. from the selected topic. Moreover, it is interesting to note that the same distinction arises in
population genetics, where multiple words in a document are analogous to multiple markers along a
chromosome. Indeed, Pritchard et al. (2000) have developed a model in which marker probabilities
are selected once per marker; their model is essentially identical to LDA.

As in simpler ﬁnite mixture models, it is natural to try to extend LDA and related models by
using Dirichlet processes to capture uncertainty regarding the number of mixture components. This
is somewhat more difﬁcult than in the case of a simple mixture model, however, because in the LDA
model the documents have document-speciﬁc mixing proportions. We thus require multiple DPs,
one for each document. This then poses the problem of sharing mixture components across multiple
DPs, precisely the problem that the hierarchical DP is designed to solve.

17

Perplexity on test abstacts of LDA and HDP mixture

Posterior over number of topics in HDP mixture

1050

1000

950

900

850

800

y
t
i
x
e
l
p
r
e
P

750

10

20

30

40

LDA
HDP Mixture

50

60

Number of LDA topics

70

80

90 100 110 120

s
e
l
p
m
a
s
 
f
o
 
r
e
b
m
u
N

15

10

5

0

61 62 63 64 65 66 67 68 69 70 71 72 73

Number of topics

Figure 3: (Left) Comparison of latent Dirichlet allocation and the hierarchical Dirichlet process mixture.
Results are averaged over 10 runs; the error bars are one standard error. (Right) Histogram of the number of
topics for the hierarchical Dirichlet process mixture over 100 posterior samples.

The hierarchical DP extension of LDA thus takes the following form. Given an underlying
measure H on multinomial probability vectors, we select a random measure G0 which provides a
countably inﬁnite collection of multinomial probability vectors; these can be viewed as the set of all
topics that can be used in a given corpus. For the jth document in the corpus we sample Gj using
G0 as a base measure; this selects speciﬁc subsets of topics to be used in document j. From Gj
we then generate a document by repeatedly sampling speciﬁc multinomial probability vectors (cid:18)ji
from Gj and sampling words xji with probabilities (cid:18)ji. The overlap among the random measures
Gj implements the sharing of topics among documents.

We ﬁt both the standard parametric LDA model and its hierarchical DP extension to a corpus
of nematode biology abstracts (see http://elegans.swmed.edu/wli/cgcbib). There are 5838 abstracts
in total. After removing standard stop words and words appearing fewer than 10 times, we are left
with 476441 words in total. Following standard information retrieval methodology, the vocabulary
is deﬁned as the set of distinct words left in all abstracts; this has size 5699.

Both models were as similar as possible beyond the distinction that LDA assumes a ﬁxed ﬁnite
number of topics while the hierarchical Dirichlet process does not. Both models used a symmetric
Dirichlet distribution with parameters of 0:5 for the prior H over topic distributions. The concen-
tration parameters were given vague gamma priors, (cid:13) (cid:24) Gamma(1; :1) and (cid:11)0 (cid:24) Gamma(1; 1).
The distribution over topics in LDA is assumed to be symmetric Dirichlet with parameters (cid:11)0=L
with L being the number of topics; (cid:13) is not used in LDA. Posterior samples were obtained using the
Chinese restaurant franchise sampling scheme, while the concentration parameters were sampled
using the auxiliary variable sampling scheme presented in the appendix.

We evaluated the models via 10-fold cross-validation. The evaluation metric was the perplex-
ity, a standard metric in the information retrieval literature. The perplexity of a held-out abstract
consisting of words w1; : : : ; wI is deﬁned to be:

exp(cid:18)(cid:0)

1
I

log p(w1; : : : ; wI jTraining corpus)(cid:19)

(41)

where p((cid:1)) is the probability mass function for a given model.

The results are shown in Figure 3. For LDA we evaluated the perplexity for mixture component
cardinalities ranging between 10 and 120. As seen in Figure 3 (Left), the hierarchical DP mixture
approach—which integrates over the mixture component cardinalities—performs as well as the

18

best LDA model, doing so without any form of model selection procedure. Moreover, as shown in
Figure 3 (Right), the posterior over the number of topics obtained under the hierarchical DP mixture
model is consistent with this range of the best-ﬁtting LDA models.

6.2 Multiple corpora

We now consider the problem of sharing clusters among the documents in multiple corpora. We
approach this problem by extending the hierarchical Dirichlet process to a third level. A draw from
a top-level DP yields the base measure for each of a set of corpus-level DPs. Draws from each
of these corpus-level DPs yield the base measures for DPs associated with the documents within a
corpus. Finally, draws from the document-level DPs provide a representation of each document as
a probability distribution across topics (which are distributions across words). The model allows
topics to be shared both within each corpus and between corpora.

The documents that we used for these experiments consist of articles from the proceedings
of the Neural Information Processing Systems (NIPS) conference for the years 1988-1999. The
original articles are available at http://books.nips.cc; we use a preprocessed version available at
http://www.cs.utoronto.ca/(cid:24)roweis/nips. The NIPS conference deals with a range of topics covering
both human and machine intelligence. Articles are separated into nine sections: algorithms and
architectures (AA), applications (AP), cognitive science (CS), control and navigation (CN), imple-
mentations (IM), learning theory (LT), neuroscience (NS), signal processing (SP), vision sciences
(VS). (These are the sections used in the years 1995-1999. The sectioning in earlier years differed
slightly; we manually relabeled sections from the earlier years to match those used in 1995-1999.)
We treat these sections as “corpora,” and are interested in the pattern of sharing of topics among
these corpora.

There were 1447 articles in total. Each article was modeled as a bag-of-words. We culled
standard stop words as well as words occurring more than 4000 or fewer than 50 times in the whole
corpus. This left us with on average slightly more than 1000 words per article.

We considered the following experimental setup. Given a set of articles from a single NIPS
section that we wish to model (the VS section in the experiments that we report below), we wish to
know whether it is of value (in terms of prediction performance) to include articles from other NIPS
sections. This can be done in one of two ways: we can lump all of the articles together without
regard for the division into sections, or we can use the hierarchical DP approach to link the sections.
Thus we consider three models (see Figure 4 for graphical representations of these models):

(cid:15) M1: This model ignores articles from the other sections and simply uses a hierarchical DP
mixture of the kind presented in Section 6.1 to model the VS articles. This model serves as
a baseline. We used (cid:13) (cid:24) Gamma(5; 0:1) and (cid:11)0 (cid:24) Gamma(0:1; 0:1) as prior distributions
for the concentration parameters.

(cid:15) M2: This model incorporates articles from other sections, but ignores the distinction into
sections, using a single hierarchical DP mixture model to model all of the articles. Priors of
(cid:13) (cid:24) Gamma(5; 0:1) and (cid:11)0 (cid:24) Gamma(0:1; 0:1) were used.

(cid:15) M3: This model takes a full hierarchical approach and models the NIPS sections as multiple
corpora, linked via the hierarchical DP mixture formalism. The model is a tree, in which the
root is a draw from a single DP for all articles, the ﬁrst level is a set of draws from DPs for the
NIPS sections, and the second level is set of draws from DPs for the articles within sections.
Priors of (cid:13) (cid:24) Gamma(5; 0:1), (cid:11)0 (cid:24) Gamma(5; 0:1), and (cid:11)1 (cid:24) Gamma(0:1; 0:1) were
used.

19

H

G0

0a

Gj

ji

xji

Gj

ji

xji

H

G0

0a

Gj

ji

xji

Gj

ji

xji

Gj

ji

xji

H

G0

Gj

ji

xji

0a

a 1

G1

Gj

ji

xji

G2

Gj

ji

xji

VS Training
documents

VS Test
documents

Additional training

documents

VS Training
documents

VS Test
documents

Additional training

documents

VS Training
documents

VS Test
documents

M1

M2

M3

Figure 4: Three models for the NIPS data. From left to right: M1, M2 and M3.

In all models a ﬁnite and known vocabulary is assumed and the base measure H used is a symmetric
Dirichlet distribution with parameters of 0:5.

We conducted experiments in which a set of 80 articles were chosen uniformly at random from
one of the sections other than VS (this was done to balance the impact of different sections, which
are of different sizes). A training set of 80 articles were also chosen uniformly at random from the
VS section, as were an additional set of 47 test articles distinct from the training articles. Results
report predictive performance on VS test articles based on a training set consisting of the 80 arti-
cles in the additional section and N VS training articles where N varies between 0 and 80. The
direct assignment sampling scheme is used, while concentration parameters are sampled using the
auxiliary variable sampling scheme in the appendix.

Figure 5 (Left) presents the average predictive performance for all three models over 5 runs as
the number N of VS training articles ranged from 0 to 80. The performance is measured in terms
of the perplexity of single words in the test articles given the training articles, averaged over the
choice of which additional section was used. As seen in the ﬁgure, the fully hierarchical model M3
performs best, with perplexity decreasing rapidly with modest values of N. For small values of N,
the performance of M1 is quite poor, but the performance approaches that of M3 when more than 20
articles are included in the VS training set. The performance of the partially-hierarchical M2 was
poorer than the fully-hierarchical M3 throughout the range of N. M2 dominated M1 for small N,
but yielded poorer performance than M1 for N greater than 14. Our interpretation is that the sharing
of strength based on other articles is useful when little other information is available (small N), but
that eventually (medium to large N) there is crosstalk between the sections and it is preferable to
model them separately and share strength via the hierarchy.

While the results in Figure 5 (Left) are an average over the sections, it is also of interest to
see which sections are the most beneﬁcial in terms of enhancing the prediction of the articles in
VS. Figure 5 (Right) plots the predictive performance for model M3 when given data from each
of three particular sections: LT, AA and AP. While articles in the LT section are concerned mostly
with theoretical properties of learning algorithms, those in AA are mostly concerned with models
and methodology, and those in AP are mostly concerned with applications of learning algorithms to

20

q
g
q
q
g
q
q
q
g
q
q
Average perplexity over NIPS sections of 3 models

Generalization from LT, AA, AP to VS

6000

5500

5000

4500

4000

3500

3000

y
t
i
x
e
l
p
r
e
P

2500
0

10

M1: additional sction ignored
M2: flat, additional section
M3: hierarchical, additional section

20
60
Number of VS training documents

30

40

50

5000

4500

4000

3500

3000

y
t
i
x
e
l
p
r
e
P

70

80

2500
0

10

LT
AA
AP

70

80

20
60
Number of VS training documents

30

40

50

Figure 5: (Left) Perplexity of single words in test VS articles given training articles from VS and another
section for 3 different models. Curves shown are averaged over the other sections and 5 runs.
(Right)
Perplexity of test VS articles given LT, AA and AP articles respectively, using M3, averaged over 5 runs. In
both plots, the error bars represent one standard error.

various problems. As seen in the ﬁgure, we see that predictive performance is enhanced the most
by prior exposure to articles from AP, less by articles from AA, and still less by articles from LT.
Given that articles in VS tend to be concerned with the practical application of learning algorithms
to problems in computer vision, this pattern of transfer seems reasonable.

Finally, it is of interest to investigate the subject matter content of the topics discovered by the
hierarchical DP model. We did so in the following experimental setup. For a given section other
than VS (e.g., AA), we ﬁt a model based on articles from that section. We then introduced articles
from the VS section and continued to ﬁt the model, while holding the topics found from the earlier
ﬁt ﬁxed, and recording which topics from the earlier section were allocated to words in the VS
section. Table 1 displays representations of the two most frequently occurring topics in this setup
(a topic is represented by the set of words which have highest probability under that topic). These
topics provide qualitative conﬁrmation of our expectations regarding the overlap between VS and
other sections.

7 HIDDEN MARKOV MODELS

The simplicity of the hierarchical DP speciﬁcation—the base measure for a DP is distributed as a
DP—makes it straightforward to exploit the hierarchical DP as a building block in more complex
models. In this section we demonstrate this in the case of the hidden Markov model.

Recall that a hidden Markov model (HMM) is a doubly stochastic Markov chain in which a
sequence of multinomial “state” variables (v1; v2; : : : ; vT ) are linked via a state transition matrix,
and each element yt in a sequence of “observations” (y1; y2; : : : ; yT ) is drawn independently of
the other observations conditional on vt (Rabiner 1989). This is essentially a dynamic variant of a
ﬁnite mixture model, in which there is one mixture component corresponding to each value of the
multinomial state. As with classical ﬁnite mixtures, it is interesting to consider replacing the ﬁnite
mixture underlying the HMM with a Dirichlet process.

Note that the HMM involves not a single mixture model, but rather a set of mixture models—
one for each value of the current state. That is, the “current state” vt indexes a speciﬁc row of the
transition matrix, with the probabilities in this row serving as the mixing proportions for the choice

21

Table 1: Topics shared between VS and the other NIPS sections. These topics are the most fre-
quently occurring in the VS ﬁt, under the constraint that they are associated with a signiﬁcant
number of words (greater than 2500) from the other section.

CS

NS

LT

AA

IM

SP

AP

CN

task representation pattern processing trained representations three process unit
patterns
examples concept similarity bayesian hypotheses generalization numbers positive
classes hypothesis

cells cell activity response neuron visual patterns pattern single ﬁg
visual cells cortical orientation receptive contrast spatial cortex stimulus tuning

signal layer gaussian cells ﬁg nonlinearity nonlinear rate eq cell
large examples form point see parameter consider random small optimal

algorithms test approach methods based point problems form large paper
distance tangent image images transformation transformations pattern vectors convolu-
tion simard

processing pattern approach architecture single shows simple based large control
motion visual velocity ﬂow target chip eye smooth direction optical

visual images video language image pixel acoustic delta lowpass ﬂow
signals separation signal sources source matrix blind mixing gradient eq

approach based trained test layer features table classiﬁcation rate paper
image images face similarity pixel visual database matching facial examples

ii tree pomdp observable strategy class stochastic history strategies density
policy optimal reinforcement control action states actions step problems goal

22

0a

H

kp

v0

k
8

v1

y1

v
2

y2

v
T

y
T

Figure 6: A graphical representation of a hierarchical Dirichlet process hidden Markov model.

of the “next state” vt+1. Given the next state vt+1, the observation yt+1 is drawn from the mixture
component indexed by vt+1. Thus, to consider a nonparametric variant of the HMM which allows
an unbounded set of states, we must consider a set of DPs, one for each value of the current state.
Moreover, these DPs must be linked, because we want the same set of “next states” to be reachable
from each of the “current states.” This amounts to the requirement that the atoms associated with
the state-conditional DPs should be shared—exactly the framework of the hierarchical DP.

Thus, we can deﬁne a nonparametric hidden Markov model by simply replacing the set of con-
ditional ﬁnite mixture models underlying the classical HMM with a hierarchical Dirichlet process
mixture model. We refer to the resulting model as a hierarchical Dirichlet process hidden Markov
model (HDP-HMM). The HDP-HMM provides an alternative to methods that place an explicit para-
metric prior on the number of states or make use of model selection methods to select a ﬁxed number
of states (Stolcke and Omohundro 1993).

In work that served as an inspiration for the HDP-HMM, Beal et al. (2002) discussed a model
known as the inﬁnite hidden Markov model, in which the number of hidden states of a hidden
Markov model is allowed to be countably inﬁnite. Indeed, Beal et al. (2002) deﬁned a notion of
“hierarchical Dirichlet process” for this model, but their “hierarchical Dirichlet process” is not hier-
archical in the Bayesian sense—involving a distribution on the parameters of a Dirichlet process—
but is instead a description of a coupled set of urn models. We brieﬂy review this construction, and
relate it to our formulation.

Beal et al. (2002) considered the following two-level procedure for determining the transition
probabilities of a Markov chain with an unbounded number of states. At the ﬁrst level, the prob-
ability of transitioning from a state u to a state v is proportional to the number of times the same
transition is observed at other time steps, while with probability proportional to (cid:11)0 an “oracle” pro-
cess is invoked. At this second level, the probability of transitioning to state v is proportional to
the number of times state v has been chosen by the oracle (regardless of the previous state), while
the probability of transitioning to a novel state is proportional to (cid:13). The intended role of the oracle
is to tie together the transition models so that they have destination states in common, in much the
same way that the baseline distribution G0 ties together the group-speciﬁc mixture components in
the hierarchical Dirichlet process.

To relate this two-level urn model to the hierarchical DP framework, let us describe a represen-
tation of the HDP-HMM using the stick-breaking formalism. In particular, consider the hierarchical
Dirichlet process representation shown in Figure 6. The parameters in this representation have the
following distributions:

(cid:12) j (cid:13) (cid:24) GEM((cid:13))

(cid:25)k j (cid:11)0; (cid:12) (cid:24) DP((cid:11)0; (cid:12))

(cid:30)k j H (cid:24) H ;

(42)

23

f
g
b
for each k = 1; 2; : : :, while for time steps t = 1; : : : ; T the state and observation distributions are:

vt j vt(cid:0)1; ((cid:25)k)1

k=1 (cid:24) (cid:25)vt(cid:0)1

yt j vt; ((cid:30)k)1

k=1 (cid:24) F ((cid:30)vt) ;

(43)

where we assume for simplicity that there is a distinguished initial state v0. If we now consider
the Chinese restaurant franchise representation of this model as discussed in Section 5, it turns out
that the result is equivalent to the coupled urn model of Beal et al. (2002), hence the inﬁnite hidden
Markov model is an HDP-HMM.

Unfortunately, posterior inference using the Chinese restaurant franchise representation is awk-
ward for this model, involving substantial bookkeeping. Indeed, Beal et al. (2002) did not present
an MCMC inference algorithm for the inﬁnite hidden Markov model, proposing instead a heuristic
approximation to Gibbs sampling. On the other hand, both the augmented representation and di-
rect assignment representations lead directly to MCMC sampling schemes that are straightforward
to implement. In the experiments reported in the following section we used the direct assignment
representation.

Practical applications of hidden Markov models often consider sets of sequences, and treat these
sequences as exchangeable at the level of sequences. Thus, in applications to speech recognition, a
hidden Markov model for a given word in the vocabulary is generally trained via replicates of that
word being spoken. This setup is readily accommodated within the hierarchical DP framework by
simply considering an additional level of the Bayesian hierarchy, letting a master Dirichlet process
couple each of the HDP-HMMs, each of which is a set of Dirichlet processes.

7.1 Alice in Wonderland

In this section we report experimental results for the problem of predicting strings of letters in
sentences taken from Lewis Carroll’s Alice’s Adventures in Wonderland, comparing the HDP-HMM
to other HMM-related approaches.

Each sentence is treated as a sequence of letters and spaces (rather than as a sequence of words).
There are 27 distinct symbols (26 letters and space); cases and punctuation marks are ignored.
There are 20 training sentences with average length of 51 symbols, and there are 40 test sentences
with an average length of 100. The base distribution H is a symmetric Dirichlet distribution over
27 symbols with parameters 0:1. The concentration parameters (cid:13) and (cid:11)0 are given Gamma(1; 1)
priors.

Using the direct assignment sampling method for posterior predictive inference, we compared
the HDD-HMM to a variety of other methods for prediction using hidden Markov models: (1) a
classical HMM using maximum likelihood (ML) parameters obtained via the Baum-Welch algo-
rithm (Rabiner 1989), (2) a classical HMM using maximum a posteriori (MAP) parameters, taking
the priors to be independent, symmetric Dirichlet distributions for both the transition and emission
probabilities, and (3) a classical HMM trained using an approximation to a full Bayesian analysis—
in particular, a variational Bayesian (VB) method due to MacKay (1997) and described in detail in
Beal (2003). For each of these classical HMMs, we conducted experiments for each value of the
state cardinality ranging from 1 to 60.

We present the perplexity on test sentences in Figure 7 (Left). For VB, the predictive probability
is intractable to compute, so the modal setting of parameters was used. Both MAP and VB models
were given optimal settings of the hyperparameters found using the HDP-HMM. We see that the
HDP-HMM has a lower perplexity than all of the models tested for ML, MAP, and VB. Figure 7
(Right) shows posterior samples of the number of states used by the HDP-HMM.

24

y
t
i
x
e
l
p
r
e
P

50

40

30

20

10

0
0

Perplexity on test sentences of Alice

Posterior over number of states in HDP−HMM

ML
MAP
VB

10

20
40
Number of hidden states

30

50

60

s
e
l
p
m
a
s
 
f
o

 
r
e
b
m
u
N

100

80

60

40

20

0

25

30

35

40
Number of states

45

50

Figure 7: (Left) Comparing the HDP-HMM (solid horizontal line) with ML, MAP and VB trained hidden
Markov models. The error bars represent one standard error (those for the HDP-HMM are too small to see).
(Right) Histogram for the number of states in the HDP-HMM over 1000 posterior samples.

8 DISCUSSION

We have described a nonparametric approach to the modeling of groups of data, where each group is
characterized by a mixture model and we allow mixture components to be shared between groups.
We have proposed a hierarchical Bayesian solution to this problem, in which a set of Dirichlet
processes are coupled via their base measure, which is itself distributed according to a Dirichlet
process.

We have described three different representations that capture aspects of the hierarchical Dirich-
let process. In particular, we described a stick-breaking representation that describes the random
measures explicitly, a representation of marginals in terms of an urn model that we referred to as
the “Chinese restaurant franchise,” and a representation of the process in terms of an inﬁnite limit
of ﬁnite mixture models.

These representations led to the formulation of three Markov chain Monte Carlo sampling
schemes for posterior inference under hierarchical Dirichlet process mixtures. The ﬁrst scheme
is based directly on the Chinese restaurant franchise representation, the second scheme represents
the posterior using both a Chinese restaurant franchise and a sample from the global measure, while
the third uses a direct assignment of data items to mixture components.

Clustering is an important activity in many large-scale data analysis problems in engineering
and science, reﬂecting the heterogeneity that is often present when data are collected on a large
scale. Clustering problems can be approached within a probabilistic framework via ﬁnite mixture
models (Fraley and Raftery 2002; Green and Richardson 2001), and recent years have seen nu-
merous examples of applications of ﬁnite mixtures and their dynamical cousins the HMM in areas
such as bioinformatics (Durbin et al. 1998), speech recognition (Huang et al. 2001), information
retrieval (Blei et al. 2003) and computational vision (Forsyth and Ponce 2002). These areas also
provide numerous instances of data analyses which involve multiple, linked sets of clustering prob-
lems, for which classical clustering methods (model-based or non-model-based) provide little in the
way of leverage. In bioinformatics we have already alluded to the problem of ﬁnding haplotype
structure in subpopulations. Other examples in bioinformatics include the use of HMMs for amino
acid sequences, where a hierarchical DP version of the HMM would allow motifs to be discov-
ered and shared among different families of proteins. In speech recognition multiple HMMs are

25

already widely used, in the form of word-speciﬁc and speaker-speciﬁc models, and adhoc meth-
ods are generally used to share statistical strength among models. We have discussed examples
of grouped data in information retrieval; other examples include problems in which groups are in-
dexed by author or by language. Finally, computational vision and robotics problems often involve
sets of descriptors or objects that are arranged in a taxonomy. Examples such as these, in which
there is substantial uncertainty regarding appropriate numbers of clusters, and in which the sharing
of statistical strength among groups is natural and desirable, suggest that the hierarchical nonpara-
metric Bayesian approach to clustering presented here may provide a generally useful extension of
model-based clustering.

A Posterior sampling for concentration parameters

MCMC samples from the posterior distributions for the concentration parameters (cid:13) and (cid:11)0 of the
hierarchical Dirichlet process can be obtained using straightforward extensions of analogous tech-
niques for Dirichlet processes. Let the number of observed groups be equal to J, with nj(cid:1)(cid:1) observa-
tions in the jth group. Consider the Chinese restaurant franchise representation. The concentration
parameter (cid:11)0 governs the distribution of the number of  jt’s in each mixture. As noted in Sec-
tion 5.3 this is given by:

p(m1(cid:1); : : : ; mJ (cid:1)j(cid:11)0; n1(cid:1)(cid:1); : : : ; nJ (cid:1)(cid:1)) =

s(nj(cid:1)(cid:1); mj(cid:1))(cid:11)mj (cid:1)

0

(cid:0)((cid:11)0)

(cid:0)((cid:11)0 + nj(cid:1)(cid:1))

:

(44)

J

Yj=1

Further, (cid:11)0 does not govern other aspects of the joint distribution, hence (44) along with the prior
for (cid:11)0 is sufﬁcient to derive MCMC updates for (cid:11)0 given all other variables.

In the case of a single mixture model (J = 1), Escobar and West (1995) proposed a gamma prior
and derived an auxiliary variable update for (cid:11)0, while Rasmussen (2000) observed that (44) is log-
concave in log((cid:11)0) and proposed using adaptive rejection sampling instead. The adaptive rejection
sampler of Rasmussen (2000) can be directly applied to the case J > 1 since the conditional
distribution of log((cid:11)0) is still log-concave. The auxiliary variable method of Escobar and West
(1995) requires a slight modiﬁcation for the case J > 1. Assume that the prior for (cid:11)0 is a gamma
distribution with parameters a and b. For each j we can write

(cid:0)((cid:11)0)

(cid:0)((cid:11)0 + nj(cid:1)(cid:1))

=

1

(cid:0)(nj(cid:1)(cid:1))Z 1

0

w(cid:11)0

j (1 (cid:0) wj)nj (cid:1)(cid:1)(cid:0)1(cid:18)1 +

nj(cid:1)(cid:1)

(cid:11)0 (cid:19) dwj :

(45)

We deﬁne auxiliary variables w = (wj)J
values in [0; 1], and each sj is a binary f0; 1g variable, and deﬁne the following distribution:

j=1 where each wj is a variable taking on

j=1 and s = (sj)J

q((cid:11)0; w; s) / (cid:11)a(cid:0)1+m(cid:1)(cid:1)

0

e(cid:0)(cid:11)0b

J

Yj=1

w(cid:11)0

(cid:11)0 (cid:19)sj
j (1 (cid:0) wj)nj (cid:1)(cid:1)(cid:0)1(cid:18) nj(cid:1)(cid:1)

:

(46)

Now marginalizing q to (cid:11)0 gives the desired conditional distribution for (cid:11)0. Hence q deﬁnes an
auxiliary variable sampling scheme for (cid:11)0. Given w and s we have:

q((cid:11)0jw; s) / (cid:11)

a(cid:0)1+m(cid:1)(cid:1)(cid:0)PJ

0

j=1 sj

e(cid:0)(cid:11)0(b(cid:0)PJ

j=1 log wj ) ;

(47)

26

which is a gamma distribution with parameters a + m(cid:1)(cid:1) (cid:0)PJ

the wj and sj are conditionally independent, with distributions:

j=1 sj and b (cid:0)PJ

j=1 log wj. Given (cid:11)0,

q(wjj(cid:11)0) / w(cid:11)0

j (1 (cid:0) wj)nj (cid:1)(cid:1)(cid:0)1

(cid:11)0 (cid:19)sj
q(sjj(cid:11)0) /(cid:18) nj(cid:1)(cid:1)

;

(48)

(49)

which are beta and binomial distributions respectively. This completes the auxiliary variable sam-
pling scheme for (cid:11)0. We prefer the auxiliary variable sampling scheme as it is easier to implement
and typically mixes quickly (within 20 iterations).

Given the total number m(cid:1)(cid:1) of  jt’s, the concentration parameter (cid:13) governs the distribution over

the number of components K:

p(Kj(cid:13); m(cid:1)(cid:1)) = s(m(cid:1)(cid:1); K)(cid:13)K

(cid:0)((cid:13))

(cid:0)((cid:13) + m(cid:1)(cid:1))

:

(50)

Again other variables are independent of (cid:13) given m(cid:1)(cid:1) and K, hence we may apply the techniques of
Escobar and West (1995) or Rasmussen (2000) directly to sampling (cid:13).

Acknowledgments

We wish to acknowledge helpful discussions with Lancelot James. We also wish to acknowledge
support from Intel Corporation, Microsoft Research, and a grant from Darpa in support of the CALO
program.

References

Aldous, D. (1985), “Exchangeability and Related Topics,” in ´Ecole d’ ´Et´e de Probabilit´es de Saint-

Flour XIII–1983, Springer, Berlin, pp. 1–198.

Antoniak, C. (1974), “Mixtures of Dirichlet Processes with Applications to Bayesian Nonparametric

Problems,” Annals of Statistics, 2(6), pp. 1152–1174.

Beal, M. (2003), “Variational Algorithms for Approximate Bayesian Inference,” Ph.D. thesis,

Gatsby Computational Neuroscience Unit, University College London.

Beal, M. J., Ghahramani, Z., and Rasmussen, C. (2002), “The Inﬁnite Hidden Markov Model,” in
T. G. Dietterich, S. Becker, and Z. Ghahramani (eds.) Advances in Neural Information Processing
Systems, Cambridge, MA: MIT Press, vol. 14, pp. 577–584.

Blackwell, D. and MacQueen, J. (1973), “Ferguson Distributions via P ´olya Urn Schemes,” Annals

of Statistics, 1, pp. 353–355.

Blei, D., Jordan, M., and Ng, A. (2003), “Hierarchical Bayesian Models for Applications in Infor-

mation Retrieval,” in Bayesian Statistics, vol. 7, pp. 25–44.

Blei, D. M. and Jordan, M. I. (2005), “Variational methods for Dirichlet process mixtures,” Bayesian

Analysis, 1, pp. 121–144.

27

Carota, C. and Parmigiani, G. (2002), “Semiparametric Regression for Count Data,” Biometrika,

89(2), pp. 265–281.

Cifarelli, D. and Regazzini, E. (1978), “Problemi Statistici Non Parametrici in Condizioni di Scam-
biabilit`a Parziale e Impiego di Medie Associative,” Tech. rep., Quaderni Istituto Matematica Fi-
nanziaria dell’Universit`a di Torino.

De Iorio, M., M¨uller, P., and Rosner, G. (2004), “An ANOVA Model for Dependent Random Mea-

sures,” Journal of the American Statistical Association, 99(465), pp. 205–215.

Durbin, R., Eddy, S., Krogh, A., and Mitchison, G. (1998), Biological Sequence Analysis, Cam-

bridge, UK: Cambridge University Press.

Escobar, M. and West, M. (1995), “Bayesian Density Estimation and Inference Using Mixtures,”

Journal of the American Statistical Association, 90, pp. 577–588.

Ferguson, T. (1973), “A Bayesian Analysis of Some Nonparametric Problems,” Annals of Statistics,

1(2), pp. 209–230.

Fong, D., Pammer, S., Arnold, S., and Bolton, G. (2002), “Reanalyzing Ultimatum Bargaining—
Comparing Nondecreasing Curves Without Shape Constraints,” Journal of Business and Eco-
nomic Statistics, 20, pp. 423–440.

Forsyth, D. A. and Ponce, J. (2002), Computer Vision—A Modern Approach, Upper Saddle River,

NJ: Prentice-Hall.

Fraley, C. and Raftery, A. E. (2002), “Model-Based Clustering, Discriminant Analysis, and Density

Estimation,” Journal of the American Statistical Association, 97, pp. 611–631.

Gabriel, S. et al. (2002), “The Structure of Haplotype Blocks in the Human Genome,” Science, 296,

pp. 2225–2229.

Green, P. and Richardson, S. (2001), “Modelling Heterogeneity with and without the Dirichlet

Process,” Scandinavian Journal of Statistics, 28, pp. 355–377.

Huang, X., Acero, A., and Hon, H.-W. (2001), Spoken Language Processing, Upper Saddle River,

NJ: Prentice-Hall.

Ishwaran, H. and James, L. (2004), “Computational Methods for Multiplicative Intensity Models
using Weighted Gamma Processes: Proportional Hazards, Marked Point Processes and Panel
Count Data,” Journal of the American Statistical Association, 99, pp. 175–190.

Ishwaran, H. and Zarepour, M. (2002), “Exact and Approximate Sum-Representations for the

Dirichlet Process,” Canadian Journal of Statistics, 30, pp. 269–283.

Jain, S. and Neal, R. (2000), “A Split-Merge Markov Chain Monte Carlo Procedure for the Dirichlet

Process Mixture Model,” Tech. Rep. 2003, Department of Statistics, University of Toronto.

Kleinman, K. and Ibrahim, J. (1998), “A Semi-parametric Bayesian Approach to Generalized Linear

Mixed Models,” Statistics in Medicine, 17, pp. 2579–2596.

MacEachern, S. (1999), “Dependent Nonparametric Processes,” in Proceedings of the Section on

Bayesian Statistical Science, American Statistical Association.

28

MacEachern, S., Kottas, A., and Gelfand, A. (2001), “Spatial Nonparametric Bayesian Models,”

Tech. Rep. 01-10, Institute of Statistics and Decision Sciences, Duke University.

MacEachern, S. and M¨uller, P. (1998), “Estimating Mixture of Dirichlet Process Models,” Journal

of Computational and Graphical Statistics, 7, pp. 223–238.

MacKay, D. and Peto, L. (1994), “A Hierarchical Dirichlet Language Model,” Natural Language

Engineering.

MacKay, D. J. C. (1997), “Ensemble Learning for Hidden Markov Models,” Tech. rep., Cavendish

Laboratory, University of Cambridge.

Mallick, B. and Walker, S. (1997), “Combining Information from Several Experiments with Non-

parametric Priors,” Biometrika, 84, pp. 697–706.

Muliere, P. and Petrone, S. (1993), “A Bayesian Predictive Approach to Sequential Search for an
Optimal Dose: Parametric and Nonparametric Models,” Journal of the Italian Statistical Society,
2, pp. 349–364.

M¨uller, P., Quintana, F., and Rosner, G. (2004), “A Method for Combining Inference Across Related

Nonparametric Bayesian Models,” Journal of the Royal Statistical Society, 66, pp. 735–749.

Neal, R. (1992), “Bayesian Mixture Modeling,” in Proceedings of the Workshop on Maximum En-

tropy and Bayesian Methods of Statistical Analysis, vol. 11, pp. 197–211.

—— (2000), “Markov Chain Sampling Methods for Dirichlet Process Mixture Models,” Journal of

Computational and Graphical Statistics, 9, pp. 249–265.

Pitman, J. (1996), “Random discrete distributions invariant under size-biased permutation,” Ad-

vances in Applied Probability, 28, pp. 525–539.

—— (2002a), “Combinatorial Stochastic Processes,” Tech. Rep. 621, Department of Statistics, Uni-

versity of California at Berkeley, lecture notes for St. Flour Summer School.

—— (2002b), “Poisson-Dirichlet and GEM invariant distributions for split-and-merge transforma-

tions of an interval partition,” Combinatorics, Probability and Computing, 11, pp. 501–514.

Pritchard, J., Stephens, M., and Donnelly, P. (2000), “Inference of Population Structure using Mul-

tilocus Genotype Data,” Genetics, 155, pp. 945–959.

Rabiner, L. (1989), “A Tutorial on Hidden Markov Models and Selected Applications in Speech

Recognition,” Proceedings of the IEEE, 77, pp. 257–285.

Rasmussen, C. (2000), “The Inﬁnite Gaussian Mixture Model,” in S. Solla, T. Leen, and K.-R.
M¨uller (eds.) Advances in Neural Information Processing Systems, Cambridge, MA: MIT Press,
vol. 12.

Salton, G. and McGill, M. (1983), An Introduction to Modern Information Retrieval, New York:

McGraw-Hill.

Sethuraman, J. (1994), “A Constructive Deﬁnition of Dirichlet Priors,” Statistica Sinica, 4, pp. 639–

650.

29

Stephens, M., Smith, N., and Donnelly, P. (2001), “A New Statistical Method for Haplotype Recon-

struction from Population Data,” American Journal of Human Genetics, 68, pp. 978–989.

Stolcke, A. and Omohundro, S. (1993), “Hidden Markov Model Induction by Bayesian Model
Merging,” in C. Giles, S. Hanson, and J. Cowan (eds.) Advances in Neural Information Processing
Systems, San Mateo CA: Morgan Kaufmann, vol. 5, pp. 11–18.

Tomlinson, G. (1998), “Analysis of Densities,” Ph.D. thesis, Department of Public Health Sciences,

University of Toronto.

Tomlinson, G. and Escobar, M. (2003), “Analysis of Densities,” Tech. rep., Department of Public

Health Sciences, University of Toronto.

30

