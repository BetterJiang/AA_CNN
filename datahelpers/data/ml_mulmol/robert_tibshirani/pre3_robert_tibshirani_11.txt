int .
the sta poi for thi pap is an int pro - ced cal boo , whi is a way of com the per of man wea cla to pro a pow com .
boo was pro in the com lea the lit ( sch ( 123 ) , fre ( 123 ) , fre and sch ( 123 ) ) and has sin rec muc att .
whi boo has evo som ove the yea , we des the mos com use ver of the ada pro ( fre and sch
rec aug 123 rev dec 123
123 at sta lin acc cen , sta , ca 123
sup in par by dep .
of ene con de - ac1 - 123 sf 123 and nsf gra dms - 123 - 123
123 at div of bio , dep .
of hea , res and pol , sta uni ,
sta , ca 123
123 in par by nsf gra dms - 123 - 123 , dms - 123 - 123 and nih gra
123 in par by nat sci and eng res cou of can .
ams 123 sub cla .
123 , 123 , 123 , 123
key wor and phr .
cla , tre , non est , sta tti ,
fri , t .
has and r .
tib
( 123 ) ) , whi we cal dis ada .
thi is ess the sam as ada . m12 for bin dat in fre and sch .
her is a con des - tio of ada in the two - cla cla set .
we hav tra dat den f ( cid : 123 ) x ( cid : 123 ) = ( cid : 123 ) m ( cid : 123 ) x12 ( cid : 123 ) y12 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) xn ( cid : 123 ) yn ( cid : 123 ) wit xi a vec val fea and yi = 123 or 123
we 123 cmf ( cid : 123 ) x ( cid : 123 ) whe eac fm ( cid : 123 ) x ( cid : 123 ) is a cla pro val - ues plu or min 123 and cm are con the cor pre is sig ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) .
the ada pro tra the cla fm ( cid : 123 ) x ( cid : 123 ) on wei ver of the tra sam , giv hig wei to cas tha are cur - ren mis .
thi is don for a seq of wei sam , and the the nal cla is den to be a lin com of the cla fro eac sta .
a det des of dis ada is giv in the box dis tit alg 123
muc has bee wri abo the suc of ada in pro acc cla .
man aut hav exp the use of a tre - bas cla for fm ( cid : 123 ) x ( cid : 123 ) and hav dem tha it con pro sig low err rat tha a sin dec tre .
in fac , bre ( 123 ) ( ref to a nip wor ) cal ada wit tre the bes off - the - she cla in the wor ( see als bre ( 123 ) ) .
int , in man exa the tes err see to con dec and the lev off as mor cla are add , rat tha ult inc .
for som rea , it see tha ada is res to ove .
fig 123 sho the per of dis ada on a syn cla - sic tas , usi an ada of car ( bre , fri , ols and sto ( 123 ) ) as the bas cla .
thi ada gro xed - siz tre in a bes - rst man ( see sec 123 ) .
inc in the gur is the bag tre ( bre ( 123 ) ) whi ave tre gro on boo res ver of the tra dat .
bag is pur a var - red tec - niq , and sin tre ten to hav hig var , bag oft pro
dis ada ( fre and sch ( 123 ) )
sta wit wei wi = 123 / n ( cid : 123 ) i = 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) n .
rep for m = 123 ( cid : 123 ) 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) m :
( a ) fit the cla fm ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 ( cid : 123 ) 123 ( cid : 123 ) usi wei wi on the tra dat .
( b ) com err = ew ( cid : 123 ) 123 ( cid : 123 ) y ( cid : 123 ) =fm ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) , cm = log ( cid : 123 ) ( cid : 123 ) 123 err ( cid : 123 ) / err ( cid : 123 ) .
( c ) set wi wi exp ( cid : 123 ) cm1 ( cid : 123 ) yi ( cid : 123 ) =fm ( cid : 123 ) xi ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) , i = 123 ( cid : 123 ) 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) n , and ren so tha 123
out the cla sig ( cid : 123 ) ( cid : 123 ) m
i wi = 123
alg 123
ew rep exp ove the tra dat wit wei w = ( cid : 123 ) w12 ( cid : 123 ) w12 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) wn ( cid : 123 ) , and 123 ( cid : 123 ) s ( cid : 123 ) is the ind of the set s .
at eac ite , ada inc the wei of the obs mis by fm ( cid : 123 ) x ( cid : 123 ) by a fac tha dep on the wei tra err .
add log reg
tes err for bag , dis ada and rea ada on a sim two - cla nes sph pro ( see sec 123 ) .
the are 123 tra dat poi in ten dim , and the bay err rat is zer .
all tre are gro bes - rst wit pru .
the lef ite cor to a sin tre .
ear ver of ada use a res sch to imp ste 123 of alg 123 , by wei sam fro the tra dat .
thi sug a con wit bag and tha a maj com of the suc of boo has to do wit var red .
how , boo per com wel whe :
a wei tre - gro alg is use in ste 123 rat tha wei res , whe eac tra obs is ass its wei wi .
thi rem the ran com ess in bag .
stu are use for the wea lea .
stu are sin - spl tre wit onl two ter nod .
the typ hav low var but hig bia .
bag per ver poo wit stu ( fig 123 ( top rig pan ) ) .
fri , t .
has and r .
tib
the obs sug tha boo is cap of bot bia and var -
anc red , and thu dif fun fro bag .
the bas cla in dis ada pro a cla rul fm ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) 123 ( cid : 123 ) 123 ( cid : 123 ) , whe ( cid : 123 ) is the dom of the pre fea x .
fre and sch ( 123 ) , bre ( 123 ) and sch and sin ( 123 ) hav sug var mod to imp the boo alg - a gen of dis ada app in fre and sch ( 123 ) , and was dev fur in sch and sin ( 123 ) , tha use rea - val con - rat pre rat tha the ( cid : 123 ) 123 ( cid : 123 ) 123 ( cid : 123 ) of dis ada .
the wea lea for thi gen boo pro a map - pin fm ( cid : 123 ) x ( cid : 123 ) : ( cid : 123 ) ( cid : 123 ) r; the sig of fm ( cid : 123 ) x ( cid : 123 ) giv the cla , and ( cid : 123 ) fm ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) a mea of the con in the pre .
thi rea - val con is com wit the pre con wit a mul cm as bef , and a sli dif rec for cm is pro .
we pre a gen ver of ada , whi we cal rea ada in alg 123 , in whi the wea lea ret a cla pro est pm ( cid : 123 ) x ( cid : 123 ) = pw ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 ( cid : 123 ) 123 ( cid : 123 ) .
the con to the nal cla is hal the log - tra of thi pro est .
one for of sch and sin gen ada coi wit rea ada , in the spe cas whe the wea lea is a dec tre .
rea ada ten to per the bes in our sim exa in fig 123 , esp wit stu , alt we see wit 123 nod tre dis ada ove rea ada aft 123
in thi pap we ana the ada pro fro a sta per - spe .
the mai res of our pap red ada as a met for m fm ( cid : 123 ) x ( cid : 123 ) in a for sta man .
thi sim - tti an add mod ple fac lar exp why it ten to out a sin bas lea .
by tti an add mod of dif and pot sim fun , it exp the cla of fun tha can be app .
sta wit wei wi = 123 / n ( cid : 123 ) i = 123 ( cid : 123 ) 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) n .
rep for m = 123 ( cid : 123 ) 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) m :
( a ) fit the cla to obt a cla pro est pm ( cid : 123 ) x ( cid : 123 ) = pw ( cid : 123 ) y = ( b ) set fm ( cid : 123 ) x ( cid : 123 ) 123 ( c ) set wi wi exp ( cid : 123 ) yif ( cid : 123 ) xi ( cid : 123 ) ( cid : 123 ) , i = 123 ( cid : 123 ) 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) n , and ren so tha 123
out the cla sig ( cid : 123 ) ( cid : 123 ) m
123 ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 ( cid : 123 ) 123 ( cid : 123 ) , usi wei wi on the tra dat .
i wi = 123
123 log pm ( cid : 123 ) x ( cid : 123 ) / ( cid : 123 ) 123 pm ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) r .
alg 123
the rea ada alg use cla pro est -
mat pm ( cid : 123 ) x ( cid : 123 ) to con rea - val con fm ( cid : 123 ) x ( cid : 123 ) .
add log reg
giv thi fac , dis and rea ada app unn com - squ - err los e ( cid : 123 ) y ( cid : 123 ) cat .
a muc sim way to t an add mod wou be to min fm ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 in a for sta man .
at the mth sta we x f12 ( cid : 123 ) x ( cid : 123 ) fm1 ( cid : 123 ) x ( cid : 123 ) and min squ err to obt fm ( cid : 123 ) x ( cid : 123 ) fj ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) x ( cid : 123 ) .
thi is jus tti of res and is com use in lin reg and add mod ( has and tib ( 123 ) ) .
how squ err los is not a goo cho for cla ( see fig 123 in sec 123 ) and hen tti of res doe wor ver wel in tha cas .
we sho tha ada ts an add mod usi a bet - ter los fun for cla .
spe we sho tha ada ts an add log reg mod , usi a cri sim to , but not the sam as , the bin log - lik .
( if pm ( cid : 123 ) x ( cid : 123 ) are the cla pro , an add log reg app log pm ( cid : 123 ) x ( cid : 123 ) / ( cid : 123 ) 123 pm ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) by an add - m fm ( cid : 123 ) x ( cid : 123 ) . ) we the go on to der a new boo pro log tha dir opt the bin log - lik .
the ori boo tec ( sch ( 123 ) , fre ( 123 ) ) pro - abl imp or boo the per of a sin cla by pro - ing a maj vot of sim cla .
the alg the evo int mor ada and pra ver suc as ada , who suc was sti exp in ter of boo ind cla by a wei maj vot or wei com .
we bel tha thi vie , alo wit the app nam boo inh by ada , may hav led to som of the mys abo how and why the met wor .
as men abo , we ins vie boo as a tec for tti an add mod .
sec 123 giv a sho his of the boo ide .
in sec 123 we bri rev add mod .
sec 123 sho how boo can be vie as an add mod est and pro som new boo met for the two - cla cas .
the mul pro is stu in sec 123
sim and rea dat exp are dis in sec 123 and 123
our tre - gro imp - men , usi tru bes - rst tre , is des in sec 123
wei tri to spe up com is dis in sec 123 , and we bri des gen of boo in sec 123
we end wit a dis in sec 123
a bri his of boo .
sch ( 123 ) dev the rst sim - ple boo pro in the pac - lea fra ( val ( 123 ) , kea and vaz ( 123 ) ) .
sch sho tha a wea lea cou alw imp its per by tra two add cla on lte ver - sio of the inp dat str .
a wea lea is an alg for pro a two - cla cla wit per gua ( wit hig pro ) to be sig bet tha a coi .
aft lea an ini cla h12 on the rst n tra poi : 123
h12 is lea on a new sam of n poi , hal of whi are mis
h12 is lea on n poi for whi h12 and h12 dis .
the boo cla is hb = maj vot ( cid : 123 ) h12 ( cid : 123 ) h12 ( cid : 123 ) h12 ( cid : 123 ) .
fri , t .
has and r .
tib
sch str of wea lea the pro tha hb has imp per ove h12
fre ( 123 ) pro a boo by maj var whi com man wea lea sim and imp the per of the sim - ple boo alg of sch .
the the sup bot of the alg - rit req the wea lea to pro a cla wit a xed err rat .
thi led to the mor ada and rea ada ( fre and sch ( 123 ) ) and its off , whe thi ass was dro .
fre and sch ( 123 ) and sch and sin ( 123 ) pro som the to sup the alg , in the for of upp bou on gen - tio err .
thi the has evo in the com lea com , ini bas on the con of pac lea .
oth the att to exp boo com fro gam the ( fre and sch ( 123 ) , bre ( 123 ) ) and vc the ( sch , fre , bar and lee ( 123 ) ) .
the bou and the the ass wit the ada alg are int - est , but ten to be too loo to be of pra imp .
in pra , boo - ing ach res far mor imp tha the bou wou imp .
add mod f ( cid : 123 ) x ( cid : 123 ) = ( cid : 123 ) m
add mod .
we sho in the nex sec tha ada ts an m=1 cmf ( cid : 123 ) x ( cid : 123 ) .
we bel tha vie cur boo - ing pro as sta alg for tti add mod goe a lon way tow und the per .
add mod hav a lon his in sta , and so we rst giv som exa her .
add reg mod .
we ini foc on the reg pro - lem , whe the res y is qua , x and y hav som joi dis - tio , and we are int in mod the mea e ( cid : 123 ) y ( cid : 123 ) x ( cid : 123 ) = f ( cid : 123 ) x ( cid : 123 ) .
the add mod has the for
f ( cid : 123 ) x ( cid : 123 ) = p ( cid : 123 )
the is a sep fun fj ( cid : 123 ) xj ( cid : 123 ) for eac of the p inp var xj .
mor gen , eac com fj is a fun of a sma , pre sub of the inp var .
the bac alg ( fri and stu ( 123 ) , buj , has and tib ( 123 ) ) is a con mod gau alg for tti add mod .
a bac upd is
for j = 123 ( cid : 123 ) 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) p ( cid : 123 ) 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 )
any met or alg for est a fun of xj can be use to obt an est of the con exp in ( 123 ) .
in par , thi can inc non smo alg , suc as loc reg or smo spl .
in the rig - han sid , all the lat ver of the fun - tio fk are use in for the par res .
the bac cyc are rep unt con .
und fai gen con , bac can
add log reg
be sho to con to the min of e ( cid : 123 ) y f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 ( buj , has and
ext add mod .
mor gen , one can con add mod who ele ( cid : 123 ) fm ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) m 123 are fun of pot all of the inp fea x .
usu in thi con the fm ( cid : 123 ) x ( cid : 123 ) are tak to be sim fun cha by a set of par and a mul m ,
the add mod the bec
fm ( cid : 123 ) x ( cid : 123 ) = mb ( cid : 123 ) x ( cid : 123 ) m ( cid : 123 ) ( cid : 123 ) fm ( cid : 123 ) x ( cid : 123 ) = m ( cid : 123 )
for exa , in sin hid lay neu net b ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) = ( cid : 123 ) tx ( cid : 123 ) whe ( cid : 123 ) ( cid : 123 ) is a sig fun and par a lin com of the inp fea .
in sig pro , wav are a pop cho wit par the loc and sca shi of a mot wav b ( cid : 123 ) x ( cid : 123 ) .
in the app ( cid : 123 ) b ( cid : 123 ) x ( cid : 123 ) m ( cid : 123 ) ( cid : 123 ) m 123 are gen cal bas fun sin the spa a fun sub .
if lea - squ is use as a tti cri , one can sol for an opt set of par thr a gen bac alg wit upd ,
( cid : 123 ) m ( cid : 123 ) m ( cid : 123 ) arg min
kb ( cid : 123 ) x ( cid : 123 ) k ( cid : 123 ) b ( cid : 123 ) x ( cid : 123 ) ( cid : 123 )
for m = 123 ( cid : 123 ) 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) m in cyc unt con .
alt , one can use a gre for ste app , ( cid : 123 ) m ( cid : 123 ) m ( cid : 123 ) arg min
y fm1 ( cid : 123 ) x ( cid : 123 ) b ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) 123
for m = 123 ( cid : 123 ) 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) m , whe ( cid : 123 ) k ( cid : 123 ) k ( cid : 123 ) m12 are xed at the cor sol - tio val at ear ite .
thi is the app use by mal and zha ( 123 ) in mat pur , whe the b ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) are sel fro an ove - com dic of wav bas .
in the lan of boo , f ( cid : 123 ) x ( cid : 123 ) = b ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) wou be cal a wea lea and fm ( cid : 123 ) x ( cid : 123 ) ( 123 ) the com .
if dec tre wer use as the wea lea , the par wou rep - sen the spl var , spl poi , the con in eac ter nod and num of ter nod of eac tre .
not tha the bac pro ( 123 ) or its gre cou ( 123 ) onl req an alg for tti a sin wea lea ( 123 ) to dat .
thi bas alg is sim app rep to mod ver of the ori dat
ym y ( cid : 123 )
fri , t .
has and r .
tib
in the for ste pro ( 123 ) , the mod out ym at the mth ite - ati dep onl on its val ym1 and the sol fm1 ( cid : 123 ) x ( cid : 123 ) at the pre
ym = ym1 fm1 ( cid : 123 ) x ( cid : 123 ) ( cid : 123 )
at eac ste m , the pre out val ym1 are mod ( 123 ) so tha the pre mod fm1 ( cid : 123 ) x ( cid : 123 ) has no exp pow on the new out ym .
one can the vie thi as a pro for boo a wea lea f ( cid : 123 ) x ( cid : 123 ) = b ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) to for a pow com fm ( cid : 123 ) x ( cid : 123 ) ( 123 ) .
cla pro .
for the cla pro , we lea fro bay the tha all we nee is p ( cid : 123 ) y = j ( cid : 123 ) x ( cid : 123 ) , the pos or con cla pro .
one cou tra all the abo reg mac acr to the cla dom by sim not tha e ( cid : 123 ) 123 ( cid : 123 ) y=j ( cid : 123 ) ( cid : 123 ) x ( cid : 123 ) = p ( cid : 123 ) y = j ( cid : 123 ) x ( cid : 123 ) , whe 123 ( cid : 123 ) y=j ( cid : 123 ) is the 123 / 123 ind var rep cla j .
whi thi wor fai wel in gen , sev pro hav bee not ( has , tib and buj ( 123 ) ) for con reg met .
the est are typ - ica not con to ( cid : 123 ) 123 ( cid : 123 ) 123 ( cid : 123 ) , and sev mas pro can occ whe the are mor tha two cla .
a not exc is whe tre are use as the reg met , and in fac thi is the app use by bre , fri , ols and sto ( 123 ) .
log reg is a pop app use in sta for ove - ing the pro .
for a two - cla pro , an add log mod has
p ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 )
p ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) = m ( cid : 123 )
of f ( cid : 123 ) x ( cid : 123 ) = ( cid : 123 ) m
the mon log tra on the lef gua tha for any val m=1 fm ( cid : 123 ) x ( cid : 123 ) r , the pro est lie in ( cid : 123 ) 123 ( cid : 123 ) 123 ( cid : 123 ) ; inv
p ( cid : 123 ) x ( cid : 123 ) = p ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) = ef ( cid : 123 ) x ( cid : 123 )
123 + ef ( cid : 123 ) x ( cid : 123 ) ( cid : 123 )
her we hav giv a gen add for for f ( cid : 123 ) x ( cid : 123 ) ; spe cas exi tha are wel kno in sta .
in par , lin log reg ( mcc and nel ( 123 ) , e . g . ) and add log reg ( has and tib ( 123 ) ) are pop .
the mod are usu t by max the bin log - lik and enj all the ass asy opt fea of max lik est .
a gen ver of bac ( 123 ) , cal loc sco in has and tib ( 123 ) , can be use to t the add log mod by max fk ( cid : 123 ) xk ( cid : 123 ) and p ( cid : 123 ) x ( cid : 123 )
lik .
sta wit gue f12 ( cid : 123 ) x12 ( cid : 123 ) fp ( cid : 123 ) xp ( cid : 123 ) , f ( cid : 123 ) x ( cid : 123 ) = ( cid : 123 )
den in ( 123 ) , we for the wor res :
z = f ( cid : 123 ) x ( cid : 123 ) + 123 ( cid : 123 ) y=1 ( cid : 123 ) p ( cid : 123 ) x ( cid : 123 ) p ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 p ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) ( cid : 123 )
add log reg
we the app bac to the res z wit obs wei p ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 p ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) to obt new fk ( cid : 123 ) xk ( cid : 123 ) .
thi pro is rep unt con .
the for sta ver ( 123 ) of thi pro bea a clo sim to the log alg des lat in the pap .
ada : an add log reg mod .
in thi sec we sho tha the ada alg ( dis and rea ) can be int as sta est pro for tti an add log reg mod .
the opt an exp cri whi to sec ord is equ - len to the bin log - lik cri .
we the pro a mor sta lik - bas boo pro .
an exp cri .
con min the cri
j ( cid : 123 ) f ( cid : 123 ) = e ( cid : 123 ) eyf ( cid : 123 ) x ( cid : 123 ) ( cid : 123 )
for est of f ( cid : 123 ) x ( cid : 123 ) .
her e rep exp dep on the con - tex , thi may be a pop exp ( wit res to a pro dis - tri ) or els a sam ave .
ew ind a wei exp .
lem 123 sho tha the fun f ( cid : 123 ) x ( cid : 123 ) tha min j ( cid : 123 ) f ( cid : 123 ) is the sym log tra of p ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) .
lem 123
e ( cid : 123 ) eyf ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) is min at
f ( cid : 123 ) x ( cid : 123 ) = 123
p ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) p ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) ( cid : 123 )
p ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) =
p ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) =
ef ( cid : 123 ) x ( cid : 123 ) + ef ( cid : 123 ) x ( cid : 123 ) ( cid : 123 )
ef ( cid : 123 ) x ( cid : 123 ) + ef ( cid : 123 ) x ( cid : 123 ) ( cid : 123 )
whi e ent exp ove the joi dis of y and x ,
it is suf to min the cri con on x :
( cid : 123 ) = p ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) ef ( cid : 123 ) x ( cid : 123 ) + p ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) ef ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) = p ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) ef ( cid : 123 ) x ( cid : 123 ) + p ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) ef ( cid : 123 ) x ( cid : 123 ) ( cid : 123 )
the res fol by set the der to zer .
thi exp cri app in sch and sin ( 123 ) , mot - vat as an upp bou on mis err .
bre ( 123 ) als use thi cri in his res on ada and pre gam .
the usu
fri , t .
has and r .
tib
log tra doe not hav the fac 123 123 as in ( 123 ) ; by mul the num and den in ( 123 ) by ef ( cid : 123 ) x ( cid : 123 ) , we get the usu log mod
p ( cid : 123 ) x ( cid : 123 ) = e12 ( cid : 123 ) x ( cid : 123 )
123 + e12 ( cid : 123 ) x ( cid : 123 ) ( cid : 123 )
hen the two mod are equ up to a fac 123
if e is rep by ave ove reg of x whe f ( cid : 123 ) x ( cid : 123 ) is con ( as in the ter nod of a dec tre ) , the sam res app to the sam pro of y = 123 and y = 123
res 123 and 123 sho tha bot dis and rea ada , as wel as the gen ada of fre and sch ( 123 ) , can be mot as ite alg for opt the ( pop bas ) exp cri - rio .
the res sha the sam for .
giv an imp f ( cid : 123 ) x ( cid : 123 ) , an upd f ( cid : 123 ) x ( cid : 123 ) + f ( cid : 123 ) x ( cid : 123 ) is pro bas on the
pop ver of the cri .
the upd , whi inv pop con exp , is imp - fec app for nit dat set by som res cla of est - tor , suc as ave in ter nod of tre .
has and tib ( 123 ) use a sim der of the loc sco alg use in tti gen add mod .
man ter are typ - cal req in pra , sin at eac sta the app to con exp is rat cru .
bec of lem 123 , the res alg can be int as a sta est pro for tti an add log reg mod .
the der are suf dif to war
res 123
the dis ada alg ( pop ver ) bui an add log reg mod via new - lik upd for min
let j ( cid : 123 ) f ( cid : 123 ) = e ( cid : 123 ) eyf ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) .
sup we hav a cur est f ( cid : 123 ) x ( cid : 123 ) and see an imp est f ( cid : 123 ) x ( cid : 123 ) + cf ( cid : 123 ) x ( cid : 123 ) .
for xed c ( and x ) , we exp j ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) + cf ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) to sec ord abo f ( cid : 123 ) x ( cid : 123 ) = 123 ,
j ( cid : 123 ) f + cf ( cid : 123 ) = e ( cid : 123 ) ey ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) +cf ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) ( cid : 123 )
e ( cid : 123 ) eyf ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 ycf ( cid : 123 ) x ( cid : 123 ) + c12 ( cid : 123 ) x ( cid : 123 ) 123 / 123 ( cid : 123 ) ( cid : 123 ) = e ( cid : 123 ) eyf ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 ycf ( cid : 123 ) x ( cid : 123 ) + c12 / 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 )
sin y12 = 123 and f ( cid : 123 ) x ( cid : 123 ) 123 = 123
min poi wit res to f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 ( cid : 123 ) 123 ( cid : 123 ) , we wri
ew ( cid : 123 ) 123 ycf ( cid : 123 ) x ( cid : 123 ) + c12 / 123 ( cid : 123 ) x ( cid : 123 ) ( cid : 123 )
f ( cid : 123 ) x ( cid : 123 ) = arg min
add log reg
her the not ew ( cid : 123 ) ( cid : 123 ) x ( cid : 123 ) ref to a wei con exp , whe w = w ( cid : 123 ) x ( cid : 123 ) y ( cid : 123 ) = eyf ( cid : 123 ) x ( cid : 123 ) , and
ew ( cid : 123 ) g ( cid : 123 ) x ( cid : 123 ) y ( cid : 123 ) ( cid : 123 ) x ( cid : 123 ) def e ( cid : 123 ) w ( cid : 123 ) x ( cid : 123 ) y ( cid : 123 ) g ( cid : 123 ) x ( cid : 123 ) y ( cid : 123 ) ( cid : 123 ) x ( cid : 123 )
for c > 123 , min ( 123 ) is equ to max
the sol is
if ew ( cid : 123 ) y ( cid : 123 ) x ( cid : 123 ) = pw ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) pw ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) > 123 ,
ew ( cid : 123 ) yf ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) = ew ( cid : 123 ) y f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 / 123 123
( aga usi f ( cid : 123 ) x ( cid : 123 ) 123 = y12 = 123 ) .
thu min a qua app to the cri lea to a wei lea - squ cho of f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 ( cid : 123 ) 123 ( cid : 123 ) , and thi con the new - lik ste .
giv f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 ( cid : 123 ) 123 ( cid : 123 ) , we can dir min j ( cid : 123 ) f + cf ( cid : 123 ) to det c :
c = arg min
whe err = ew ( cid : 123 ) 123 ( cid : 123 ) y ( cid : 123 ) =f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) .
not tha c can be neg if the wea lea doe wor tha 123 , in whi cas it aut rev the pol .
com the ste we get the upd for f ( cid : 123 ) x ( cid : 123 ) ,
f ( cid : 123 ) x ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) + 123
in the nex ite the new con cf ( cid : 123 ) x ( cid : 123 ) to f ( cid : 123 ) x ( cid : 123 ) aug the wei
sin yf ( cid : 123 ) x ( cid : 123 ) = 123 123 ( cid : 123 ) y ( cid : 123 ) =f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 , we see tha the upd is equ to
w ( cid : 123 ) x ( cid : 123 ) y ( cid : 123 ) w ( cid : 123 ) x ( cid : 123 ) y ( cid : 123 ) ecf ( cid : 123 ) x ( cid : 123 ) y ( cid : 123 ) ( cid : 123 ) 123 err
w ( cid : 123 ) x ( cid : 123 ) y ( cid : 123 ) w ( cid : 123 ) x ( cid : 123 ) y ( cid : 123 ) exp
thu the fun and wei upd are of an ide for to tho use
in dis ada .
thi pop ver of ada tra nat to a dat ver usi tre .
the wei con exp in ( 123 ) is app by the ter - nod wei ave in a tre .
in par , the wei lea - squ cri is use to gro the tre - bas cla f ( cid : 123 ) x ( cid : 123 ) , and giv f ( cid : 123 ) x ( cid : 123 ) , the con c is bas on the wei tra err .
fri , t .
has and r .
tib
not tha aft eac new ste , the wei cha , and hen the tre con wil cha as wel .
thi add an ada twi to the dat ver of a new - lik alg .
par of thi der for ada can be fou in bre ( 123 ) and sch and sin ( 123 ) , but wit mak the con to add log reg mod .
cor 123
aft eac upd to the wei , the wei mis -
cat err of the mos rec wea lea is 123 .
thi fol by not tha the c tha min j ( cid : 123 ) f+ cf ( cid : 123 ) sat
j ( cid : 123 ) f + cf ( cid : 123 )
the res fol sin yf ( cid : 123 ) x ( cid : 123 ) is 123 for a cor and 123 for an inc
= e ( cid : 123 ) ey ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) +cf ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) yf ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) = 123 ( cid : 123 )
sch and sin ( 123 ) giv the int tha the wei are upd to mak the new wei pro max dif for the nex the dis ada alg exp the tre or oth wea lea to del a cla f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 ( cid : 123 ) 123 ( cid : 123 ) .
res 123 req min mod to acc f ( cid : 123 ) x ( cid : 123 ) r , as in the gen ada alg ( fre and sch ( 123 ) , sch and sin ( 123 ) ) ; the est for cm dif .
fix f , we see tha the min of ( 123 ) mus sat if f is not dis , thi equ has no clo - for sol for c , and req an ite sol suc as new .
ew ( cid : 123 ) yf ( cid : 123 ) x ( cid : 123 ) ecy ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) = 123 ( cid : 123 )
we now der the rea ada alg , whi use wei pro - bil est to upd the add log mod , rat tha the cla - cat the .
aga we der the pop upd and the app it to dat by app con exp by ter - nod ave
res 123
the rea ada alg ts an add log reg
mod by sta and app opt of j ( cid : 123 ) f ( cid : 123 ) = e ( cid : 123 ) eyf ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) .
sup we hav a cur est f ( cid : 123 ) x ( cid : 123 ) and see an imp est -
mat f ( cid : 123 ) x ( cid : 123 ) + f ( cid : 123 ) x ( cid : 123 ) by min j ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) + f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) at eac x .
j ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) + f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) = e ( cid : 123 ) eyf ( cid : 123 ) x ( cid : 123 ) eyf ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) x ( cid : 123 )
= ef ( cid : 123 ) x ( cid : 123 ) e ( cid : 123 ) eyf ( cid : 123 ) x ( cid : 123 ) 123 ( cid : 123 ) y=1 ( cid : 123 ) ( cid : 123 ) x ( cid : 123 ) + ef ( cid : 123 ) x ( cid : 123 ) e ( cid : 123 ) eyf ( cid : 123 ) x ( cid : 123 ) 123 ( cid : 123 ) y=1 ( cid : 123 ) ( cid : 123 ) x ( cid : 123 ) ( cid : 123 )
div thr by e ( cid : 123 ) eyf ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) x ( cid : 123 ) and set the der w . r . t .
f ( cid : 123 ) x ( cid : 123 ) to zer
f ( cid : 123 ) x ( cid : 123 ) = 123
add log reg
whe w ( cid : 123 ) x ( cid : 123 ) y ( cid : 123 ) = exp ( cid : 123 ) yf ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) .
the wei get upd by
pw ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) pw ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) ( cid : 123 )
w ( cid : 123 ) x ( cid : 123 ) y ( cid : 123 ) w ( cid : 123 ) x ( cid : 123 ) y ( cid : 123 ) eyf ( cid : 123 ) x ( cid : 123 ) ( cid : 123 )
the alg as pre wou sto aft one ite .
in pra we use cru app to con exp , suc as dec tre or oth con mod , and hen man ste are req .
cor 123
at the opt f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) the wei con mea of y is 123
if f ( cid : 123 ) x ( cid : 123 ) is opt , we hav
f ( cid : 123 ) x ( cid : 123 ) = eey ( cid : 123 ) x ( cid : 123 ) y = 123 ( cid : 123 )
we can thi of the wei as pro an alt to res for the bin cla pro .
at the opt fun f , the is no fur inf abo f in the wei con dis of y .
if the is , we use it to upd f .
an ite m in eit the dis or rea ada alg , we hav
com an add fun of the for
f ( cid : 123 ) x ( cid : 123 ) = m ( cid : 123 )
whe eac of the com are fou in a gre for sta fas - ion , xin the ear com .
our ter sta ref to a sim app in sta : 123
var are inc seq in a ste reg .
the coe of var alr inc rec no fur adj .
why eey ( cid : 123 ) x ( cid : 123 ) ? so far the onl jus for thi exp cri - rio is tha it has a sen pop min , and the alg des abo per wel on rea dat .
in add : 123
sch and sin ( 123 ) mot eyf ( cid : 123 ) x ( cid : 123 ) as a dif upp bou
to mis err 123 ( cid : 123 ) yf< ( cid : 123 ) ( see fig 123 ) .
the ada alg tha it gen is ext mod , req - ing at eac ite the ret of a cla on a wei tra let y = ( cid : 123 ) y + 123 ( cid : 123 ) / 123 , tak val 123 , 123 , and par the bin pro -
ef ( cid : 123 ) x ( cid : 123 ) + ef ( cid : 123 ) x ( cid : 123 ) ( cid : 123 )
the bin log - lik is
l ( cid : 123 ) y ( cid : 123 ) p ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) = y log ( cid : 123 ) p ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) + ( cid : 123 ) 123 y ( cid : 123 ) log ( cid : 123 ) 123 p ( cid : 123 ) x ( cid : 123 ) ( cid : 123 )
= log ( cid : 123 ) 123 + e12 ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) ( cid : 123 )
fri , t .
has and r .
tib
a var of los fun for est a fun f ( cid : 123 ) x ( cid : 123 ) for cla .
the hor axi is yf ( cid : 123 ) whi is neg for err and pos for cor cla .
all the los fun are mon in yf ( cid : 123 ) and are cen and sca to mat eyf at f = 123
the cur lab log - lik is the bin log - lik or cro - ent y log p + ( cid : 123 ) 123 y ( cid : 123 ) log ( cid : 123 ) 123 p ( cid : 123 ) .
the cur lab squ err ( p ) is ( cid : 123 ) y p ( cid : 123 ) 123
the cur lab squ err ( f ) is ( cid : 123 ) y f ( cid : 123 ) 123 and inc onc yf exc 123 ( cid : 123 ) the inc pen cla tha are too cor .
hen we see tha :
the pop min of el ( cid : 123 ) y ( cid : 123 ) p ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) and eey ( cid : 123 ) x ( cid : 123 ) coi .
thi is eas see bec the exp log - lik is max at the tru pro p ( cid : 123 ) x ( cid : 123 ) = p ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) , whi den the log f ( cid : 123 ) x ( cid : 123 ) .
by lem 123 we see tha thi is exa the min of eey ( cid : 123 ) x ( cid : 123 ) .
in fac , the exp cri and the ( neg ) log - lik are equ to sec ord in a tay ser aro f = 123 ,
l ( cid : 123 ) y ( cid : 123 ) p ( cid : 123 ) exp ( cid : 123 ) yf ( cid : 123 ) + log ( cid : 123 ) 123 ( cid : 123 ) 123 ( cid : 123 )
gra of exp ( cid : 123 ) yf ( cid : 123 ) and log ( cid : 123 ) 123 + e12 ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) are sho in fig 123 , as a fun of yfp val of yf imp cor cla .
not tha exp ( cid : 123 ) yf ( cid : 123 ) its is not a pro log - lik , as it doe not equ the log of any pro mas fun on plu or min 123
the is ano way to vie the cri j ( cid : 123 ) f ( cid : 123 ) .
it is eas to sho tha
p ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 p ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) ( cid : 123 )
123 log ( cid : 123 ) p ( cid : 123 ) x ( cid : 123 ) / ( cid : 123 ) 123 p ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) .
the rig - han sid is kno as the wit f ( cid : 123 ) x ( cid : 123 ) = 123 sta in the sta lit .
123 is a qua app to the log - lik , and so can be con a gen alt .
add log reg
one fea of bot the exp and log - lik cri is tha the are mon and smo .
eve if the tra err is zer , the cri wil dri the est tow pur sol ( in ter of pro est ) .
if fm1 ( cid : 123 ) x ( cid : 123 ) = ( cid : 123 ) m12 why not est the fm by min the squ err e ( cid : 123 ) y f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 ? fj ( cid : 123 ) x ( cid : 123 ) is the cur pre , thi lea to a for sta pro tha doe an unw t to the res y fm1 ( cid : 123 ) x ( cid : 123 ) at ste m as in ( 123 ) .
emp we hav fou tha thi app wor qui wel , but is dom by tho tha use mon los cri .
we bel tha the non of squ err los ( fig 123 ) is the rea .
cor cla , but wit yf ( cid : 123 ) x ( cid : 123 ) > 123 , inc inc los for inc val of ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) .
thi mak squ - err los an esp poo app to mis err rat .
cla tha are too cor are pen as muc as mis err .
dir opt of the bin log - lik .
in thi sec we exp alg for tti add log reg mod by sta opt of the ber log - lik .
her we foc aga on the two - cla cas and wil use a 123 / 123 res y to rep the out .
we rep - sen the pro of y = 123 by p ( cid : 123 ) x ( cid : 123 ) , whe
ef ( cid : 123 ) x ( cid : 123 ) + ef ( cid : 123 ) x ( cid : 123 ) ( cid : 123 )
alg 123 giv the det .
log ( two cla )
sta wit wei wi = 123 / n i= 123 ( cid : 123 ) 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) n , f ( cid : 123 ) x ( cid : 123 ) = 123 and pro est - 123
rep for m = 123 ( cid : 123 ) 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) m :
mat p ( cid : 123 ) xi ( cid : 123 ) = 123
( a ) com the wor res and wei
p ( cid : 123 ) xi ( cid : 123 ) ( cid : 123 ) 123 p ( cid : 123 ) xi ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) wi = p ( cid : 123 ) xi ( cid : 123 ) ( cid : 123 ) 123 p ( cid : 123 ) xi ( cid : 123 ) ( cid : 123 ) ( cid : 123 )
xi usi wei wi .
( b ) fit the fun fm ( cid : 123 ) x ( cid : 123 ) by a wei lea - squ reg of zi to ( c ) upd f ( cid : 123 ) x ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) + 123 123
out the cla sig ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) = sig ( cid : 123 ) ( cid : 123 ) m
123 fm ( cid : 123 ) x ( cid : 123 ) and p ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) ef ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) / ( cid : 123 ) ef ( cid : 123 ) x ( cid : 123 ) + ef ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) .
alg 123
an ada new alg for tti an add log -
tic reg mod .
fri , t .
has and r .
tib
res 123
the log alg ( two cla , pop ver ) use new ste for tti an add sym log mod by max
der .
con the upd f ( cid : 123 ) x ( cid : 123 ) + f ( cid : 123 ) x ( cid : 123 ) and the exp log -
con on x , we com the rst and sec der at f ( cid : 123 ) x ( cid : 123 ) = 123 ,
123 ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) + f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) log ( cid : 123 ) 123 + e12 ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) +f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 )
el ( cid : 123 ) f + f ( cid : 123 ) = e
s ( cid : 123 ) x ( cid : 123 ) = el ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) + f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) = 123 ( cid : 123 ) y p ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) h ( cid : 123 ) x ( cid : 123 ) = 123 ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) + f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 )
= 123 ( cid : 123 ) p ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 p ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) x ( cid : 123 ) ( cid : 123 )
f ( cid : 123 ) x ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) h ( cid : 123 ) x ( cid : 123 ) 123 ( cid : 123 ) x ( cid : 123 )
= f ( cid : 123 ) x ( cid : 123 ) + 123 = f ( cid : 123 ) x ( cid : 123 ) + 123
whe p ( cid : 123 ) x ( cid : 123 ) is den in ter of f ( cid : 123 ) x ( cid : 123 ) .
the new upd is the
whe w ( cid : 123 ) x ( cid : 123 ) = p ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 p ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) .
equ , the new upd f ( cid : 123 ) x ( cid : 123 ) sol the wei lea - squ app ( abo f ( cid : 123 ) x ( cid : 123 ) ) to the log - lik
f ( cid : 123 ) x ( cid : 123 ) + 123
p ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 p ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) + f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 )
the pop alg des her tra imm to an imp on dat whe e ( cid : 123 ) ( cid : 123 ) x ( cid : 123 ) is rep by a reg met , suc as reg tre ( bre , fri , ols and sto ( 123 ) ) .
whi the rol of the wei are som art in the pop cas , the are not in any imp w ( cid : 123 ) x ( cid : 123 ) is con whe con on x , but the w ( cid : 123 ) xi ( cid : 123 ) in a ter nod of a tre , for exa , dep on the cur val f ( cid : 123 ) xi ( cid : 123 ) , and wil typ not be con .
som the w ( cid : 123 ) x ( cid : 123 ) get ver sma in reg of ( x ) per ( by f ( cid : 123 ) x ( cid : 123 ) ) to be pur is , whe p ( cid : 123 ) x ( cid : 123 ) is clo to 123 or 123
thi can cau num pro in the con of z , and lea to the fol cru imp 123
if y = 123 , the com z = ( cid : 123 ) ( cid : 123 ) y p ( cid : 123 ) / p ( cid : 123 ) 123 p ( cid : 123 ) ( cid : 123 ) as 123 / p .
sin thi num can get lar if p is sma , thr thi rat at z max .
the par - lar val cho for z max is not cru we hav fou emp tha
add log reg
z max ( cid : 123 ) 123 ( cid : 123 ) 123 ( cid : 123 ) wor wel .
lik , if y = 123 , com z = 123 / ( cid : 123 ) 123 p ( cid : 123 ) wit a low thr of z max .
enf a low thr on the wei : w = max ( cid : 123 ) w ( cid : 123 ) 123 mac - zer ( cid : 123 ) .
opt eey ( cid : 123 ) x ( cid : 123 ) by new ste .
the pop ver of the rea ada pro ( alg 123 ) opt e exp ( cid : 123 ) y ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) + f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) exa wit res to f at eac ite .
in alg 123 we pro the gen ada pro tha ins tak ada new ste muc lik the log alg jus des .
res 123
the gen ada alg ( pop ver ) use
new ste for min eey ( cid : 123 ) x ( cid : 123 ) .
j ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) + f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 )
123 ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) + f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 )
hen the new upd is
= e ( cid : 123 ) eyf ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) x ( cid : 123 ) sin y12 = 123 ( cid : 123 )
f ( cid : 123 ) x ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) + e ( cid : 123 ) eyf ( cid : 123 ) x ( cid : 123 ) y ( cid : 123 ) x ( cid : 123 )
= f ( cid : 123 ) x ( cid : 123 ) + ew ( cid : 123 ) y ( cid : 123 ) x ( cid : 123 ) ( cid : 123 )
whe w ( cid : 123 ) x ( cid : 123 ) y ( cid : 123 ) = eyf ( cid : 123 ) x ( cid : 123 ) .
the mai dif bet thi and the rea ada alg is how it use its est of the wei cla pro to upd the fun .
her the upd is fm ( cid : 123 ) x ( cid : 123 ) = pw ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) pw ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) , rat tha hal the
sta wit wei wi = 123 / n ( cid : 123 ) i = 123 ( cid : 123 ) 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) n ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) = 123 ( cid : 123 ) 123
rep for m = 123 ( cid : 123 ) 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) m :
wit wei wi .
( a ) fit the reg fun fm ( cid : 123 ) x ( cid : 123 ) by wei lea - squ of yi to xi ( b ) upd f ( cid : 123 ) x ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) + fm ( cid : 123 ) x ( cid : 123 ) .
( c ) upd wi wi exp ( cid : 123 ) yif ( cid : 123 ) xi ( cid : 123 ) ( cid : 123 ) and ren .
out the cla sig ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) = sig ( cid : 123 ) ( cid : 123 ) m
alg 123
a mod ver of the rea ada alg , usi
new ste rat tha exa opt at eac ste .
fri , t .
has and r .
tib
log - rat as in ( 123 ) : fm ( cid : 123 ) x ( cid : 123 ) = 123 123 log ( cid : 123 ) pw ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) / ( cid : 123 ) pw ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) .
log - rat can be num uns , lea to ver lar upd in pur reg , whi the upd her lie in the ran ( cid : 123 ) 123 ( cid : 123 ) 123 ( cid : 123 ) .
emp evi sug ( see sec 123 ) tha thi mor con alg has sim per to bot the rea ada and log alg , and oft out the bot , esp whe sta is an iss .
the is a str sim bet the upd for the gen ada alg and tho for the log alg .
let p = p ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) , and p ( cid : 123 ) x ( cid : 123 ) = ef ( cid : 123 ) x ( cid : 123 ) / ( cid : 123 ) ef ( cid : 123 ) x ( cid : 123 ) + ef ( cid : 123 ) x ( cid : 123 ) ( cid : 123 )
e ( cid : 123 ) eyf ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) x ( cid : 123 ) = ef ( cid : 123 ) x ( cid : 123 ) p ef ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 p ( cid : 123 ) ef ( cid : 123 ) x ( cid : 123 ) p + ef ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 p ( cid : 123 )
( cid : 123 ) 123 p ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) p + p ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 p ( cid : 123 ) ( cid : 123 )
the ana exp for log fro ( 123 ) is
p ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 p ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) ( cid : 123 )
123 the are nea the sam , but the dif as the p ( cid : 123 ) x ( cid : 123 ) bec at p ( cid : 123 ) x ( cid : 123 ) 123 ext .
for exa , if p 123 and p ( cid : 123 ) x ( cid : 123 ) 123 , ( 123 ) blo up , whi ( 123 ) is abo 123 ( and alw fal in ( cid : 123 ) 123 ( cid : 123 ) 123 ( cid : 123 ) ) .
mul pro .
her we exp ext of boo to cla wit mul cla .
we sta off by pro a nat gen - era of the two - cla sym log tra , and the con - sid spe alg .
in thi con sch and sin ( 123 ) den j res yj for a j cla pro , eac tak val in ( cid : 123 ) 123 ( cid : 123 ) 123 ( cid : 123 ) .
sim - lar the ind res vec wit ele y j is mor sta in the sta lit .
ass the cla are mut exc .
def 123
for a j cla pro let pj ( cid : 123 ) x ( cid : 123 ) = p ( cid : 123 ) yj = 123 ( cid : 123 ) x ( cid : 123 ) .
we den
the sym mul log tra
fj ( cid : 123 ) x ( cid : 123 ) = log pj ( cid : 123 ) x ( cid : 123 ) 123
k=1 efk ( cid : 123 ) x ( cid : 123 ) ( cid : 123 )
fk ( cid : 123 ) x ( cid : 123 ) = 123 ( cid : 123 )
the cen con in ( 123 ) is for num sta onl it sim pin the fj dow , els we cou add an arb con to eac fj and the pro rem the sam .
the equ of the two den is eas est , as wel as the equ wit the two - cla cas .
add log reg
sch and sin ( 123 ) pro sev gen of ada for the mul cas , and als ref to oth pro ( fre and sch ( 123 ) , sch ( 123 ) ) ; we des the ada . mh alg ( see alg - rit 123 ) , sin it see to dom the oth in the emp stu .
we the con it to the mod pre her .
we wil ref to the aug var in alg 123 as the cla var c .
we mak a few obs : j=1 eey ( cid : 123 ) x ( cid : 123 ) , whi is equ to run sep pop boo alg on eac of the j pro of siz n obt by par the n j sam in the obv fas .
thi is see tri by rst con on c = j , and the x ( cid : 123 ) c = j , whe com con exp .
the pop ver of thi alg min
the sam is alm tru for a tre - bas alg .
we see thi bec : ( a ) if the rst spl is on c , eit a j - nar spl if per , or els j 123 bin spl , the the sub are ide to sep tre gro to eac of the j gro .
thi wil alw be the cas for the rst tre .
( b ) if a tre doe not spl on c any on the pat to a ter nod , the tha nod ret a fun fm ( cid : 123 ) x ( cid : 123 ) j ( cid : 123 ) = gm ( cid : 123 ) x ( cid : 123 ) tha con not to the cla dec .
how , as lon as a tre inc a spl on c at lea onc on eve pat to a ter nod , it wil mak a con to the cla for all inp fea val .
the adv or dis of bui one lar tre usi cla lab as an add inp fea is not cle .
no mot is pro .
we the imp ada . mh usi the mor tra dir j=1 e exp ( cid : 123 ) yjf ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) app of bui j sep tre to min
we hav thu sho
res 123
the ada . mh alg for a j - cla pro ts j unc -
ple add log mod , gj ( cid : 123 ) x ( cid : 123 ) = 123 aga the res .
123 log pj ( cid : 123 ) x ( cid : 123 ) / ( cid : 123 ) 123 pj ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) , eac cla
ada . mh ( sch and sin ( 123 ) )
exp the ori n obs int n j pai ( cid : 123 ) ( cid : 123 ) xi ( cid : 123 ) 123 ( cid : 123 ) ( cid : 123 ) yi1 ( cid : 123 ) , is the ( cid : 123 ) 123 ( cid : 123 ) 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) xi ( cid : 123 ) 123 ( cid : 123 ) ( cid : 123 ) yi1 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) xi ( cid : 123 ) j ( cid : 123 ) ( cid : 123 ) yij ( cid : 123 ) ( cid : 123 ) res for cla j and obs i .
f ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) j ( cid : 123 ) ( cid : 123 ) r ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) j ( cid : 123 ) = ( cid : 123 ) 123
app rea ada to the aug dat , pro a fun 123
out the cla arg max f ( cid : 123 ) x ( cid : 123 ) j ( cid : 123 ) .
i= 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) n .
her yij
m fm ( cid : 123 ) x ( cid : 123 ) j ( cid : 123 ) .
alg 123
the ada . mh alg con the j cla pro int tha of est a two cla cla on a tra set j tim as lar , wit an add fea den by the set of cla lab .
fri , t .
has and r .
tib
in pri thi par is ne , sin gj ( cid : 123 ) x ( cid : 123 ) is mon in pj ( cid : 123 ) x ( cid : 123 ) .
how , we are est the gj ( cid : 123 ) x ( cid : 123 ) in an unc fas , and the is no gua tha the imp pro sum to 123
we giv som exa whe thi mak a dif , and ada . mh per mor poo tha an alt cou lik pro .
sch and sin ada . mh was als int to cov sit whe obs can bel to mor tha one cla .
the mh rep mul - lab ham , ham los bei use to mea the err in the spa of 123 pos cla lab .
in thi con tti a sep cla for eac lab is a rea str .
how , sch and sin als pro usi ada . mh whe the cla lab are mut exc , whi is the foc in thi pap .
alg 123 is a nat gen of alg 123 for tti the j - cla
log reg mod ( 123 ) .
res 123
the log alg ( j cla , pop ver ) use qua - new ste for tti an add sym log mod by
log ( j cla )
sta wit wei wij = 123 / n ( cid : 123 ) i = 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) n ( cid : 123 ) j = 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) j ( cid : 123 ) fj ( cid : 123 ) x ( cid : 123 ) = 123 and
pj ( cid : 123 ) x ( cid : 123 ) = 123 / j j .
rep for m = 123 ( cid : 123 ) 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) m : ( a ) rep for j = 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) j :
( i ) com wor res and wei in the jth cla ,
( b ) set fmj ( cid : 123 ) x ( cid : 123 ) j12 ( c ) upd pj ( cid : 123 ) x ( cid : 123 ) via ( 123 ) .
out the cla arg max fj ( cid : 123 ) x ( cid : 123 ) .
alg 123
an ada new alg for tti an add mul -
tip log reg mod .
pj ( cid : 123 ) xi ( cid : 123 ) ( cid : 123 ) 123 pj ( cid : 123 ) xi ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) wij = pj ( cid : 123 ) xi ( cid : 123 ) ( cid : 123 ) 123 pj ( cid : 123 ) xi ( cid : 123 ) ( cid : 123 ) ( cid : 123 )
( ii ) fit the fun fmj ( cid : 123 ) x ( cid : 123 ) by a wei lea - squ reg of zij
to xi wit wei wij .
k=1 fmk ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) , and fj ( cid : 123 ) x ( cid : 123 ) fj ( cid : 123 ) x ( cid : 123 ) +
add log reg
we rst giv the sco and hes for the pop new alg
cor to a sta mul par
gj ( cid : 123 ) x ( cid : 123 ) = log
j = 123 ( cid : 123 ) x ( cid : 123 ) j = 123 ( cid : 123 ) x ( cid : 123 )
wit gj ( cid : 123 ) x ( cid : 123 ) = 123 ( and the cho of j for the bas cla is arb ) .
the exp con log - lik is :
e ( cid : 123 ) l ( cid : 123 ) g + g ( cid : 123 ) ( cid : 123 ) x ( cid : 123 ) = j12 ( cid : 123 )
j ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) gj ( cid : 123 ) x ( cid : 123 ) + gj ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 + j12 ( cid : 123 ) j pj ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) j = 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) j 123 ( cid : 123 )
sj ( cid : 123 ) x ( cid : 123 ) = e ( cid : 123 ) y
hj ( cid : 123 ) k ( cid : 123 ) x ( cid : 123 ) = pj ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) jk pk ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) j ( cid : 123 ) k = 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) j 123 ( cid : 123 )
our qua - new upd amo to usi a dia app to
the hes , pro upd :
pj ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 pj ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) j = 123 ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) j 123 ( cid : 123 )
and set fj ( cid : 123 ) x ( cid : 123 ) = gj ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 / j ( cid : 123 ) ( cid : 123 ) j 123
to con to the sym par , we wou not tha gj = 123 , k=1 gk ( cid : 123 ) x ( cid : 123 ) .
how , thi pro cou be app usi any cla as the bas , not jus the jth .
by ave ove all cho for the bas cla , we get the upd
pj ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123 pj ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) 123
for mor rig par mod and ful new ste , thi sym - met wou be red .
wit qua - new ste and ada ( tre bas ) mod , the sym rem the dep on the cho of the bas cla .
sim stu .
in thi sec the fou avo of boo out - lin abo are app to sev art con pro .
com - iso bas on rea dat are pre in sec 123
an adv of com mad in a sim set is tha all as - pec of eac exa are kno , inc the bay err rat and the com of the dec bou .
in add , the pop exp err rat ach by eac of the res met can be est to arb acc by ave ove a lar num of dif tra and tes dat
fri , t .
has and r .
tib
set dra fro the pop .
the fou boo met com her
dab : dis ada 123
rab : rea ada 123
lb : log 123 and 123
gab : gen ada 123
dab , rab and gab han mul cla usi the ada . mh
in an att to dif per , all of the sim exa inv fai com dec bou .
the ten inp fea for all exa - ple are ran dra fro a ten - dim sta nor dis x n12 ( cid : 123 ) 123 ( cid : 123 ) i ( cid : 123 ) .
for the rst thr exa the dec bou sep suc cla are nes con ten - dim sph con by thr the squ - rad fro the ori
r12 = 123 ( cid : 123 )
i < tk ( cid : 123 )
ck = ( cid : 123 ) xi ( cid : 123 ) tk1 r12
eac cla ck ( cid : 123 ) 123 k k ( cid : 123 ) is den as the sub of obs wit t12 = 123 and tk = .
the ( cid : 123 ) tk ( cid : 123 ) k12 for eac exa wer cho so as to put app equ num of obs in eac cla .
the tra sam siz is n = k 123 so tha app 123 tra obs are in eac cla .
an ind dra tes set of 123 , 123 obs was use to est err rat for eac tra set .
ave res ove ten suc ind dra tra set com wer use for the nal err rat est .
the cor sta unc ( sta - dar err ) of the nal est ( ave ) are app a lin wid on eac plo .
fig 123 ( top lef ) com the fou alg in the two - cla ( cid : 123 ) k = 123 ( cid : 123 ) cas usi a two - ter nod dec tre ( stu ) as the bas cla .
sho is err rat as a fun of num of boo ite .
the upp ( bla ) lin rep dab and the oth thr nea coi lin are the oth thr met ( dot red = rab , sho - das gre = lb , and lon - das blu = gab ) .
not tha the som err beh of dab , esp for les tha 123 ite , is not due to sta unc .
for les tha 123 ite lb has a min edg , aft tha it is a dea hea wit rab and gab .
dab sho sub inf per her wit rou twi the err rat at all ite .
fig 123 ( low lef ) sho the cor res for thr cla ( cid : 123 ) k = 123 ( cid : 123 ) aga wit two - ter nod tre .
her the pro is mor dif as rep by inc err rat for all fou met , but the rel - shi is rou the sam : the upp ( bla ) lin rep dab and the oth
add log reg
tes err cur for the sim exp wit an add dec bou , as des in ( cid : 123 ) 123 ( cid : 123 ) .
in all pan exc the top rig , the sol cur ( rep dis ada ) lie alo abo the oth thr cur .
thr nea coi lin are the oth thr met .
the sit is som dif for lar num of cla .
fig 123 ( low rig ) sho res for k = 123 whi are typ for k 123
as bef , dab inc muc hig err rat tha all the oth , and rab and gab hav nea ide - tic per .
how , the per of lb rel to rab and gab has cha .
up to abo 123 ite it has the sam err rat .
fro 123 to abo 123 ite lbs err rat are sli hig tha the oth two .
aft 123 ite the err rat for lb con to imp whe tha
fri , t .
has and r .
tib
for rab and gab lev off , dec muc mor slo .
by 123 ite the err rat for lb is 123 whe tha for rab and gab is 123 .
spe as to the rea for lbs per gai in the sit is pre
in the abo exa a stu was use as the bas cla .
one mig exp the use of lar tre wou do bet for the rat com pro - lem .
fig 123 ( top rig ) sho res for the two - cla pro , her boo - ing tre wit eig ter nod .
the res can be com to tho for stu in fig 123 ( top lef ) .
ini , err rat for boo eig - nod tre dec muc mor rap tha for stu , wit eac suc ite , for all met .
how , the err rat qui lev off and imp is ver slo aft abo 123 ite .
the ove per of dab is muc imp wit the big tre , com clo to tha of the oth thr met .
as bef rab , gab and lb exh nea ide per .
not tha at eac ite the eig - nod tre mod con of fou tim the num of add ter as doe the cor stu mod .
thi is why the err rat dec so muc mor rap in the ear ite .
in ter of mod com ( and tra tim ) , a 123 - ite mod usi eig - ter nod tre is equ to a 123 - ite stu mod .
com the top two pan in fig 123 , one see tha for rab , gab and lb the err rat usi the big tre ( 123 ) is in fac 123 hig tha tha for stu ( 123 ) at 123 ite , eve tho the for is fou tim mor com .
thi see mys beh is eas und by exa the nat of the dec bou sep the cla .
the bay dec bou bet two cla is the set
p ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) p ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) = 123
or sim ( cid : 123 ) x ( cid : 123 ) b ( cid : 123 ) x ( cid : 123 ) = 123 ( cid : 123 ) .
to app thi set it is suf to est the log b ( cid : 123 ) x ( cid : 123 ) , or any mon tra of b ( cid : 123 ) x ( cid : 123 ) , as clo as pos .
as dis abo , boo pro an add log mod who com - pon fun are rep by the bas cla .
wit stu as the bas cla , eac com fun has the for
m12 ( cid : 123 ) xjt ( cid : 123 ) + cr
fm ( cid : 123 ) x ( cid : 123 ) = cl
if the mth stu cho to spl on coo j .
her tm is the spl - poi , m are the wei mea of the res in the lef and rig ter nod .
thu the mod pro by boo stu is add in the ori fea ,
m and cr
f ( cid : 123 ) x ( cid : 123 ) = p ( cid : 123 )
whe gj ( cid : 123 ) xj ( cid : 123 ) add tog all tho stu inv xj ( and is 123 if non
add log reg
exa of ( 123 ) and ( 123 ) rev tha an opt dec bou for the abo exa is als add in the ori fea , wit fj ( cid : 123 ) xj ( cid : 123 ) = x12 con .
thu , in the con of dec tre , stu are ide mat to the pro lar tre are not nee .
how boo lar tre nee not be cou in thi cas if all of the spl in eac ind tre are mad on the sam pre var .
thi wou als pro an add mod in the ori fea ( 123 ) .
how , due to the for gre sta str use by boo , thi is not lik to hap if the dec bou fun inv mor tha one pre eac ind tre wil try to do its bes to inv all of the imp pre .
owi to the nat of dec tre , thi wil pro mod wit int eff mos ter in the mod wil inv pro in mor tha one var .
suc non mod are not as wel sui for app tru add dec bou suc as ( 123 ) and ( 123 ) .
thi is ree in inc err rat as obs in fig 123
the abo dis als sug tha if the dec bou sep pai of cla wer inh non in the pre , the boo stu wou be les adv tha usi lar tre .
a tre wit m ter nod can pro bas fun wit a max int ord of min ( cid : 123 ) m 123 ( cid : 123 ) p ( cid : 123 ) whe p is the num of pre fea .
the hig ord bas fun pro the pos to mor acc est tho dec bou b ( cid : 123 ) x ( cid : 123 ) wit hig - ord int .
the pur of the nex exa is to ver thi int .
the are two cla ( cid : 123 ) k = 123 ( cid : 123 ) and 123 tra obs wit the ( cid : 123 ) xi ( cid : 123 ) 123 dra fro a ten - dim nor dis as in the pre exa .
cla lab wer ran ass to eac obs wit log - odd pr ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 ) pr ( cid : 123 ) y = 123 ( cid : 123 ) x ( cid : 123 )
123 + 123 ( cid : 123 )
app equ num of obs are ass to eac of the two cla , and the bay err rat is 123 .
the dec bou for thi pro is a com fun of the rst six pre var inv all of the in sec - ord int of equ str .
as in the abo exa , tes set of 123 , 123 obs was use to est err rat for eac tra set , and nal est wer ave ove ten rep .
fig 123 ( top lef ) sho tes - err rat as a fun of ite num for eac of the fou boo met usi stu .
as in the pre exa , rab and gab tra eac oth ver clo .
dab beg ver slo , bei dom by all of the oth unt aro 123 ite , whe it pas bel rab and gab .
lb mos dom , hav the low err rat unt abo 123 ite .
at tha poi dab cat up and by 123 ite it may hav a ver sli edg .
how , non of the boo met per wel wit stu on thi pro , the bes err rat bei 123 .
fig 123 ( top rig ) sho the cor plo whe fou ter nod tre are boo .
her the is a dra imp wit all of the fou
fri , t .
has and r .
tib
tes err cur for the sim exp wit a non dec bou , as des in ( 123 ) .
met .
for the rst tim the is som sma dif bet rab and gab .
at nea all ite the per ran is lb bes , fol by gab , rab and dab in ord .
at 123 ite lb ach an err rat of 123 .
fig 123 ( low lef ) sho res whe eig ter nod tre are boo .
her , err rat are gen fur red wit lb imp the lea ( 123 ) , but sti dom .
the per ran amo the oth thr met cha wit inc ite dab ove rab
add log reg
at aro 123 ite and gab at abo 123 bec fai clo to lb by 123 ite wit an err rat of 123 .
alt lim in sco , the sim stu sug sev tre .
the exp why boo stu can som be sup to usi lar tre , and sug sit whe thi is lik to be the cas tha is whe dec bou b ( cid : 123 ) x ( cid : 123 ) can be clo app by fun tha are add in the ori pre fea .
whe hig ord int are req , stu exh poo per .
the exa ill the clo sim bet rab and gab .
in all cas the dif in per - man bet dab and the oth dec whe lar tre and mor ite are use , som ove the oth .
mor gen , rel per of the fou met dep on the pro at han in ter of the nat of the dec bou , the com of the bas cla and the num of boo ite .
the sup per of lb in fig 123 ( low rig ) app to be a con of the mul log mod ( alg 123 ) .
all of the oth met use the asy ada . mh str ( alg 123 ) of bui sep two - cla mod for eac ind cla aga the poo com - ple cla .
eve if the dec bou sep all cla pai are rel sim , poo cla can pro com dec bou - ari tha are dif to app ( fri ( 123 ) ) .
by con all of the cla sim , the sym mul mod is bet abl to tak adv of sim pai bou whe the exi ( has and tib ( 123 ) ) .
as not abo , the pai bou ind by ( 123 ) and ( 123 ) are sim whe vie in the con of add mod , whe the poo bou are mor com the can be wel app by fun tha are add in the ori pre var .
the dec bou ass wit the exa wer del cho to be geo com in an att to eli per dif - enc amo the met bei tes .
suc com bou are not lik to oft occ in pra .
man pra pro inv com - tiv sim bou ( hol ( 123 ) ) ; in suc cas per dif wil sti be sit dep , but cor les pro .
som exp wit rea wor dat .
in thi sec we sho the res of run the fou tti met : log , dis ada , rea ada and gen ada on a col of dat fro the uc - irv mac lea arc , plu a pop sim dat .
the bas lea is a tre in eac cas , wit eit two or eig ter nod .
for com - par , a sin dec tre was als t ( usi the tre fun in spl ) , wit the tre siz det by 123 - fol cro - val .
the dat are sum in tab 123
the tes err rat are sho in tab 123 for the sma dat , and in tab 123 for the lar one .
the vow , son , sat and let dat com wit a pre tes set .
the wav dat is sim , as des in bre , fri , ols and
fri , t .
has and r .
tib
dat use in the exp
sto ( 123 ) .
for the oth , 123 - fol cro - val was use to est the
it is dif to dis tre on the sma dat ( tab 123 ) bec all but qui lar obs dif in per cou be att to sam uct .
on the vow , bre can , ion , son and wav dat , pur add stu mod see to per com to the lar ( eig - nod ) tre .
the gla dat see to ben a lit fro lar tre .
the is no cle dif in per amo the boo -
on the lar dat set ( tab 123 ) cle tre are dis .
for the sat dat the eig - nod tre mod are onl sli , but sig , mor acc tha the pur add mod .
for the let dat the is no con .
boo stu is cle ina .
the is no cle dif - ent amo the boo met for eig - nod tre .
for the stu , log , rea ada and gen ada hav com per - bre man , dis sup to dis ada .
thi is con wit the res of the sim stu ( sec 123 ) .
exc per for dis ada , the rea dat exa fai to dem - str per dif bet the var boo met .
thi is in con to the sim dat set of sec 123
the log gen - all dom , alt oft by a sma mar .
the ina of the rea dat exa to dis may ree sta dif in est - ing sub dif wit sma sam .
alt , it may be tha the und dec bou are all rel sim ( hol ( 123 ) ) so tha all rea met exh sim per .
add log tre .
in mos app of boo the bas cla - sie is con to be a pri , rep cal by the boo pro - dur as ite pro .
the ope per by the bas cla are the sam as the wou be in any oth con giv the sam dat and wei .
the fac tha the nal mod is goi to be a lin com of a lar num of suc cla is not tak int acc .
in par , whe usi dec tre , the sam tre gro and pru alg are
add log reg
tes err rat on sma rea exa
123 ter nod
123 ter nod
car err = 123 ( cid : 123 ) 123
car err = 123 ( cid : 123 ) 123
car err = 123 ( cid : 123 ) 123
car err = 123 ( cid : 123 ) 123
car err = 123 ( cid : 123 ) 123
car err = 123 ( cid : 123 ) 123
fri , t .
has and r .
tib
tes err rat on lar dat exa
car err = 123 ( cid : 123 ) 123
car err = 123 ( cid : 123 ) 123
gen emp .
som alt are mad ( suc as no pru ) for pro con and spe .
whe boo is vie in the lig of add mod , how , thi gre app can be see to be far fro opt in man sit .
as dis in sec 123 the goa of the nal cla is to pro an acc app to the dec bou fun b ( cid : 123 ) x ( cid : 123 ) .
in the con of boo - ing , thi goa app to the nal add mod , not to the ind ter ( bas cla ) at the tim the wer con .
for exa , it was see in sec 123 tha if b ( cid : 123 ) x ( cid : 123 ) was clo to bei add in the ori pre fea , the boo stu was opt sin it pro an app - tio wit the sam str .
bui lar tre inc the err rat of the nal mod bec the res app inv hig - ord int amo the fea .
the lar tre opt err rat of the ind bas cla , giv the wei at tha ste , and eve pro low unw err rat in the ear sta .
how , aft a suf num of boo , the stu - bas mod ach sup per .
mor gen , one can con an exp of the dec bou
fun in a fun ano dec ( fri ( 123 ) )
j ( cid : 123 ) k ( cid : 123 ) l
b ( cid : 123 ) x ( cid : 123 ) = ( cid : 123 )
fj ( cid : 123 ) xj ( cid : 123 ) + ( cid : 123 )
fjk ( cid : 123 ) xj ( cid : 123 ) xk ( cid : 123 ) + ( cid : 123 )
fjk ( cid : 123 ) xj ( cid : 123 ) xk ( cid : 123 ) xl ( cid : 123 ) + ( cid : 123 )
add log reg
the rst sum rep the clo fun to b ( cid : 123 ) x ( cid : 123 ) tha is add in the ori fea , the rst two rep the clo app inv - ing at mos two - fea int , the rst thr rep thr - fea int , and so on .
if b ( cid : 123 ) x ( cid : 123 ) can be acc app by suc an exp , tru at low int ord , the all the bas cla - er to pro hig ord int can red the acc of the nal boo mod .
in the con of dec tre , hig ord int are pro by dee tre .
in sit whe the tru und dec bou fun adm a low ord ano dec , one can tak adv of thi str to imp acc by res the dep of the bas dec tre to be not muc lar tha the act int ord of b ( cid : 123 ) x ( cid : 123 ) .
sin thi is not lik to be kno in adv for any par pro , thi max dep bec a met - par of the pro to be est by som mod sel tec , suc as cro - val .
one can res the dep of an ind dec tre by usi its sta - dar pru pro , sta fro the lar pos tre , but req it to del eno spl to ach the des max dep .
thi can be com was whe thi dep is sma .
the tim req to bui the tre is pro to the dep of the lar pos tre bef pru .
the , dra com sav can be ach by sim - ply sto the gro pro at the max dep , or alt at a max num of ter nod .
the sta heu arg in fav of gro lar tre and the pru do not app in the con of boo .
sho in any ind tre can be com by tre gro lat in the boo seq .
if a tru str bas on num of ter nod is to be emp , it is nec to den an ord in whi spl tak pla .
we ado a bes - rst str .
an opt spl is com for eac cur ter nod .
the nod who spl wou ach the gre red in the tre bui cri is the act spl .
thi inc the num of ter nod by one .
thi con unt a max num m of ter - min not is ind .
sta com tri can be emp so tha ind tre in thi ord req no mor com tha oth ord com use in dec tre ind .
the tru lim m is app to all tre in the boo seq .
it is thu a met - par of the ent boo pro .
an opt val can be est thr sta mod sel tec suc as min cro - val err rat of the nal boo mod .
we ref to thi com - nat of tru bes - rst tre , wit boo , as add log tre ( alt ) .
bes - rst tre wer use in all of the sim and rea exa .
one can com res on the lat ( tab 123 and 123 ) to cor res rep by die ( ( 123 ) , tab 123 ) on com dat set .
err rat ach by alt wit ver sma tru val are see to com qui fav wit oth com app usi muc lar tre at eac boo ste .
eve whe err rat are the sam , the com sav
fri , t .
has and r .
tib
coo fun for the add log tre obt by boo ( log ) wit stu , for the two - cla nes sph exa fro sec 123
ass wit alt can be qui imp in dat min con whe lar dat set cau com tim to bec an iss .
ano adv of low ord app is mod vis .
in par , for mod add in the inp fea ( 123 ) , the con of eac fea xj can be vie as a gra of gj ( cid : 123 ) xj ( cid : 123 ) plo aga xj .
fig 123 sho suc plo for the ten fea of the two - cla nes sph exa of fig 123
the fun are sho for the rst cla con nea the ori the cor fun for the oth cla are the neg of
the plo in fig 123 cle sho tha the con to the log - odd of eac ind fea is app qua , whi mat the gen - ati mod ( 123 ) and ( 123 ) .
whe the are mor tha two cla , plo sim to fig 123 can be mad for eac cla and ana int .
hig ord int mod are mor dif to vis .
if the are at mos two - fea int , the two - var con can be vis usi con or per mes plo .
bey two - fea int , vis tec are eve les eff .
eve whe non ( stu ) mod do not ach the hig acc , the can be ver use as des sta owi to the int of the res mod .
wei tri .
in thi sec we pro a sim ide and sho tha it can dra red com for boo mod wit sac - cin acc .
des its app sim , thi app doe not app to be in com use ( alt sim ide hav bee pro bef : sch ( 123 ) , fre ( 123 ) ) .
at eac boo ite the is a dis of wei ove the tra sam .
as ite pro , thi dis ten to bec hig ske tow sma wei val .
a lar fra of the tra sam bec cor cla wit inc con , the rec sma wei .
obs wit ver low rel wei hav lit imp on tra of the bas cla onl tho tha car the dom pro of the wei mas are inu -
add log reg
the fra of suc hig wei obs can bec ver sma in lat ite .
thi sug tha at any ite one can sim del fro the tra sam the lar fra of obs wit ver low wei wit hav muc eff on the res ind cla .
how , com - put is red sin it ten to be pro to the siz of the tra sam , reg of wei .
at eac boo ite , tra obs wit wei wi les tha a thr wi < t ( cid : 123 ) ( cid : 123 ) are not use to tra the cla .
we tak the val of t ( cid : 123 ) ( cid : 123 ) to be the th qua of the wei dis ove the tra dat at the cor ite .
tha is , onl tho obs tha car the fra 123 of the tot wei mas are use for tra .
typ ( cid : 123 ) 123 ( cid : 123 ) 123 ( cid : 123 ) 123 ( cid : 123 ) 123 ( cid : 123 ) so tha the dat use for tra car fro 123 to 123 of the tot wei mas .
not tha the wei for all tra obs are rec at eac ite .
obs del at a par ite may the ree at lat ite if the wei sub inc rel to oth obs .
fig 123 ( lef pan ) sho tes - err rat as a fun of ite num for the let rec pro des in sec 123 , her usi gen ada and eig - nod tre as the bas cla .
two err rat cur are sho .
the bla sol one rep usi the ful tra sam at eac ite ( cid : 123 ) = 123 ( cid : 123 ) , whe the blu das cur rep the cor err rat for = 123 ( cid : 123 ) 123
the two cur tra eac oth ver clo , esp at the lat ite .
fig 123 ( rig pan ) sho the cor fra - tio of obs use to tra the bas cla as a fun of ite num .
her the two cur are not sim .
wit = 123 ( cid : 123 ) 123 the num of obs use for tra dro ver rap rea rou 123 of the tot at 123 ite .
by 123 ite it is dow to abo 123 whe it sta thr the res of the boo pro .
thu , com is red
the lef pan sho the tes err for the let rec pro as a fun of ite num .
the bla sol cur use all the tra dat , the red das cur use a sub bas on wei thr .
the rig pan sho the per of tra dat use for bot app .
the upp cur ste dow , bec tra can sto for an ent cla if it is t suf wel ( see tex ) .
fri , t .
has and r .
tib
by ove a fac of 123 wit no app los in cla acc .
the rea why sam siz in thi cas dec for = 123 aft 123 ite is tha if all of the obs in a par cla are cla cor wit ver hig con ( cid : 123 ) fk > 123 log ( cid : 123 ) n ( cid : 123 ) ( cid : 123 ) tra for tha cla sto , and con - tin onl for the rem cla .
at 123 ite , 123 cla rem of the ori 123 cla .
the las col lab fra in tab 123 for the let - rec pro sho the ave fra of obs use in tra the bas cla ove the 123 ite , for all boo met and tre siz .
for eig - nod tre , all met beh as sho in fig 123
wit stu , log use con les dat tha the oth and is the cor fas .
thi is a gen pro of log tha som giv it an adv - tag wit wei tri .
unl the oth met , the log wei wi = pi ( cid : 123 ) 123 pi ( cid : 123 ) do not in any way inv the cla out yi; the sim mea nea to the cur est dec bou fm ( cid : 123 ) x ( cid : 123 ) = 123
dis sma wei thu ret onl tho tra obs tha are est to be clo to the bou .
for the oth thr pro the wei is mon in yif ( cid : 123 ) xi ( cid : 123 ) .
thi giv hig wei to cur mis - cla tra obs , esp tho far fro the bou .
if aft tri , the fra of obs rem is les tha the err rat , the sub pas to the bas lea wil be hig unb con - ing ver few cor cla obs .
thi imb see to inh lea .
no suc imb occ wit log sin nea the dec bou , cor and mis obs app in rou equ
as thi exa ill , ver lar red in com for boo - ing can be ach by thi sim tri .
a var of oth exa ( not sho ) exh sim beh wit all boo met .
not tha oth com app to cla suc as bag ( bre ( 123 ) ) and ran tre ( die ( 123 ) ) whi adm par imp - tio , can tak adv of thi app to red com .
fur gen of boo .
we hav sho abo tha ada ts an add mod , opt a cri sim to bin log - lik , via an ada new met .
thi sug way in whi the boo par may be gen .
fir , the new ste can be rep by a gra ste , slo dow the tti pro .
thi can red sus to ove and lea to imp per .
sec - ond , any smo los fun can be use : for reg , squ err is nat , lea to the tti of res boo alg men in the int .
how , oth los fun mig hav ben , for exa , tap squ err bas on hub rob inu fun ( hub ( 123 ) ) .
the res pro is a fas , con met for res - tan tti of add mod .
det of the gen may be fou in fri ( 123 ) .
add log reg
con rem .
in ord to und a lea pro sta it is nec to ide two imp asp : its str mod and its err mod .
the for is mos imp sin it det the fun spa of the app , the cha the cla of fun or hyp tha can be acc app wit it .
the err mod spe the dis of ran dep of sam dat fro the str mod .
it the den the cri to be opt in the est of the str mod .
we hav sho tha the str mod for boo is add on the log sca wit the bas lea pro the add com .
thi und alo exp man of the pro of boo .
it is no sur - pri tha a lar num of suc ( joi opt ) com den a muc ric cla of lea tha one of the alo .
it rev tha in the con of boo all bas lea are not equ , and the is no uni - ver bes cho ove all sit .
as ill in sec 123 , the bas lea nee to be cho so tha the res add exp mat the par dec bou enc .
eve in the lim con of boo dec tre the int ord , as cha by the num of ter nod , nee to be cho wit car .
pur add mod ind by dec stu are som , but not alw , the bes .
how , we con - jec tha bou inv ver hig - ord int wil rar be enc in pra .
thi mot our add log tre ( alt ) pro - ced des in sec 123
the err mod for two - cla boo is the obv one for bin var - abl , nam the ber dis .
we sho tha the ada pro - dur max a cri tha is clo rel to exp log - ber lik , hav the ide sol in the dis ( l12 ) lim of inn dat .
we der a mor dir pro for max thi log - lik ( log ) and sho tha it exh pro nea ide to tho of rea ada .
in the mul cas , the ada pro max a sep ber lik for eac cla ver the oth .
thi is a nat cho and is esp app whe obs can bel to mor tha one cla ( sch and sin ( 123 ) ) .
in the mor usu set of a uni cla lab for eac obs , the sym mul dis is a mor app err mod .
we dev a mul log pro - dur tha max the cor log - lik by qua - new ste - pin .
we sho thr sim exa tha the exi set whe thi app lea to sup per , alt non of the sit - tio see to hav bee enc in the set of rea dat exa use for ill the per of bot app had qui sim per - man ove the exa .
the con dev in thi pap sug tha the is ver lit , if any , con bet ( det ) wei boo and oth ( ran ) ens met suc as bag ( bre ( 123 ) ) and ran tre ( die ( 123 ) ) .
in the lan of lea - squ reg , the lat are
fri , t .
has and r .
tib
pur var red pro int to mit ins , esp - cia tha ass wit dec tre .
boo on the oth han see fun dif .
it app to be mai a bia red pro , int to inc the exi of sta ( hig bia ) wea lea by inc the in a joi tte add exp .
the dis bec les cle ( bre ( 123 ) ) whe boo is imp by nit wei ran sam ins of wei opt - miz .
the adv or dis of int ran int boo by dra nit sam is not cle .
if the tur out to be an adv wit ran in som sit , the the deg of ran - iza , as ree by the sam siz , is an ope que .
it is not obv tha the com cho of usi the siz of the ori tra sam is opt in all ( or any ) sit .
one fas iss not cov in thi pap is the fac tha boo , wha avo , see res to ove .
som pos exp are :
as the log ite pro , the ove imp of cha int - duc by fm ( cid : 123 ) x ( cid : 123 ) red .
onl obs wit app wei det - min the new fun nea the dec bou .
by den the obs hav f ( cid : 123 ) x ( cid : 123 ) nea zer and can be aff by cha , whi tho in pur reg hav lar val of ( cid : 123 ) f ( cid : 123 ) x ( cid : 123 ) ( cid : 123 ) and are les lik to be mod .
the sta nat of the boo alg doe not all the ful col - lec of par to be joi t , and thu has far low var tha the ful par mig sug .
in the com lea the - ory lit thi is exp in ter of vc dim of the ens com to tha of eac wea lea .
rea ada ( stu ) on a noi con - sph pro , wit 123 obs per cla and bay err 123 .
the tes err ( upp cur ) inc aft abo fty ite .
add log reg
cla are hur les by ove tha oth fun est ( e . g . , the fam ris bou of the 123 - nea - nei cla , cov and
fig 123 sho a cas whe boo doe ove .
the dat are gen - ate fro two ten - dim sph gau wit the sam mea , and var cho so tha the bay err is 123 ( 123 sam per cla ) .
we use rea ada and stu ( the res wer sim for all the boo alg ) .
aft abo 123 ite the tes err ( slo ) inc .
sch , fre , bar and lee ( 123 ) sug tha the pro of ada , inc its res to ove , can be und in ter of cla mar .
how , bre ( 123 ) pre evi cou to thi exp .
wha the exp , the emp evi is str the int of boo by sch , fre and col has bro an exc and imp set of new ide to the tab .
ack .
we tha and buj for ale us to the rec wor on tex cla at at& lab , bog pop for ill - min dis on pac lea the and leo bre and rob sch for use com on an ear ver of thi pap .
we als tha two ano ref and an ass edi for det and use - ful com on an ear dra of the pap .
