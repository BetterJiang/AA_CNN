in this paper , we describe an approach for understanding transcriptional regulation from both gene expression and promoter sequence data .
we aim to identify transcriptional modulessets of genes that are co - regulated in a set of experiments , through a common motif prole .
using the em algorithm , our approach renes both the module assignment and the motif prole so as to best explain the expression data as a function of transcriptional motifs .
it also dynamically adds and deletes motifs , as required to provide a genome - wide explanation of the expression data .
we evaluate the method on two saccharomyces cerevisiae gene expression data sets , showing that our approach is better than a standard one at recovering known motifs and at generating biologically coherent modules .
we also combine our results with binding localization data to obtain regulatory relationships with known transcription factors , and show that many of the inferred relationships have support in the literature .
keywords : probabilistic models , gene expression , tran -
many cellular processes are regulated at the transcriptional level , by one or more transcription factors that bind to short dna sequence motifs in the upstream regions of the process genes .
these co - regulated genes then exhibit sim - ilar patterns of expression .
given the upstream regions of all genes , and measurements of their expression under var - ious conditions , we could hope to reverse engineer the underlying regulatory mechanisms and identify transcrip - tional modulessets of genes that are co - regulated under these conditions through a common motif or combination
in this paper , we take a genome - wide approach for dis - covering this modular organization , based on the premise
to whom correspondence should be addressed .
that transcriptional elements should explain the observed expression patterns as much as possible .
we dene a prob - abilistic graphical model ( pearl , 123 ) that integrates both the gene expression measurements and the dna sequence data into a unied model .
the model assumes that genes are partitioned into modules , which determine the genes expression prole .
each module is characterized by a mo - tif prole , which species the relevance of different se - quence motifs to the module .
a genes module assignment is a function of the sequence motifs in its promoter re - gion .
however , our model does not assume that all motifs are necessarily active .
in fact , as motifs are usually short , there are many genes where a motif is randomly present but does not play a role .
furthermore , our goal is to dis - cover motifs that play a regulatory role in some particular set of experiments; a motif that is active in some settings may be completely irrelevant in others .
our model identi - es motif targetsgenes where the motif plays an active role in affecting regulation in a particular expression data set .
these motif targets are genes that have the motif and that are assigned to modules containing the motif in their
our algorithm is outlined in figure 123
it begins by clustering the expression data , creating one module from each of the resulting clusters .
as the rst attempt towards explaining these expression patterns , it searches for a common motif in the upstream regions of genes assigned to the same module .
it then iteratively renes the model , trying to optimize the extent to which the expression prole can be predicted transcriptionally .
for example , we might want to move a gene g whose promoter region does not match its current modules motif prole , to another module whose expression prole is still a good match , and whose motif prole is much closer .
given these assignments , we could then learn better motif models and motif proles for each module .
this renement process arises naturally within our algorithm , as a byproduct of the expectation maximization ( em ) algorithm for estimating the model parameters .
bioinformatics 123 ( suppl .
123 ) c ( cid : 123 ) oxford university press 123; all rights reserved .
e . segal et al .
transcriptional module discovery procedure
gene annotations ( go )
visualization & analysis
schematic ow diagram of our proposed method .
the pre - processing step includes selecting the input gene expression and upstream sequence data .
the model is then trained using em , and our algorithm for dynamically adding and deleting motifs .
it is then evaluated on additional data sets .
in general , the motifs learned will not sufce to char - acterize all of the modules .
as our goal is to provide a genome - wide explanation of the expression behavior , our algorithm identies poorly explained genes in modules and searches for new motifs in their upstream regions .
the new motifs are then added to the model and subsequently rened using em .
as part of this dynamic learning procedure , some motifs may become obsolete and are removed from the model .
the algorithm iterates until convergence , adding and deleting motifs , and rening motif models and module assignments .
our algorithm has several important advantages over other attempts to relate upstream sequences and expres - sion data .
first , we use both expression and sequence data together , requiring that modules display a coherent prole for both .
this approach allows us to rene both the cluster assignments and motifs within the same algorithm .
in contrast , many approaches ( e . g .
brazma et al . , 123; liu et al . , 123; roth et al . , 123; sinha and tompa , 123; tavazoie et al . , 123 ) use gene expression mea - surements to dene clusters of genes that are potentially co - regulated , and then search for common motifs in the upstream regions of the genes in each cluster .
the expression analysis and motif nding are thus decoupled , and neither the clusters nor the motifs are re - evaluated once they are learned .
other approaches ( e . g .
bussemaker et al . , 123; pilpel et al . , 123 ) work in the opposite direction , rst identifying a set of candidate motifs , and then trying to explain the expression using these motifs .
these approaches use a prespecied set of motifs , which are never adapted during the algorithm .
our approach is based on the framework of segal et al .
( 123 ) but extends it in several important directions .
their approach made use of dna localization data , which are not widely available for all organisms and under multiple growth conditions .
in contrast , we construct models that are based solely on sequence and expression data , which are much easier to obtain .
second , their approach used a predetermined number of motifs to construct the model .
to allow a genome - wide analysis , our algorithm dynamically removes and adds motifs as needed to explain the expression data as a whole .
finally , while the models of segal et al .
( 123 ) allowed for detection of context - specic regulation , the resulting structure is hard to interpret .
our model assigns each gene to one module ,
we tested our method on two distinct saccharomyces cerevisiae expression datasets .
we show that our learned models nd motifs that account for a much larger frac - tion of the observed expression patterns in comparison to standard approaches that rst cluster the expression pro - les and then search for motifs in the upstream regions of the genes in each cluster .
our approach also recovers a much larger number of known motifs .
we evaluated the functional coherence of our transcriptional modules us - ing a gene functional annotation database and two pro - tein complex databases that were not given to the model as input .
we found enrichment for many more groups in our models compared to standard approaches , suggesting that our transcriptional modules are biologically more ac - curate .
finally , we used the recent binding assays of lee et al .
( 123 ) to relate the actual transcription factors to the modules they regulate , resulting in a regulatory network; we show that many of the regulatory relationships discov - ered have support in the literature .
the basic entities in our model are the genes in some set g .
weassume that the genes are partitioned into a set of k mutually exclusive and exhaustive transcriptional modules .
thus , each gene is associated with an attribute m ( 123 , .
, k ) whose value represents the module to which the gene belongs .
we now describe how these modules are related to expression proles and to motif
gene expression model for each gene g in g , we have expression measurements g . e123 , .
, g . e j , where g . e j represents the log ratio mrna expression level measured for gene g in experiment j .
weassume that all of the genes in a single module exhibit the same gene expression behavior , and use the simple yet powerful naive bayes model ( cheeseman and stutz , 123 ) to represent this behavior .
in this model , as applied in our setting , we assume that the expression measurements are conditionally independent given the module assignment :
p ( e123 , .
, e j | m ) = j ( cid : 123 )
p ( e j | m ) .
as the expression measurements are real - valued , we model each conditional probability distribution p ( e j m = m ) using a gaussian distribution n ( jm; jm ) .
motif model the second key component in our model is a set of variables that represent the regulation of the gene by motifs .
for each gene g , we have a set of binary - valued regulates variables r = ( r123 , .
, rl ) , where g . ri takes the value true if motif i appears in the promoter region of gene g , allowing the motif to play a regulatory role in the genes expression .
we model the motif using a standard position specic scoring matrix ( pssm bailey and elkan , 123; roth et al . , 123 ) , which assigns a weight to each position in the motif and each nucleotide ( cid : 123 ) ( a , c , g , t ) ; this weight represents the extent to which the nucleotides presence in this position is associated with the motif .
we use the discriminative pssm approach of segal et al .
( 123 ) , which trains the pssm weights to discriminate as much as possible between the presence and the absence of the motif .
this approach provides better predictions , and entirely avoids the problems arising from high - frequency but meaningless motifs that are common in many upstream sequences .
this model is specied using a standard binary logistic model .
we have p position - specic weights w j ( ( cid : 123 ) ) , one for each position j and each letter ( cid : 123 ) ( a , c , g , t ) , and a threshold w123
for a promoter sequence of length n , weassume that binding occurs once , and with equal probability at each of the n p + 123 possible positions in the sequence .
the probability
genome - wide discovery of transcriptional modules
r |g . s )
p ( g . r |g . s )
p ( g . e | g . m )
illustration of our unied probabilistic model , for a simple example with upstream regions of length three , motifs , three possible module assignments and three expression measurements for each gene
of binding given the sequence is then specied simply as : p ( g . r = true | s123 , .
, sn ) =
n p + 123
regulation model we dene the motif prole of a transcriptional module to be a set of weights umi , one for each motif , such that umi species the extent to which motif i plays a regulatory role in module m .
roughly speaking , the strength of the association of a gene g with a i=123 g . ri umi .
the stronger the association module m is of a gene with a module , the more likely it is to be assigned to it .
we model this using a softmax conditional distribution , a standard extension of the binary logistic conditional distribution to the multi - class case :
p ( g . m = m | r123 = r123 , .
, rl = rl ) =
i=123 u miri )
i=123 um ( cid : 123 ) iri ) .
as we expect a motif to be active in regulating only a small set of modules in a given setting , we limit the number of weights u123i , .
, u k i that are non - zero to some h ( cid : 123 ) k .
this restriction results in a sparse weight matrix for p ( m | r ) , and ensures that each regulator affects at most h modules .
in addition , for interpretability considerations , we require all weights to be non - negative .
intuitively , this means that a genes assignment to specic transcriptional modules can only depend on features that correpond to the presence of certain motifs and not on the abscence of motifs .
for a module m , the set of motifs umi that are non - zero are called the motif prole of m .
e . segal et al .
unied model these three components , are put together as a probabilistic graphical model , as shown in figure 123; the model denes the following joint distribution :
p ( g . ri | g . s ) p ( g . m | g . r ) j ( cid : 123 )
p ( g . r , g . m , g . e | g . s ) =
p ( g . ej | g . m ) ,
where each of the above conditional probability distribu - tions is parameterized as described in the previous sec -
learning the models in the previous section , we presented our probabilistic model .
we now turn to the task of learning this model from data .
our data set d consists of a set of genes g , where for each gene g g we have a set of gene expression measurements g . e j for j = 123 , .
, j and a dna sequence g . s in the upstream region of the transcription start site for g .
for this section , we restrict attention to a xed number of motifs , and address the problem of estimating the model parameters to t the data .
the model parameters to be estimated are : the means and variances of the normal distributions of the expression model , the softmax weights and structure of the module assignments ( i . e .
which sequence motifs each module depends on ) , and the pssm weights for each sequence motif .
we follow the standard approach of maximum likelihood estimation : we nd the parameters that maximize p ( d | ) .
our learning task is made considerably more difcult by the fact that both the module assignment g . m and the regulates variables g . r are unobserved in the training data .
in this case , the likelihood function has multiple local maxima , and no general method exists for nding the global maximum .
we thus use the expectation maximization ( em ) algorithm ( dempster et al . , 123 ) , which provides an approach for nding a local maximum of the likelihood function .
starting from an initial guess ( 123 ) for the parameters , em iterates the following two steps .
the e - step computes the distribution over the unobserved variables given the observed data and the current estimate of the parameters .
we use the hard assignment version of the em algorithm , where this distribution is used to select a likely completion of the hidden variables .
the m - step then re - estimates the parameters by maximizing the likelihood with respect to the completion computed in the e - step .
this estimation task differs for the different parts of the model .
e - step : inferring modules and regulation our task in the e - step is to compute the distribution over the unobserved data , which in our setting means computing p ( g . m , g . r | g . e , g . s ) .
asgenes are assumed to be independent ,
this computation can be done separately for each gene .
however , although the softmax distribution for p ( g . m | g . r ) has a compact parameterization , inference using this distribution is still exponential in the number of regulates variables .
even if only a small number of these variables is associated with any single module , for the purpose of module assignment we need to consider all of the variables associated with any module; this number can be quite large , rendering exact inference intractable .
we devise a simple approximate algorithm for doing this computation , which is particularly well - suited for our setting .
it exploits our expectation that , while a large number of sequence motifs determine module assignment , only a small number of motifs regulate a particular transcriptional module .
consequently , given the module assignment for a gene , we expect a small number of regulates variables for that gene to take the value true .
our approximate algorithm therefore searches greedily for a small number of regulates variables to activate for each module assignment .
for each gene g , itconsiders every possible module assignment m , and nds a good assignment to the regulates variables given that g . m = m .
this assignment is constructed in a greedy way , by setting g . r variables to true one at a time , as long as p ( g . m , g . r , g . e | g . s ) improves .
the joint setting for g . m and g . r which gives the overall best likelihood is then selected as the ( approximate ) most likely assignment .
for the remainder of this section , let g .
m and g . r123 , .
, g . rl represent the values selected for g . m and g . r123 , .
, g . rl respectively by the e - step .
full details of the algorithm are given in figure 123a .
m - step : expression model given the assignments of genes to modules as computed in the e - step , the maximum likelihood setting for the parameters of the expression model gaussian distributions has a closed form solution .
letting nm be the number of genes assigned to module m , we have that the mean and variance of the gaussian for experiment j given module assignment m are
gg : g
m j = 123
gg : g
the motif model
m - step : motif model we want be a good predictor of the assignment r to the reg - ulates variables computed in the e - step .
thus , each ri , weaim to nd the values of the parameters w123 , w j ( ( cid : 123 ) ) that maximize the conditional log probabil - | g . s123 , .
, g . sn ) .
unfortunately , this optimization problem has no closed form solution ,
gg log p ( g . ri
genome - wide discovery of transcriptional modules
for each gene g g set g . m = 123 set g . ri = false for 123 i l set p = p ( g . m , g . r | g . s , g . e ) for m = 123 to k / / for all modules repeat / / find g . ri that increases p set pbest = p for i = 123 to l / / for all regulates variables set g . ri = true ( cid : 123 ) = p ( g . m = m , g . r | g . s , g . e ) ( cid : 123 ) > p set g . m = m set p = p set g . ri = false
until pbest = p
set u = ( ) set iteration = 123 let v = ( vmi ) 123mk , 123il set maxscore = maxv score ( v ) / / maxscore = score of unconstrained t set t = threshold for closeness to maxscore set iteration = iteration + 123 ( cid : 123 ) = ( u ( cid : 123 ) = argmaxu ( cid : 123 ) 123score ( u / / optimize weights not in u; weights in u xed for i = 123 to l / / for all regulates variables let m = argmaxm ( u set u = u ) / / add new non - zero weight set u = argmaxu123score ( u , 123 ) / / reoptimize weights in u; other weights = 123 until iteration = max iteration or score ( u ) >= maxscore t
) 123mk , 123il u
( cid : 123 ) = u = 123 for 123 m k
for i = 123 to l / / for all regulates variables if score ( u ) score ( u set u = u
for m = 123 to k / / for all modules let g ( cid : 123 ) = ( ) for each g s . t .
m = m set g . r ( cid : 123 ) = argmaxr p ( g . r | g . s ) set g ( cid : 123 ) = g ( cid : 123 ) ( cid : 123 ) ( g ) ( cid : 123 ) ( cid : 123 ) = m learn motif with positive set g ( cid : 123 ) add new regulates variable with learned pssm
( cid : 123 ) = argmaxm p ( g . m = m | g . r = g . r ( cid : 123 ) )
( a ) search procedure for e - step of em .
( b ) learning the softmax distribution for p ( g . m | g . r ) in the m - step .
( c ) procedure for dynamically deleting and adding regulates variables .
in ( b ) and ( c ) , u denotes the non - zero weights of pu ( g . m | g . r ) , and
gg log pu ( g .
m | g . r ) .
and there are many local maxima .
we therefore use a conjugate gradient ascent to nd a local optimum in the parameter space .
conjugate gradient starts from an initial guess of the weights ( cid : 123 ) w ( 123 ) .
asfor all local hill climbing methods , the quality of the starting point has a huge impact on the quality of the local optimum found by the algorithm .
we therefore initilize the weights using the method of barash et al .
( 123 ) , which efciently generates motif seeds of length 123 and then scores them using the hypergeometric signicance test .
each seed produced by this method is then expanded to produce a pssm of the desired length , whose weights serve as an initialization point for the conjugate gradient procedure .
m - step : regulation model finally , we consider the task of estimating the parameters for the distribution p ( g . m | g . r ) .
our goal is to nd a setting for the softmax weights ( umi ) 123mk , 123il so as to maximize the conditional log gg log p ( g . m = g .
m | g . r = g . r ) .
although this optimization does not have a closed form solution , the function is convex in the weights of the softmax .
thus , a unique global maximum exists , which we can nd using gradient ascent .
however , as we discussed in the previous section , we also constrain this weight matrix to be sparse and each weight to be non - negative .
these constraints lead to more desirable models , but also turn our task into a hard combinatorial optimization problem .
we use a greedy selection algorithm , that tries to include non - zero weights for the most predictive motifs for each regulates variable ri .
the algorithm , shown in figure 123b , rst nds the optimal setting to the full weight matrix; as we discussed , the optimal setting can be found using gradient ascent .
for each variable ri , itthen selects the most predictive motifthe one whose weight is largestand adds it to the
motif prole u , which contains motifs that have non - zero weight .
the optimal setting for the weights in u is then found by optimizing these weights , under the constraint that each weight in u is non - negative and the weights not in u must be zero .
this problem is also convex , and can be solved using gradient methods .
the algorithm then continues to search for additional motifs to include in the prole u .
itnds the optimal setting to all weights while holding the weights in u xed; it then selects the highest weight motifs not in u , adds them to u , and repeats .
weights are added to u until the sparseness limit is reached , or until the addition of motifs to u does not improve the overall score .
dynamically adding and removing in the previous section , we showed how to optimize the model parameters given a xed set of motifs .
we now wish to devise a dynamic learning algorithm , capable of both removing and adding sequence motifs as part of the learning process .
as we learn the models , some motifs may not turn out to be predictive , or redundant given the newly discovered motifs .
conversely , some modules may not be well explained by sequence motifs , so that new motifs should be added .
we add and remove motifs after each completion of the em algorithm .
( note that em itself iterates several times between the e - step and the m - step . ) to determine whether ri should be deleted , we compute the conditional log gg log p ( g . m | g . r ) both with and without leaving the values of other regulates variables xed .
this computation tells us the contribution that ri makes towards the overall t of the model .
variables that contribute below a certain threshold are subsequently removed from the model .
e . segal et al .
we try to add motifs when the current set of motifs does not provide a satisfactory explanation of the expression data : when there are genes for which the sequence predictions do not match the expression prole .
we dene the residual for a transcriptional module m to be the set of genes that are assigned to module m in the e - step , but would not be assigned to m based on the sequence alone .
we determine the sequence - only assignment of each gene
( cid : 123 ) = argmaxr p ( g . r | g . s )
( cid : 123 ) = argmaxm p ( g . m = m | g . r = g . r
we then attempt to provide a better prediction for the residual genes by adding a sequence motif that is trained to match these genes .
once a new regulates variables is added , it becomes part of the model and its assignment and parameterization is adapted as part of the next em iteration , as described in the previous section .
this process tests whether a new motif contributes to the overall model t , and may assign it a non - zero weight .
importantly , a motif that was trained for the residuals of one module often gets non - zero weights for other modules as well , allowing the same motif to participate in multiple modules .
full details of the algorithm are given in figure 123c .
models learned we evaluated our method separately on two different s . cerevisiae gene expression datasets , one consisting of 123 microarrays , measuring the responses to various stress conditions ( gasch et al . , 123 ) , and another consisting of 123 microarrays , measuring expression during cell cycle ( spellman et al . , 123 ) .
we also obtained the 123bp upstream region of each gene ( sequences were retrieved from sgd ( cherry et al . , 123 ) ) .
the em algorithm requires an initial setting to all pa - rameters .
we use the standard procedure for learning mo - tifs from expression data to initialize the model parame - ters : we rst cluster the expression proles , resulting in a partition of genes to clusters , and then learn a motif for each of the resulting clusters .
for clustering the expres - sion , we use the probabilistic hierarchical clustering algo - rithm of segal et al .
( 123 ) .
for learning motifs , we use the motif nder described above .
to specify the initial pa - rameterization of our model , we treat these clusters and motifs as if they were the result of an e - step , assigning a value to all of the variables g . m and g . r , and learn the model parameters as described above .
for the stress data , we use 123 genes which showed a signicant change in expression , excluding members of the generic stress response cluster ( gasch et al . , 123 ) .
cell cycle model
number of genes whose module assignment can be correctly predicted based on sequence alone , where a correct prediction is one that matches the module assignemnt when the expression is included .
predictions are shown for each iteration of the learning
we initialized 123 modules using standard clustering , and learned the associated 123 sequence motifs .
from this starting point , the algorithm converged after 123 iterations , of an em step and a motif addition / deletion step , resulting in a total of 123 motifs .
for the cell cycle data , we learned a model with 123 clusters over the 123 cell cycle genes dened in ( spellman et al . , 123 ) .
the algorithm converged after 123 iterations , ending with 123 motifs .
predicting expression from sequence our approach aims to explain expression data as a function of sequence motifs .
hence , one metric for evaluating a model is its ability to associate genes with modules based on their promoter sequence alone .
specically , we compare the module assignment of each gene when we consider only the sequence data to its module assignment considering both expression and sequence data .
figure 123 shows the total number of genes whose expression - based module assignment is correctly predicted using only the sequence , as the algorithm progresses and sequence motifs are added .
as can be seen , the predictions improve across the learning iterations , and signicantly outperform the standard approach ( which is iteration 123 ) .
ultimately , our model converges to 123 and 123 genes correctly predicted in the cell cycle and stress models , respectively , compared to 123 and 123 for the standard approach .
gene expression coherence these results indicate that our model assigns genes to modules such that genes assigned to the same module are generally enriched for the same motifs .
however , we can achieve such an orga - nization by simply assigning genes to modules based only on their sequence , while entirely ignoring the expresssion data .
to verify the quality of our modules relative to gene expression data , we dene the expression coherence of a module to be the average pearson correlation between each pair of genes assigned to it , where the pearson
expression coherence ( standard clustering )
expression coherence ( standard clustering )
genome - wide discovery of transcriptional modules
- log ( pvalue ) for standard clustering
- log ( pvalue ) for standard clustering
- log ( pvalue ) for standard clustering
- log ( pvalue ) for standard clustering
comparison of standard clustering and the proposed method .
( a ) ( c ) are for the cell cycle dataset ( spellman et al . , 123 ) and ( d ) ( f ) are for the stress expression dataset ( gasch et al . , 123 ) .
( a ) , ( d ) comparison of the expression coherence for each inferred module ( or cluster in the standard clustering model ) .
( b ) , ( e ) comparison of enrichment of the targets of each motif for functional annotations from the go database .
for each annotation , the largest negative log p - value obtained from analyzing the targets of all motifs is shown .
( c ) , ( f ) comparison of enrichment of the targets of each motif for protein complexes .
for each protein complex , shown is the largest negative log p - value obtained from any of the motifs .
pearson ( gi . e , g j . e ) = 123
( gi . el i )
( g j . el j )
where i , i are the mean and standard deviation of the entries in gi . e .
figure 123a , d compares the expression coherence of our modules to those built from standard clustering for the cell cycle and stress data , showing identical coherence of expression proles .
for the cell increase in the coherence of the expression proles for our model .
thus , our model results in clusters that are more enriched for motifs , while achieving the same quality of expression patterns as standard clustering which only tries to optimize the expression score .
there was even a slight
coherence of motif targets as we discussed , the motif prole characterizing a module allows us to dene a notion of motif targetsgenes that contain the motif , and where the motif plays a role in its expression prole , i . e
assigned to a module whose motif prole contains the motif .
in the standard clustering model , we can dene the targets of a motif to be those genes that have the motif and belong to the cluster from which the motif was learned .
we tested whether our motif targets correspond to functional groups , by measuring their enrichment for genes in the same functional category according to the gene annotation database of go ( ashburner et al . , 123 ) .
we used only go categories with 123 or more genes associated with them , resulting in 123 categories .
for each annotation and each motif , we computed the fraction of genes in the targets of that motif associated with that annotation and used the hypergeometric distribution to calculate a p - value for this fraction , and took p - value < 123 to be signicant .
we compared , for both expression data sets , the enrichment of the motif targets for go annotations between our model and standard clustering .
we found many annotations that were enriched in both models .
however , there were 123 and 123 annotations that were signicantly enriched in our cell cycle and stress
e . segal et al .
models , respectively , that were not enriched at all in the standard clustering model , compared to only 123 and 123 categories only enriched in the standard clustering model for these respective models .
among those categories enriched only in our model were carbohydrate catabolism , cell wall organization and galactose metabolism , all of which are processes known to be active in response to various stress conditions that we can now characterize by sequence motifs .
a full comparison of the go enrichment for both datasets is shown in figure 123b , e .
since functional categories do not necessarily cor - respond to co - regulation groups , we also tested the enrichment of our motif targets for protein complexes , as compiled experimentally in the assays of gavin et al .
( 123 ) and ho et al .
( 123 ) , consisting of 123 and 123 complexes , respectively .
the member genes of protein complexes are often co - regulated and we thus expect to nd enrichment for them in our motif targets .
we associated each gene with the complexes it is assigned to in each protein complex dataset and computed the p - value of the enrichment of the targets of each motif for each complex , as we did above for the go annota - tions .
the results for the cell cycle and stress datasets are summarized in figure 123c , f , showing much greater enrichment of our motif targets than the targets of the motifs identied using the standard approach , with 123 and 123 complexes signicantly enriched only in our model , and no complexes only enriched in the standard approach , for the stress and cell cycle models , respectively .
motifs and motif proles we compared the motifs we identied to motifs from the literature .
of the 123 motifs learned for the stress model , 123 are known , compared to only 123 known motifs learned using the standard approach .
for the cell cycle model , 123 of the 123 learned motifs are known , compared to only 123 known motifs learned using the standard approach .
many of the known motifs identied , such as the stress element stre , the heat shock motif hsf and the cell cycle motif mcm123 , are also known to be active in the respective datasets .
a powerful feature of our approach is its ability to characterize modules by motif proles .
this ability is particularly important for higher eukaryotes , in which regulation often occurs through multiple distinct motifs .
to illustrate the motif proles found by our approach , we found for each motif all modules enriched for the presence of that motif .
this was done by associating each gene with the motifs in its upstream region , and then computing the p - value of the enrichment of the member genes of each module .
figure 123a shows all the module - motif pairs in which the module was enriched for the motif with p - value <123 .
in addition , the gure indicates ( by red circles ) all pairs in which the motif appears in the modules motif prole .
as can be seen , many of proles contain multiple
motifs , and many motifs were used by more than one module .
even though modules share motifs , each module is characterized by a unique combination of motifs .
identifying the active mo - inferring regulatory networks tifs is a signicant step towards understanding the regula - tory mechanisms governing gene expression .
however , we would also want to know the identity of the transcription factor ( tf ) molecules that bind to these sequence motifs .
we used the dna binding assays of lee et al .
( 123 ) , that directly detect to which promoter regions a particular tf binds in vivo , and associated tfs with the motifs we learned .
for each motif , we computed the fraction , among the motif targets , of genes bound by each tf , as measured in the data of lee et al .
we used the hypergeometric distri - bution to assign a p - value to each such fraction and took p - value <123 to be signicant .
inspection of the signi - cant associations showed that , in most cases , there was a unique motif that was signicant for the tf and that a high fraction ( >123 ) of the tfs binding targets were among the motif target genes .
based on this strong association between tfs and motifs , for each such tf - motif pair , we predicted that the tf regulates all the modules that are characterized by the motif .
by combining all associations , we arrived at the regulatory network shown in figure 123b .
of the 123 transcription factors measured in lee et al . , 123were enriched in the targets of at least one motif and were thus added to the resulting network .
of the 123 modules , 123 were associated with at least one tf .
to validate the quality of the network , we searched the biological literature and compiled a list of experimentally veried targets for each of the 123 tfs in our network .
we then marked each association between a tf and a module as supported if the module contains at least one gene that the tf is known to regulate from biological experiments .
as current knowledge is limited , there are very few known targets for most tfs .
nevertheless , we found support for 123 of the 123 associations .
we also computed the p - value for each supported association between a tf and a module , using the binomial distribution with probability of success p = t / n , where k is the total number of known targets for the tf and n is the total number of genes ( 123 ) .
the p - value is then p ( x ( cid : 123 ) | x b ( p , n ) ) , where ( cid : 123 ) is the total number of known targets of the regulator in the supported module and n is the number of genes in the supported module .
the resulting p - values are shown in figure 123b by edge thickness and color .
we assigned a name to each module based on a concise summary of its gene content ( compiled from both gene annotation and literature ) .
the regulatory network thus contains predictions for the processes regulated by each tf , where for each association the prediction includes the motif through which the regulation occurs .
in many
genome - wide discovery of transcriptional modules
123 glycolysis ( 123 ) 123 redox regulation ( 123 ) 123 mixed i ( 123 ) 123 protein folding ( 123 ) 123 chromatin remodeling ( 123 ) 123 energy and tca cycle ( 123 ) 123 oxidative phosphorylation ( 123 ) 123 unknown i ( 123 ) 123 nitrogen metabolism ( 123 ) 123 cell cycle ( 123 ) 123 protein folding ( 123 ) 123 ergosterol biosynthesis ( 123 ) 123 sucrose metabolism ( 123 ) 123 translation ( 123 ) 123 heat shock ( 123 ) 123 pheromone response ( 123 ) 123 transport ( 123 ) 123 aldehyde metabolism ( 123 ) 123 galactose metabolism ( 123 ) 123 amino acid metabolism ( 123 )
( a ) matrix of motifs vs .
modules for the stress data , where a module - motif entry is colored if the member genes of that module were enriched for that motif with p - value <123 .
the intensity corresponds to the fraction of genes in the module that had the motif .
entries in the modules motif prole are circled in red .
modules were assigned names based on a summary of their gene content .
( b ) regulatory network inferred from our model using the dna binding assays of lee et al . .
ovals correspond to transcription factors and rectangles to modules ( see ( a ) for module names ) .
cases , our approach recovered coherent biological pro - cesses along with their known regulators .
examples of such associations include : hap123 , the known activator of oxidative phosphorylation , with the oxidative phospho - rylation module ( 123 ) ; gcr123 , a known positive regulator of glycolysis , with the glycolysis module ( 123 ) ; mig123 , a glucose repressor , with the galactose metabolism module ( 123 ) ; ste123 , involved in regulation of pheromone pathways , with the pheromone response module ( 123 ) ; and met123 , a positive regulator of sulfur amino acid metabolism , with the amino acid metabolism module ( 123 ) .
we presented a unied probabilistic model over both gene expression and sequence data , whose goal is to identify transcriptional modules and the regulatory motif binding sites that control their regulation within a given set of ex - periments .
our results indicate that our method discovers modules that are both highly coherent in their expression proles and signicantly enriched for common motif bind - ing sites in upstream regions of genes assigned to the same module .
a comparison to the common approach of con - structing clusters based only on expression and then learn - ing a motif for each cluster shows that our method recovers modules that have a much higher correspondence to exter - nal biological knowledge of gene annotations and protein
