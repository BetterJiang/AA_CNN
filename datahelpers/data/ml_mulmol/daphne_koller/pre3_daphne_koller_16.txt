thi pap add the pro of pla und unc in lar mar dec pro ( mdp ) .
fac mdp rep a com sta spa usi sta var and the tra mod usi a dyn bay net .
thi rep oft all an exp red in the rep siz of str mdp , but the com of exa sol alg for suc mdp can gro exp in the rep siz .
in thi pap , we pre two app sol alg tha exp str in fac mdp .
bot use an app val fun rep as a lin com of bas fun , whe eac bas fun inv onl a sma sub of the dom var .
a key con of thi pap is tha it sho how the bas ope of bot alg can be per eci in clo for , by exp bot add and con - spe str in a fac mdp .
a cen ele of our alg is a nov lin pro dec tec , ana to var eli in bay net , whi red an exp lar lp to a pro equ , pol - siz one .
one alg use app lin pro , and the sec app dyn pro .
our dyn pro alg is nov in tha it use an app bas on max - nor , a tec tha mor dir min the ter tha app in err bou for app mdp alg .
we pro exp res on pro wit ove 123 sta , dem a pro ind of the sca of our app , and com our alg to an exi sta - of - the - art app , sho , in som pro , exp gai in com tim .
ove the las few yea , mar dec pro ( mdp ) hav bee use as the bas sem for opt pla for dec the age in sto env .
in the mdp fra , the sys is mod via a set of sta whi evo sto .
the mai pro wit thi rep is tha , in vir any rea - lif dom , the sta spa is qui lar .
how , man lar mdp hav sig int str , and can be mod com if the str is exp in the rep .
fac mdp ( bou , dea , & gol , 123 ) are one app to rep - sen lar , str mdp com .
in thi fra , a sta is imp des by an ass to som set of sta var .
a dyn bay net ( dbn ) ( dea & kan , 123 ) can the all a com rep of the tra mod , by exp the fac tha the tra of a var oft dep onl on a sma num
c ( cid : 123 ) 123 ai acc fou and mor kau pub .
all rig res .
gue , kol , par & ven
of oth var .
fur , the mom rew can oft als be dec as a sum of rew rel to ind var or sma clu of var .
the are two mai typ of str tha can sim be exp in fac mdp : add and con - spe str .
add str cap the fac tha typ lar - sca sys can oft be dec int a com of loc int - act com .
for exa , con the man of a lar fac wit man pro cel .
of cou , in the lon run , if a cel pos ear in the pro lin gen fau par , the the who fac may be aec .
how , the qua of the par a cel gen dep dir onl on the sta of thi cel and the qua of the par it rec fro nei cel .
suc add str can als be pre in the rew fun .
for exa , the cos of run the fac dep , amo oth thi , on the sum of the cos of mai eac loc cel .
con - spe str enc a die typ of loc of inu : alt a par of a lar sys may , in gen , be inu by the sta of eve oth par of thi sys , at any giv poi in tim onl a sma num of par may inu it dir .
in our fac exa , a cel res for ano may rec par dir fro any oth cel in the fac .
how , a wor ord for a cyl par may res thi dep onl to cel tha hav a lat .
thu , in the con of pro cyl par , the qua of the ano par dep dir onl on the sta of cel wit a
eve whe a lar mdp can be rep com , for exa , by usi a fac rep , sol it exa may sti be int : typ exa mdp sol al - gor req the man of a val fun , who rep is lin in the num of sta , whi is exp in the num of sta var .
one app is to app the sol usi an app val fun wit a com rep - tat .
a com cho is the use of lin val fun as an app val fun tha are a lin com of pot non - lin bas fun ( bel , kal , & kot , 123 sut , 123 tsi & van roy , 123 ) .
our wor bui on the ide of kol and par ( 123 , 123 ) , by usi fac ( lin ) val fun , whe eac bas fun is res to som sma sub of the dom var .
thi pap pre two new alg for com lin val fun app - mat for fac mdp : one tha use app dyn pro and ano tha use app lin pro .
bot alg are bas on the use of fac - tor lin val fun , a hig exp fun app met .
thi rep all the alg to tak adv of bot add and con - spe str , in ord to pro hig - qua app sol ver eci .
the ca - pab to exp bot typ of str dis the alg die fro ear app ( bou et al . , 123 ) , whi onl exp con - spe str .
we pro a mor det dis of the die in sec 123
we sho tha , for a fac mdp and fac val fun , var cri ope - ati for our pla alg can be imp in clo for wit nec enu the ent sta spa .
in par , bot our new alg bui upo a nov lin pro dec tec .
thi tec red str lps wit exp man con to equ , pol - siz one .
thi dec - sit fol a pro ana to var eli tha app bot to add
eff sol alg for fac mdp
str val fun ( ber & bri , 123 ) and to val fun tha als ex - plo con - spe str ( zha & poo , 123 ) .
usi the bas ope , our pla alg can be imp eci , eve tho the siz of the sta spa gro exp in the num of var .
our rst met is bas on the app lin pro alg ( sch & sei , 123 ) .
thi alg gen a lin , app val fun by sol a sin lin pro .
unf , the num of con in the lp pro by sch and sei gro exp in the num of var .
usi our lp dec tec , we exp str in fac mdp to rep exa the sam opt pro wit exp few con .
in ter of app dyn pro , thi pap mak a two con .
fir , we pro a new app for app sol mdp usi a lin val fun .
pre app to lin fun app typ hav uti a lea squ ( l12 - nor ) app to the val fun .
lea squ app are inc wit mos con ana for mdp , whi are bas on max - nor .
we pro the rst mdp sol alg bot val ite and pol ite tha use a lin max - nor pro to app the val fun , the dir opt the qua tha app in our pro err bou .
sec , we sho how to exp the str of the pro to app thi tec to fac mdp , by aga lev on our lp dec tec .
alt app dyn pro cur pos str the gua , our exp res sug tha app lin pro is a goo alt .
whe the for ten to gen bet pol for the sam set of bas fun , due to the sim and com adv of app lin pro , we can add mor bas fun , obt a bet pol and sti req les com tha the app dyn pro app .
fin , we pre exp res com our app to the wor of bou et al .
( 123 ) , ill som of the tra bet the two met .
in par , for pro wit sig con - spe str in the val fun , the app can be fas due to the eci han of the val fun rep .
how , the are cas wit sig con - spe str in the pro , rat tha in the val fun , in whi the alg req an exp lar val fun rep .
in suc cla of pro , we dem tha by usi a val fun - tio tha exp bot add and con - spe str , our alg can obt a pol - tim nea - opt app of the tru val fun .
thi pap sta wit a pre of fac mdp and app sol al - gor for mdp .
in sec 123 , we des the bas ope use in our alg , inc our lp dec tec .
in sec 123 , we pre the rst of our two alg : the app lin pro alg for fac mdp .
the sec alg , app pol ite wit max - nor pro , is pre in sec 123
sec 123 des an app for eci com bou on pol qua bas on the bel err .
sec 123 sho how to ext our met to dea wit con - spe str .
our pap con wit an emp eva in sec 123 and a dis of rel wor in sec 123
gue , kol , par & ven
thi pap is a gre exp ver of wor tha was pub bef in gue
( 123 ) , and som of the wor pre in gue et al .
( 123 , 123 ) .
fac mar dec pro
a mar dec pro ( mdp ) is a mat fra for seq dec pro in sto dom .
it thu pro an und sem for the tas of pla und unc .
we beg wit a con ove of the mdp fra , and the des the rep of fac mdp .
123 mar dec pro we bri rev the mdp fra , ref the rea to the boo by ber and tsi ( 123 ) or put ( 123 ) for a mor in - dep rev .
a mar dec pro ( mdp ) is den as a 123 - tup ( x , a , r , p ) whe : x is a nit set of |x| = n sta a is a nit set of act r is a rew fun r : x a ( cid : 123 ) r , suc tha r ( x , a ) rep the rew obt by the age in sta x aft tak act a; and p is a mar tra mod whe p ( x ( cid : 123 ) | x , a ) rep the pro of goi fro sta x to sta x ( cid : 123 ) wit act a .
we ass tha the rew are bou , tha is , the exi rma suc tha rma |r ( x , a ) | , x , a .
exa 123 con the pro of opt the beh of a sys adm ( sys ) mai a net of m com .
in thi net , eac mac is con to som sub of the oth mac .
var pos net top can be den in thi man ( see fig 123 for som exa ) .
in one sim net , we mig con the mac in a rin , wit mac i con to mac i + 123 and i 123
( in thi exa , we ass add and sub are per mod m . )
eac mac is ass wit a bin ran var xi , rep whe it is wor or has fai .
at eve tim ste , the sys rec a cer amo of mon ( rew ) for eac wor mac .
the job of the sys is to dec whi mac to reb thu , the are m+1 pos act at eac tim ste : reb one of the m mac or do not ( onl one mac can be reb per tim ste ) .
if a mac is reb , it wil be wor wit hig pro at the nex tim ste .
eve mac has a sma pro of fai at eac tim ste .
how , if a nei mac fai , thi pro inc dra .
the fai pro den the tra mod p ( x ( cid : 123 ) | x , a ) , whe x is a par ass des whi mac are wor or hav fai in the cur tim ste , a is the sys cho of mac to reb and x ( cid : 123 ) is the res sta in the nex tim ste .
we ass tha the mdp has an inn hor and tha fut rew are dis exp wit a dis fac ( 123 , 123 ) .
a sta pol for an mdp is a map : x ( cid : 123 ) a , whe ( x ) is the act the age tak at sta x .
in the com net pro , for eac pos con of wor and fai mac , the pol wou tel the sys whi mac to reb .
eac pol is ass wit a val fun v rn , whe v ( x ) is the dis cum val tha the age get if it sta at sta x and fol pol .
mor pre , the val v of a sta x und
eff sol alg for fac mdp
fig 123 : net top tes the sta of a mac is inu by the sta of
its par in the net .
pol is giv by :
v ( x ) = e
( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( cid : 123 ) x ( 123 ) = x
whe x ( t ) is a ran var rep the sta of the sys aft t ste .
in our run exa , the val fun rep how muc mon the sys exp to col if she sta act acc to whe the net is at sta x .
the val fun for a xed pol is the xed poi of a set of lin equ tha den the val of a sta in ter of the val of its pos suc sta .
mor for , we den : den 123 the dp ope , t , for a sta pol is :
tv ( x ) = r ( x , ( x ) ) +
p ( x ( cid : 123 ) | x , ( x ) ) v ( x ( cid : 123 ) ) .
the val fun of pol , v , is the xed poi of the t ope : v = tv .
the opt val fun v des the opt val the age can ach for eac sta sta .
v is als den by a set of non - lin equ .
in thi cas , the val of a sta mus be the max exp val ach by any pol sta at tha sta .
mor pre , we den : den 123 the bel ope , t , is :
t v ( x ) = max
( r ( x , a ) +
p ( x ( cid : 123 ) | x , a ) v ( x ( cid : 123 ) ) ) .
the opt val fun v is the xed poi of t : v = t v .
for any val fun v , we can den the pol obt by act gre rel to v .
in oth wor , at eac sta , the age tak the act tha max the one - ste
ser and sta leg of rin gue , kol , par & ven
uti , ass tha v rep our lon - ter uti ach at the nex sta .
mor pre , we den :
gre ( v ) ( x ) = arg max
( r ( x , a ) +
p ( x ( cid : 123 ) | x , a ) v ( x ( cid : 123 ) ) ) .
the gre pol rel to the opt val fun v is the opt pol =
123 fac mdp fac mdp are a rep lan tha all us to exp pro str to rep exp lar mdp ver com .
the ide of rep a lar mdp usi a fac mod was rst pro by bou et al .
( 123 ) .
in a fac mdp , the set of sta is des via a set of ran var x = ( x12 , .
, xn ) , whe eac xi tak on val in som nit dom dom ( xi ) .
a sta x den a val xi dom ( xi ) for eac var xi .
in gen , we use upp cas let ( e . g . , x ) to den ran var , and low cas ( e . g . , x ) to den the val .
we use bol to den vec of var ( e . g . , x ) or the val ( x ) .
for an ins y dom ( y ) and a sub of the var z y , we use y ( z ) to den the val of the var z in the ins y .
in a fac mdp , we den a sta tra mod usi a dyn bay net ( dbn ) ( dea & kan , 123 ) .
let xi den the var xi at the cur tim and x ( cid : 123 ) i , the sam var at the nex ste .
the tra gra of a dbn is a two - lay dir acy gra g who nod are ( x12 , .
, xn , x ( cid : 123 ) n ) .
we den the par of x ( cid : 123 ) i in the gra by par ( x ( cid : 123 ) i ) .
for sim of exp , we ass i ) x; thu , all arc in the dbn are bet var in con tha par ( x ( cid : 123 ) tim sli .
( thi ass is use for exp pur onl int - tim sli arc are han by a sma mod pre in sec 123 . ) eac nod x ( cid : 123 ) i is ass wit a con pro dis ( cpd ) p ( x ( cid : 123 ) i ) ) .
the tra pro p ( x ( cid : 123 ) | x ) is the den to be : p ( x ( cid : 123 ) | x ) =
i | par ( x ( cid : 123 )
, x ( cid : 123 )
i | ui ) ,
whe ui is the val in x of the var in par ( x ( cid : 123 ) exa 123 con an ins of the sys pro wit fou com , lab m12 , .
, m12 , in an uni rin top as sho in fig 123 ( a ) .
our rst tas in mod thi pro as a fac mdp is to den the sta spa x .
eac mac is ass wit a bin ran var xi , rep whe it is wor or has fai .
thu , our sta spa is rep by fou ran var : ( x12 , x12 , x12 , x12 ) .
the nex tas is to den the tra mod , rep as a dbn .
the par of the nex tim ste var x ( cid : 123 ) i dep on the net top .
spe , the pro tha mac i wil fai at the nex tim ste dep on whe it is wor at the cur tim ste and on the sta of its dir nei ( par in the top ) in the net at the cur tim ste .
as sho in fig 123 ( b ) , the par of x ( cid : 123 ) i in thi exa are xi and xi1
the cpd of x ( cid : 123 ) i = fal wit hig pro
i is suc tha if xi = fal , the x ( cid : 123 )
eff sol alg for fac mdp
i = t | xi , xi1 , a ) :
xi1 = f xi1 = f xi1 = t xi1 = t
xi = t
xi = f
xi = f
xi = t
act is reb :
fig 123 : fac mdp exa :
fro a net top ( a ) we obt the fac
mdp rep ( b ) wit the cpd des in ( c ) .
tha is , fai ten to per .
if xi = tru , the x ( cid : 123 ) the uni rin top x ( cid : 123 ) of its nei can ind cau mac i to fai .
i is a noi or of its oth par ( in i has onl one oth par xi1 ) ; tha is , a fai in any
we hav des how to rep fac the mar tra dyn ari fro an mdp as a dbn , but we hav not dir add the rep of act .
gen , we can den the tra dyn of an mdp by den a sep dbn mod a = ( cid : 123 ) ga , pa ( cid : 123 ) for eac act a .
exa 123 in our sys adm exa , we hav an act ai for reb eac one of the mac , and a def act d for doi not .
the tra mod des abo cor to the do not act .
the tra mod for ai is die fro d onl in the tra mod for the var x ( cid : 123 ) i = tru wit pro one , reg of the sta of the nei mac .
fig 123 ( c ) sho i = w ork | xi , xi1 , a ) , wit one ent for eac ass to the act cpd for p ( x ( cid : 123 ) the sta var xi and xi1 , and to the act a .
i , whi is now x ( cid : 123 )
to ful spe an mdp , we als nee to pro a com rep of the rew fun .
we ass tha the rew fun is fac add int a set of loc rew fun , eac of whi onl dep on a sma set of var .
in our exa , we mig hav a rew fun ass wit eac mac i , whi dep on xi .
tha is , the sys is pai on a per - mac bas : at eve tim ste , she rec mon for mac i onl if it is wor .
we can for thi con of loc fun : den 123 a fun f has a sco sco ( f ) = c x if f : dom ( c ) ( cid : 123 ) r .
if f has sco y and y z , we use f ( z ) as sho for f ( y ) whe y is the par of the ins z tha cor to var in y .
m12 gue , kol , par & ven
we can now cha the con of loc rew .
let ra
r be a set of i ( x12 , .
fun , whe the sco of eac ra i ) r .
in the rew for tak act a at sta x is den to be ra ( x ) = our exa , we hav a rew fun ri ass wit eac mac i , whi dep onl xi , and doe not dep on the act cho .
the loc rew are rep by the dia in fig 123 ( b ) , in the usu not for inu dia ( how &
i is res to var clu ua
app sol alg
the are sev alg to com the opt pol in an mdp .
the thr mos com use are val ite , pol ite , and lin pro .
a key com - nen in all thr alg is the com of val fun , as den in sec 123 .
rec tha a val fun den a val for eac sta x in the sta spa .
wit an exp rep of the val fun as a vec of val for the die sta , the sol alg all can be imp as a ser of sim alg ste .
thu , in thi cas , all thr can be imp ver eci .
unf , in the cas of fac mdp , the sta spa is exp in the num of var in the dom .
in the sys pro , for exa , the sta x of the sys is an ass des whi mac are wor or hav fai tha is , a sta x is an ass to eac ran var xi .
thu , the num of sta is exp in the num m of mac in the net ( |x| = n = 123 ) .
hen , eve rep an exp val fun in pro wit mor tha abo ten mac is inf .
one mig be tem to bel tha fac tra dyn and rew wou res in a fac val fun , whi can the be rep com .
unf , eve in tri fac mdp , the is no gua tha str in the mod is pre in the val fun ( kol & par , 123 ) .
in thi sec , we dis the use of an app val fun , tha adm a com rep .
we als des app ver of the exa alg , tha use app val fun .
our des in thi sec is som abs , and doe not spe how the bas ope req by the alg can be per exp .
in lat sec , we ela on the iss , and des the alg in det .
for bre , we cho to foc on pol ite and lin pro our tec eas ext to val ite .
123 lin val fun a ver pop cho for app val fun is by usi lin reg , as rst pro by bel et al .
( 123 ) .
her , we den our spa of all val fun v h rn via a set of bas fun : den 123 a lin val fun ove a set of bas fun h = ( h12 , .
, hk ) is a fun v tha can be wri as v ( x ) = j=1 wj hj ( x ) for som coe w = ( w12 , .
, wk ) ( cid : 123 ) .
we can now den h to be the lin sub of rn spa by the bas fun h .
it is use to den an n k mat h who col are the k bas fun vie as
eff sol alg for fac mdp
vec .
in a mor com not , our app val fun is the rep
the exp pow of thi lin rep is equ , for exa , to tha of a sin lay neu net wit fea cor to the bas fun den h .
onc the fea are den , we mus opt the coe w in ord to obt a goo app for the tru val fun .
we can vie thi app as sep the pro of den a rea spa of fea and the ind spa h , fro the pro of sea wit the spa .
the for pro is typ the pur of dom exp , whi the lat is the foc of ana and alg des .
cle , fea sel is an imp iss for ess all are of lea and app .
we oer som sim met for sel goo fea for mdp in sec 123 , but it is not our goa to add thi lar and imp top in thi pap .
onc we hav a cho a lin val fun rep and a set of bas fun , the pro bec one of ndi val for the wei w suc tha hw wil yie a goo app of the tru val fun .
in thi pap , we con two suc app : app dyn pro usi pol ite and app lin pro .
in thi sec , we pre the two app .
in sec 123 , we sho how we can exp pro str to tra the app int pra alg tha can dea wit exp lar sta spa .
123 pol ite
123 . 123 the exa alg the exa pol ite alg ite ove pol , pro an imp pol at eac ite .
sta wit som ini pol ( 123 ) , eac ite con of two pha .
val det com , for a pol ( t ) , the val fun v ( t ) , by ndi the xed poi of the equ t ( t ) v ( t ) = v ( t ) , tha is , the uni sol to the set of lin
v ( t ) ( x ) = r ( x , ( t ) ( x ) ) +
p ( x ( cid : 123 ) | x , ( t ) ( x ) ) v ( t ) ( x ( cid : 123 ) ) , x .
the pol imp ste den the nex pol as ( t+1 ) = gre ( v ( t ) ) .
it can be sho tha thi pro con to the opt pol ( ber & tsi , 123 ) .
fur , in pra , the con to the opt pol is oft ver qui .
123 . 123 app pol ite the ste in the pol ite alg req a man of bot val fun and pol , bot of whi oft can be rep exp in lar mdp .
to den a ver of the pol ite alg tha use app val fun , we use the fol bas ide : we res the alg to usi onl val fun wit the pro h; whe the alg tak a ste tha res in a val fun v tha is out thi spa , we pro the res bac int the spa by ndi the val fun wit the spa whi is clo to v .
mor pre :
gue , kol , par & ven
den 123 a pro ope is a map : rn h .
is sai to be a pro w . r . t .
a nor ( cid : 123 ) ( cid : 123 ) if v = hw suc tha w arg min ( cid : 123 ) hw v ( cid : 123 ) .
tha is , v is the lin com of the bas fun , tha is clo to v wit res to the cho nor .
our app pol ite alg per the pol imp ste ex - act .
in the val det ste , the val fun the val of act acc to the cur pol ( t ) is app thr a lin com of bas fun .
we now con the pro of val det for a pol ( t ) .
at thi poi , it is use to int som not : alt the rew are a fun of the sta and act cho , onc the pol is xed , the rew bec a fun of the sta onl , whi we den as r ( t ) , whe r ( t ) ( x ) = r ( x , ( t ) ( x ) ) .
sim , for the tra mod : p ( t ) ( x ( cid : 123 ) | x ) = p ( x ( cid : 123 ) | x , ( t ) ( x ) ) .
we can now rew the val det ste in ter of mat and vec .
if we vie v ( t ) and r ( t ) as n - vec , and p ( t ) as an n n mat , we hav the equ :
v ( t ) = r ( t ) + p ( t ) v ( t ) .
thi is a sys of lin equ wit one equ for eac sta , whi can onl be sol exa for rel sma n .
our goa is to pro an app sol , wit h .
mor pre , we wan to nd :
( cid : 123 ) hw ( r ( t ) + p ( t ) hw ) ( cid : 123 ) ;
( cid : 123 ) ( cid : 123 ) ( cid : 123 ) ( h p ( t ) h ) w ( t ) r ( t )
w ( t ) = arg min = arg min
thu , our app pol ite alt bet two ste : ( cid : 123 ) hw ( r ( t ) + p ( t ) hw ) ( cid : 123 ) ;
w ( t ) = arg min
( t+1 ) = gre ( hw ( t ) ) .
123 . 123 max - nor pro an app alo the lin des abo has bee use in var pap , wit sev rec the and alg res ( sch & sei , 123 tsi & van roy , 123 van roy , 123 kol & par , 123 , 123 ) .
how , the app sue fro a pro tha we mig cal nor inc .
whe com the pro , the uti the sta euc pro ope wit res to the l12 nor or a wei l12 nor . 123 on the oth han , mos of the con and err ana for mdp alg uti max - nor ( l ) .
thi inc has mad it dic to pro we can tie the pro ope mor clo to the err bou thr the use of a pro ope in l nor .
the pro of min the l nor has bee stu in the opt lit as the pro of ndi the che sol to 123
wei l12 nor pro are sta and hav mea err bou whe the wei cor to the sta dis of a xed pol und eva ( val det ) ( van roy , 123 ) , but the are not sta whe com wit t .
ave ( gor , 123 ) are sta and non - exp in l , but req tha the mix wei be det a pri .
thu , the do not , in gen , min l err .
the che nor is als ref to as max , sup and l nor and the min sol .
eff sol alg for fac mdp
an ove lin sys of equ ( che , 123 ) .
the pro is den as ndi w suc tha :
w arg min
( cid : 123 ) cw b ( cid : 123 ) .
we use an alg due to sti ( 123 ) , tha sol thi pro by lin pro -
var : w12 , .
, wk , ;
sub to : ( cid : 123 ) k
j=1 cij bi
i = 123 . . n .
( cid : 123 ) ( cid : 123 ) ( cid : 123 ) for eac i , or
the con in thi lin pro imp tha equ , tha ( cid : 123 ) cw b ( cid : 123 ) .
the obj of the lp is to min .
thu , at the sol ( w , ) of thi lin pro , w is the sol of equ ( 123 ) and is the l we can use the l pro in the con of the app pol ite in the obv way .
whe imp the pro ope of equ ( 123 ) , we can use the l pro ( as in equ ( 123 ) ) , whe c = ( h p ( t ) h ) and b = r ( t ) .
thi min can be sol usi the lin pro of ( 123 ) .
j=1 cij bi
a key poi is tha thi lp onl has k + 123 var .
how , the are 123 con , whi mak it imp for lar sta spa .
in the sys pro , for exa , the num of con in thi lp is exp in the num of mac in the net ( a tot of 123 123 con for m mac ) .
in sec 123 , we sho tha , in fac mdp wit lin val fun , all the 123 con can be rep eci , lea to a tra alg .
123 . 123 err ana we mot our use of the max - nor pro wit the app pol ite alg via its com wit sta err ana tec for mdp alg .
we now pro a car ana of the imp of the l err int by the pro - tio ste .
the ana pro mot for the use of a pro ste tha dir min thi qua .
we ack , how , tha the mai imp of thi ana is mot .
in pra , we can pro a pri gua tha an l pro wil out oth met .
our goa is to ana app pol ite in ter of the amo of err if the err is zer , the we are int at eac ste by the pro ope .
per exa val det , and no err sho acc .
if the err is sma , we sho get an app tha is acc .
thi res fol fro the ana bel .
mor pre , we den the pro err as the err res fro the app val det ste :
r ( t ) + p ( t ) hw ( t )
not tha , by usi our max - nor pro , we are ndi the set of wei w ( t ) tha exa min the one - ste pro err ( t ) .
tha is , we are cho the bes
gue , kol , par & ven
pos wei wit res to thi err mea .
fur , thi is exa the err mea tha is goi to app in the bou of our the .
thu , we can now mak the bou for eac ste as tig as pos .
we rst sho tha the pro err acc in eac ste is bou :
lem 123 the val det err is bou : the exi a con p rma suc tha p ( t ) for all ite t of the alg .
pro : see app a . 123
due to the con pro of the bel ope , the ove acc err
is a dec ave of the pro err inc thr all ite :
den 123 the dis val det err at ite t is den as :
( 123 ) = 123
lem 123 imp tha the acc err rem bou in app pol .
we can now bou the los inc whe act acc to the pol gen by our app pol ite alg , as opp to the
( t ) p ( 123 )
the 123 in the app pol ite alg , let ( t ) be the pol gen at ite t .
fur , let v ( t ) be the act val of act acc to thi pol .
the los inc by usi pol ( t ) as opp to the opt pol wit val v is
( cid : 123 ) v v ( t ) ( cid : 123 ) t ( cid : 123 ) v v ( 123 ) ( cid : 123 ) +
( 123 ) 123 .
pro : see app a . 123
in wor , equ ( 123 ) sho tha the die bet our app at ite t and the opt val fun is bou by the sum of two ter .
the rst ter is pre in sta pol ite and goe to zer exp fas .
the sec is the dis acc pro err and , as lem 123 sho , is bou .
thi sec ter can be min by cho w ( t ) as the one tha min :
r ( t ) + p ( t ) hw ( t )
whi is exa the com per by the max - nor pro .
the , thi the mot the use of max - nor pro to min the err ter tha app in our bou .
the bou we hav pro so far may see fai tri , as we hav not pro a str a pri bou on ( t ) .
for , sev fac mak the bou int - ing des the lac of a pri gua .
if app pol ite con , as
occ in all of our exp , we can obt a muc tig bou : if ( cid : 123 ) is the pol
aft con , the :
whe ( cid : 123 ) is the one - ste max - nor pro err ass wit est the val of ( cid : 123 ) .
sin the max - nor pro ope pro ( cid : 123 ) , we can eas obt an a
( 123 ) ,
eff sol alg for fac mdp
pos bou as par of the pol ite pro .
mor det are pro in
one cou rew the bou in the 123 in ter of the wor cas pro er - ror p , or the wor pro err in a cyc of pol , if app pol ite get stu in a cyc .
the for wou be clo to the ana of ber and tsi ( 123 , pro 123 , p . 123 ) .
how , con the cas whe mos pol ( or mos pol in the nal cyc ) hav a low pro err , but the are a few pol tha can be app wel usi the pro ope , so tha the hav a lar one - ste pro err .
a wor - cas bou wou be ver loo , bec it wou be dic by the err of the mos dic pol to app .
on the oth han , usi our dis acc err for , err int by pol tha are har to app dec ver rap .
thu , the err bou rep an ave cas ana : a dec ave of the pro err for pol enc at the suc - siv ite of the alg .
as in the con cas , thi bou can be com eas as par of the pol ite pro whe max - nor pro is use .
the pra ben of a pos bou is tha the can giv mea fee on the imp of the cho of the val fun app arc .
whi we are not exp add the dic and gen pro of fea sel in thi pap , our err bou mot alg tha aim to min the err giv an app arc and pro fee tha cou be use in fut eor to aut dis or imp app arc .
123 app lin pro
123 . 123 the exa alg lin pro pro an alt met for sol mdp .
it for the pro of ndi a val fun as a lin pro ( lp ) .
her the lp var are v12 , .
, vn , whe vi rep v ( xi ) : the val of sta at the ith sta of the sys .
the lp is giv by :
, vn ;
sub to : vi ( r ( xi , a ) +
xi ( xi ) vi ;
j p ( xj | xi , a ) vj ) xi x , a a ,
whe the sta rel wei are pos .
not tha , in thi exa cas , the sol obt is the sam for any pos wei vec .
it is int to not tha ste of the sim alg cor to pol cha at sin sta , whi ste of pol ite can inv pol cha at mul sta .
in pra , pol ite ten to be fas tha the lin pro app ( put , 123 ) .
123 . 123 app lin pro the app for for the lp app , rst pro by sch and sei - dma ( 123 ) , res the spa of all val fun to the lin spa spa by our bas fun .
in thi app for , the var are w12 , .
, wk : the wei for our bas fun .
the lp is giv by :
gue , kol , par & ven
var : w12 , .
, wk ;
i wi hi ( x ) ( r ( x , a ) +
i wi hi ( x ) ;
i wi hi ( x ( cid : 123 ) ) ) x x , a a .
in oth wor , thi for tak the lp in ( 123 ) and sub the exp sta val fun by a lin val fun rep i wi hi ( x ) , or , in our mor com not , v is rep by hw .
thi lin pro is gua to be fea if a con fun a fun wit the sam con val for all sta is inc in the set of bas fun .
x ( cid : 123 ) p ( x ( cid : 123 ) | x , a )
in thi app lin pro for , the cho of sta rel wei , , bec imp .
int , not all con in thi lp are bin tha is , the con are tig for som sta tha for oth .
for eac sta x , the rel wei ( x ) ind the rel imp of a tig con .
the , unl the exa cas , the sol obt may die for die cho of the pos wei vec .
fur , the is , in gen , no gua as to the qua of the gre pol gen fro the app hw .
how , the rec wor of de far and van roy ( 123 ) pro som ana of the err rel to tha of the bes pos app - ima in the sub , and som gui as to sel so as to imp the qua of the app .
in par , the ana sho tha thi lp pro the bes app hw of the opt val fun v in a wei l12 sen sub to the con tha hw t hw , whe the wei in the l12 nor are the sta rel
the tra fro an exa to an app pro for has the ef - fec of red the num of fre var in the lp to k ( one for eac bas fun coe ) , but the num of con rem n |a| .
in our sys pro , for exa , the num of con in the lp in ( 123 ) is ( m + 123 ) 123 , whe m is the num of mac in the net .
thu , the pro of gen the con and sol the lp sti see unm for mor tha a few mac .
in the nex sec , we dis how we can use the str of a fac mdp to pro for a com rep and an eci sol to thi lp .
fac val fun
the lin val fun app , and the alg des in sec 123 , app to any cho of bas fun .
in the con of fac mdp , kol and par ( 123 ) sug a par typ of bas fun , tha is par com wit the str of a fac mdp .
the sug tha , alt the val fun is typ not str , the are man cas whe it mig be clo to str .
tha is , it mig be wel - app usi a lin com of fun eac of whi ref onl to a sma num of var .
mor pre , we den :
den 123 a fac ( lin ) val fun is a lin fun ove the bas set h12 , .
, hk , whe the sco of eac hi is res to som sub of var ci .
val fun of thi typ hav a lon his in the are of mul - att uti the - ory ( kee & rai , 123 ) .
in our exa , we mig hav a bas fun hi for eac
eff sol alg for fac mdp
mac , ind whe it is wor or not .
eac bas fun has sco res to xi .
the are rep as dia in the nex tim ste in fig 123 ( b ) .
fac val fun pro the key to per eci com ove the exp - siz sta spa we hav in fac mdp .
the mai ins is tha re - str sco fun ( inc our bas fun ) all for cer bas ope to be imp ver eci .
in the rem of thi sec , we sho how str in fac mdp can be exp to per two cru ope ver eci : one - ste loo ( bac ) , and the rep of exp man con in the lps .
the , we use the bas bui blo to for ver eci app - tio alg for fac mdp , eac pre in its own sel - con sec : the app lin pro for fac mdp in sec 123 , and app pol ite wit max - nor pro in sec 123
123 one - ste loo a key ste in all of our alg is the com of the one - ste loo val of som act a .
thi is nec , for exa , whe com the gre pol as in equ ( 123 ) .
let con the com of a q fun , qa ( x ) , whi rep the exp val the age obt aft tak act a at the cur tim ste and rec a lon - ter val v the .
thi q fun can be com by :
qa ( x ) = r ( x , a ) +
p ( x ( cid : 123 ) | x , a ) v ( x ) .
tha is , qa ( x ) is giv by the cur rew plu the dis exp fut val .
usi thi not , we can exp the gre pol as : gre ( v ) ( x ) = max qa ( x ) .
fun : v ( x ) =
rec tha we are est the lon - ter val of our pol usi a set of bas
i wi hi ( x ) .
thu , we can rew equ ( 123 ) as :
qa ( x ) = r ( x , a ) +
p ( x ( cid : 123 ) | x , a )
x ( cid : 123 ) p ( x ( cid : 123 ) | the siz of the sta spa is exp , so tha com the exp i wi hi ( x ) see inf .
for , as dis by kol and par ( 123 ) , thi exp ope , or bac , can be per eci if the tra mod and the val fun are bot fac app .
the lin of the val fun per a lin dec , whe eac sum in the exp can be vie as an ind val fun and upd in a man sim to the val ite pro use by bou et al .
( 123 ) .
we now rec the con bri , by rst den :
p ( x ( cid : 123 ) | x , a )
p ( x ( cid : 123 ) | x , a ) hi ( x ( cid : 123 ) ) .
thu , we can com the exp of eac bas fun sep :
wi hi ( x ( cid : 123 ) ) =
i ( x ) =
p ( x ( cid : 123 ) | x , a ) hi ( x ( cid : 123 ) ) ,
gue , kol , par & ven
the and the wei the by wi to obt the tot exp ga ( x ) = is cal the bac of the bas fun hi thr the int fun ga i = pah .
not tha , in fac mdp , the tra mod pa , whi we den by ga tra mod pa is fac ( rep as a dbn ) and the bas fun hi hav sco res to a sma set of var .
the two imp pro all us to com the bac ver eci .
i wi ga
we now sho how som res sco fun h ( suc as our bas fun ) can be bac thr som tra mod p rep as a dbn .
her h has sco res to y; our goa is to com g = p h .
we den the bac - pro sco of y thr as the set of par of y ( cid : 123 ) in the tra gra g ; ( y ( cid : 123 ) ) = y ( cid : 123 ) ( x12 , .
, xn , x ( cid : 123 ) n ) , the the onl cha in our alg is in the den of bac - pro sco of y thr .
the den now inc not onl dir par of y ( cid : 123 ) , but als all var in ( x12 , .
, xn ) tha are anc of y ( cid : 123 ) :
if int - tim sli arc are inc , so tha par ( x ( cid : 123 )
i y ( cid : 123 ) par ( y ( cid : 123 )
, x ( cid : 123 )
( y ( cid : 123 ) ) = ( xj | the exi a dir pat fro xj to any x ( cid : 123 )
thu , the bac sco may bec lar , but the fun are sti fac .
we can now sho tha , if h has sco res to y , the its bac g has sco res to the par of y ( cid : 123 ) , i . e . , ( y ( cid : 123 ) ) .
fur , eac bac can be com by onl enu set of var in ( y ( cid : 123 ) ) , rat tha set of all var x :
g ( x ) = ( p h ) ( x ) ;
p ( x ( cid : 123 ) | x ) h ( x ( cid : 123 ) ) ; p ( x ( cid : 123 ) | x ) h ( y ( cid : 123 ) ) ; p ( y ( cid : 123 ) | x ) h ( y ( cid : 123 ) )
p ( y ( cid : 123 ) | z ) h ( y ( cid : 123 ) ) ;
p ( u ( cid : 123 ) | x ) ;
u ( cid : 123 ) ( x ( cid : 123 ) y ( cid : 123 ) ) p ( u ( cid : 123 ) | x ) = 123 as it is the whe z is the val of ( y ( cid : 123 ) ) in x and the ter sum of a pro dis ove a com dom .
the , we see tha ( p h ) is a fun who sco is res to ( y ( cid : 123 ) ) .
not tha the cos of the com dep lin on |do ( ( y ( cid : 123 ) ) ) | , whi dep on y ( the sco of h ) and on the com of the pro dyn .
thi bac pro is sum in fig 123
ret to our exa , con a bas fun hi tha is an ind of var xi : it tak val 123 if the ith mac is wor and 123 oth .
eac hi has sco res to i ) = ( xi1 , xi ) .
i , thu , its bac gi has sco res to par ( x ( cid : 123 )
123 rep exp man con as see in sec 123 , bot our app alg req the sol of lin pro - gra : the lp in ( 123 ) for app pol ite , and the lp in ( 123 ) for the app
eff sol alg for fac mdp
bac ( h ) whe bas fun h has sco c .
den the sco of the bac : a ( c ( cid : 123 ) ) = x ( cid : 123 ) for eac ass y a ( c ( cid : 123 ) ) :
i ) | y ) h ( c ( cid : 123 ) ) .
fig 123 : bac of bas fun h .
lin pro alg .
the lps hav som com cha : the hav a sma num of fre var ( for k bas fun the are k + 123 fre var in ap - pro pol ite and k in app lin pro ) , but the num of con is sti exp in the num of sta var .
how , in fac mdp , the lp con hav ano ver use pro : the fun in the con hav res sco .
thi key obs all us to rep the con ver
fir , obs tha the con in the lin pro are all of the for :
wi ci ( x ) b ( x ) , x ,
whe onl and w12 , .
, wk are fre var in the lp and x ran ove all sta .
thi gen for rep bot the typ of con in the max - nor pro lp in ( 123 ) and the app lin pro for in ( 123 ) . 123
the rst ins in our con is tha we can rep the ent set of con
in equ ( 123 ) by one equ non - lin con :
wi ci ( x ) b ( x ) .
the sec ins is tha thi new non - lin con can be imp by a set of lin con usi a con tha fol the str of var eli in cos net .
thi ins all us to exp str in fac mdp to rep thi con com .
we tac the pro of rep the con in equ ( 123 ) in two ste : rst , com the max ass for a xed set of wei the , rep the non - lin con by sma set of lin con , usi a con we cal the
123 . 123 max ove the sta spa the key com in our alg is to rep a non - lin con of the for in equ ( 123 ) eci by a sma set of lin con .
bef pre thi con - str , let rst con a sim pro : giv som xed wei wi , we wou i wi ci ( x ) b ( x ) , tha is , the sta x , suc lik to com the max : = max i wi ci ( x ) , can be for usi an ana con to the one we pre in thi sec by cha the sig of ci ( x ) and b ( x ) .
the app lin pro con of ( 123 ) can als be for in thi for , as we sho in sec 123
the com con in ( 123 ) , b ( x ) ( cid : 123 )
gue , kol , par & ven
tha the die bet i wi ci ( x ) and b ( x ) is max .
how , we can exp - itl enu the exp num of sta and com the die .
for , str in fac mdp all us to com thi max eci .
in the cas of fac mdp , our sta spa is a set of vec x whi are ass - men to the sta var x = ( x12 , .
we can vie bot cw and b as fun of the sta var , and hen als the die .
thu , we can den a fun i wi ci ( x ) b ( x ) .
not tha we hav exe a f w ( x12 , .
, xn ) suc tha f w ( x ) = rep shi we are vie f w as a fun of the var x , whi is pa - ram by w .
rec tha the siz of the sta spa is exp in the num of var .
hen , our goa in thi sec is to com max f w ( x ) wit exp con eac of the exp man sta .
the sol is to use the fac tha f w has a fac rep .
mor pre , cw has the for i wi ci ( zi ) , whe zi is a sub of x .
for exa , we mig hav c12 ( x12 , x12 ) whi tak val 123 in sta whe x12 = tru and x12 = fal and 123 oth .
sim , the vec b in our cas is als a sum of res sco fun .
thu , we can exp f w as a sum or may not dep on w .
in the fut , we som dro the sup w whe it is cle fro con .
i wi ci ( x ) b ( x ) = max f w ( x ) , tha is , to nd the sta x ove whi f w is max .
rec tha f w = j=1 fj ( zj ) .
we can max suc a fun , f w , wit enu eve sta usi non - ser dyn pro ( ber & bri , 123 ) .
the ide is vir ide to var eli in a bay net .
we rev thi con her , as it is a cen com in our sol lp .
usi our mor com not , our goa her is sim to com max
j ( zj ) , whe f w
our goa is to com
the mai ide is tha , rat tha sum all fun and the doi the max , we max ove var one at a tim .
whe max ove xl , onl sum inv xl par in the max .
exa 123 ass
f = f12 ( x12 , x12 ) + f12 ( x12 , x12 ) + f12 ( x12 , x12 ) + f12 ( x12 , x12 ) .
we the wis to com :
f12 ( x12 , x12 ) + f12 ( x12 , x12 ) + f12 ( x12 , x12 ) + f12 ( x12 , x12 ) .
we can rst com the max ove x12 the fun f12 and f12 are irr , so we can pus the out .
we get
f12 ( x12 , x12 ) + f12 ( x12 , x12 ) + max
( f12 ( x12 , x12 ) + f12 ( x12 , x12 ) ) .
the res of the int max dep on the val of x12 , x12 thu , we can int - duc a new fun e12 ( x12 , x12 ) who val at the poi x12 , x12 is the val of the int max exp .
our pro now red to com
f12 ( x12 , x12 ) + f12 ( x12 , x12 ) + e12 ( x12 , x12 ) ,
eff sol alg for fac mdp
var ( f , o )
/ / f = ( f12 , .
, fm ) is the set of fun to be max / / o sto the eli ord .
for i = 123 to num of var :
/ / sel the nex var to be eli .
let l = o ( i ) ; / / sel the rel fun .
let e12 , .
, el be the fun in f who sco con xl .
/ / max ove cur var xl .
den a new fun e = max / / upd set of fun .
upd the set of fun f = f ( e ) \ ( e12 , .
, el ) .
; not tha sco ( e ) =
/ / now , all fun hav emp sco and the sum is the max val of f12 + + fm .
ret the max val
fig 123 : var eli pro for com the max val f12 + + fm ,
whe eac fi is a res sco fun .
hav one few var .
nex , we eli ano var , say x12 , wit the res exp red to :
f12 ( x12 , x12 ) + e12 ( x12 , x12 ) ,
e12 ( x12 , x12 ) = max
( f12 ( x12 , x12 ) + e12 ( x12 , x12 ) ) .
fin , we den
e12 = max
f12 ( x12 , x12 ) + e12 ( x12 , x12 ) .
the res at thi poi is a num , whi is the des max ove x12 , .
whi the nai app of enu all sta req 123 ari ope if all var are bin , usi var eli we onl nee to per 123 ope .
the gen var eli alg is des in fig 123
the inp to the alg are the fun to be max f = ( f12 , .
, fm ) and an eli ord o on the var , whe o ( i ) ret the ith var to be eli .
as in the exa abo , for eac var xl to be eli , we sel the rel fun e12 , .
, el , tho who sco con xl .
the fun are rem fro the set f and j=1 ej .
at thi poi , the sco of the fun in we int a new fun e = max f no lon dep on xl , tha is , xl has bee eli .
thi pro is rep unt all var hav bee eli .
the rem fun in f thu hav emp sco .
the des max is the giv by the sum of the rem fun .
the com cos of thi alg is lin in the num of new fun val int in the eli pro .
mor pre , con the com of a new fun e who sco is z .
to com thi fun , we nee to com |do ( z ) | die val .
the cos of the alg is lin in the ove num of the val , int thr the exe .
as sho by dec ( 123 ) , thi cos is exp
gue , kol , par & ven
in the ind wid of the cos net , the und gra den ove the var x12 , .
, xn , wit an edg bet xl and xm if the app tog in one of the ori fun fj .
the com of thi alg is , of cou , dep on the var eli ord and the pro str .
com the opt eli ord is an np - har pro ( arn , cor , & pro , 123 ) and eli ord yie low ind tre wid do not exi for som pro .
the iss hav bee con suc for a lar var of pra pro in the bay net com , whi has ben fro a lar var of goo heu whi hav bee dev for the var eli ord pro ( ber & bri , 123 kja , 123 ree , 123 bec & gei , 123 ) .
123 . 123 fac lp in thi sec , we pre the cen of our pla alg : a new , gen app for com rep exp lar set of lp con in pro wit fac str tho whe the fun in the con can be dec as the sum of res sco fun .
con our ori pro of rep the non - lin con in equ ( 123 ) com .
rec tha we wis to rep the non - lin con max i wi ci ( x ) b ( x ) , or equ , max f w ( x ) , wit gen one con for eac sta as in equ ( 123 ) .
the new , key ins is tha thi non - lin con can be imp usi a con tha fol the str of var eli in cos net .
con any fun e use wit f ( inc the ori fis ) , and let z be its sco .
for any ass z to z , we int var ue z , who val rep ez , int the lin pro .
for the ini fun f w i ( z ) .
as is lin in w , thi con is lin in the lp var .
now , con a new fun e int int f by eli a var xl .
let e12 , .
, el be the fun ext fro f , and let z be the sco of the res e .
we int a set of con :
i , we inc the con tha ufi
z = f w
let en be the las fun gen in the eli , and rec tha its sco is emp .
hen , we hav onl a sin var uen .
we int the add con uen .
the com alg , pre in fig 123 , is div int thr par : fir , we gen equ con for fun tha dep on the wei wi ( bas fun ) .
in the sec par , we add the equ con for fun tha do not dep on the wei ( tar fun ) .
the equ con let us abs awa the die bet the two typ of fun and man the in a uni fas in the thi par of the alg .
thi thi par fol a pro sim to var eli des in fig 123
how , unl sta var eli whe we wou in - j=1 ej , in our fac lp pro we tro a new fun e , suc tha e = max z .
to enf the den of e as the max ove xl of int new lp var ue
j=1 ej , we int the new lp con in equ ( 123 ) .
exa 123 to und thi con , con our sim exa abo , and ass we wan to exp the fac tha max f w ( x ) .
we rst int a set of
eff sol alg for fac mdp
fac ( c , b , o )
/ / c = ( c12 , .
, ck ) is the set of bas fun .
/ / b = ( b12 , .
, bm ) is the set of tar fun .
/ / o sto the eli ord .
/ / ret a ( pol ) set of con equ to ( cid : 123 )
j bj ( x ) , x .
i wic ( x ) +
/ / dat str for the con in fac lp .
let = ( ) .
/ / dat str for the int fun gen in var eli .
let f = ( ) .
/ / gen equ con to abs awa bas fun .
for eac ci c :
let z = sco ( ci ) .
for eac ass z z , cre a new lp var ufi con to :
z = wic ( z ) .
z and add a
sto new fun fi to use in var eli ste : f = f ( fi ) .
/ / gen equ con to abs awa tar fun .
for eac bj b :
let z = sco ( bj ) .
for eac ass z z , cre a new lp var ufj con to :
z and add a
z = bj ( z ) .
sto new fun fj to use in var eli ste : f = f ( fj ) .
/ / now , f con all of the fun inv in the lp , our con bec : eif ei ( x ) , x , whi we rep com usi a var eli pro .
for i = 123 to num of var :
/ / sel the nex var to be eli .
let l = o ( i ) ; / / sel the rel fun .
let e12 , .
, el be the fun in f who sco con xl , and let zj = sco ( ej ) .
/ / int lin con for the max ove cur var xl .
j=1 ( xl ) to rep den a new fun e wit sco z = l add con to to enf max : for eac ass z z :
/ / upd set of fun .
upd the set of fun f = f ( e ) \ ( e12 , .
, el ) .
/ / now , all var hav bee eli and all fun hav emp sco .
add las con to :
i wic ( x ) +
fig 123 : fac lp alg for the com rep of the exp set of
gue , kol , par & ven
x12 , x12 for eve ins of val x12 , x12 to the var x12 , x12
thu , if x12 and x12 are bot bin , we hav fou suc var .
we the int a con den the val of uf1 t , t = 123 t , f = w12
we hav sim var and con for eac fj and eac val z in zj .
not tha eac of the con is a sim equ con inv num con and per the wei var w .
x12 , x12 app .
for exa , for our f12 abo , we hav uf1
nex , we int var for eac of the int exp gen by var - abl eli .
for exa , whe eli x12 , we int a set of lp var x12 , x12 for eac of the , we hav a set of con x12 , x12 + uf1
one for eac val x12 of x12
we hav a sim set of con for ue1 x12 , x12 and ue1
not tha eac con is a sim lin ine .
x12 , x12 in ter of
we can now pro tha our fac lp con rep the sam con as
non - lin con in equ ( 123 ) : the 123 the con gen by the fac lp con are equ to the non - lin con in equ ( 123 ) .
tha is , an ass to ( , w ) sat the fac lp con if and onl if it sat the con in equ ( 123 ) .
pro : see app a . 123
is cw b in the ori set of con .
hen our new set of con is equ to the ori set : i wi ci ( x ) b ( x ) in equ ( 123 ) , whi in tur is equ to the exp i wi ci ( x ) b ( x ) , x in equ ( 123 ) .
thu , we can rep thi exp set of con by a new set of con and lp var .
the siz of thi new set , as in var eli , is exp onl in the ind wid of the cos net , rat tha in the tot num of var .
set of con ( cid : 123 )
ret to our ori for , we hav tha
in thi sec , we pre a new , gen app for com rep exp - nen - lar set of lp con in pro wit fac str .
in the rem of thi pap , we exp thi con to des eci pla alg for fac
123 . 123 fac max - nor pro we can now use our pro for rep the exp num of con in equ ( 123 ) com to com eci max - nor pro , as in equ ( 123 ) :
w arg min
( cid : 123 ) cw b ( cid : 123 ) .
of con in thi lp : ( cid : 123 ) k
j=1 cij bi , i and bi ( cid : 123 ) k
the max - nor pro is com by the lin pro in ( 123 ) .
the are two set j=1 cij , i .
eac of the set is an ins of the con in equ ( 123 ) , whi we hav jus add in the pre sec .
thu , if eac of the k bas fun in c is a res sco fun and the tar fun b is the sum of res sco fun , the we can use our fac lp tec to rep the con in the max - nor pro lp com .
the cor of our alg is a cor of the 123 :
eff sol alg for fac mdp
cor 123 the sol ( , w ) of a lin pro tha min sub to the con in fac ( c , b , o ) and fac ( c , b , o ) , for any eli ord o sat :
w arg min
( cid : 123 ) cw b ( cid : 123 ) ,
( cid : 123 ) cw b ( cid : 123 ) .
the ori max - nor pro lp had k + 123 var and two con for eac sta x; thu , the num of con is exp in the num of sta var .
on the oth han , our new fac max - nor pro lp has mor var , but exp few con .
the num of var and con in the new fac lp is exp onl in the num of sta var in the lar fac in the cos net , rat tha exp in the tot num of sta var .
as we sho in sec 123 , thi exp gai all us to com max - nor pro eci whe sol ver lar fac mdp .
app lin pro
we beg wit the sim of our app mdp sol alg , bas on the app lin pro for in sec 123 .
usi the bas ope des in sec 123 , we can for an alg tha is bot sim and eci .
123 the alg as dis in sec 123 , app lin pro for is bas on the lin pro app to sol mdp pre in sec 123 .
how , in thi ap - pro ver , we res the spa of val fun to the lin spa den by our bas fun .
mor pre , in thi app lp for , the var are w12 , .
, wk the wei for our bas fun .
the lp is giv by :
i wi hi ( x ) ( r ( x , a ) +
i wi hi ( x ) ;
var : w12 , .
, wk ;
x ( cid : 123 ) p ( x ( cid : 123 ) | x , a )
i wi hi ( x ( cid : 123 ) ) ) x x , a a .
in oth wor , thi for tak the lp in ( 123 ) and sub the exp sta val fun wit a lin val fun rep i wi hi ( x ) .
thi tra fro an exa to an app pro for has the eec of red the num of fre var in the lp to k ( one for eac bas fun coe ) , but the num of con rem |x| |a| .
in our sys pro , for exa , the num of con in the lp in ( 123 ) is ( m + 123 ) 123 , whe m is the num of mac in the net .
how , usi our alg for rep exp lar con set com we are abl to com the sol to thi app lin pro alg in clo for wit an exp sma lp , as in sec 123 .
fir , con the obj fun
i wi hi ( x ) of the lp ( 123 ) .
nai rep thi obj fun req a sum ove a exp lar sta spa .
how , we can rew the obj and obt a com rep .
we rst reo the ter :
gue , kol , par & ven
fac ( p , r , , h , o , )
/ / p is the fac tra mod .
/ / r is the set of fac rew fun .
/ / is the dis fac .
/ / h is the set of bas fun h = ( h12 , .
/ / o sto the eli ord .
/ / are the sta rel wei .
/ / ret the bas fun wei w com by app lin pro .
/ / cac the bac of the bas fun .
for eac bas fun hi h; for eac act a :
i = bac ( hi ) .
/ / com fac sta rel wei .
for eac bas fun hi , com the fac sta rel wei
i as in equ ( 123 ) .
/ / gen app lin pro con let = ( ) .
for eac act a :
let = fac ( ( ga
123 h12 ,
k hk ) , ra , o ) .
x ( cid : 123 ) p ( x ( cid : 123 )
/ / so far , our con gua tha r ( x , a ) +
i wi hi ( x ( cid : 123 ) ) i wi hi ( x ) ; to sat the app lin pro sol in ( 123 ) we mus add
| x , a )
a nal con .
let = ( = 123 ) .
/ / we can now obt the sol wei by sol an lp .
let w be the sol of the lin pro : min
the con .
i iwi , sub to
fig 123 : fac app lin pro alg .
eff sol alg for fac mdp
wi hi ( x ) =
now , con the sta rel wei ( x ) as a dis ove sta , so tha ( x ) > 123
x ( x ) = 123
as in bac , we can now wri :
( x ) hi ( x ) =
whe ( ci ) rep the mar of the sta rel wei ove the dom dom ( ci ) of the bas fun hi .
for exa , if we use uni sta rel wei as in our exp ( x ) = 123 the the mar bec ( ci ) = 123 .
thu , we can rew the obj fun as i wi i , whe eac bas wei i is com as sho in equ ( 123 ) .
if the sta rel wei are rep by mar , the the cos of com eac i dep exp on the siz of the sco of ci onl , rat tha exp on the num of sta var .
on the oth han , if the sta rel wei are rep by arb dis , we nee to obt the mar ove the cis , whi may not be an eci com .
thu , gre eci is ach by usi a com rep , suc as a bay net , for the sta rel wei .
sec , not tha the rig sid of the con in the lp ( 123 ) cor to the qa
qa ( x ) = ra ( x ) +
usi the eci bac ope in fac mdp des in sec 123 we can rew the qa fun as :
p ( x ( cid : 123 ) | x , a )
qa ( x ) = ra ( x ) +
dis , if hi has sco res to ci , the ga
i is the bac of bas fun hi thr the tra mod pa .
as we is a res sco fun of a ( c ( cid : 123 ) i and the bas rel wei i
we can pre the bac ga
app lin pro lp of ( 123 ) can be wri as :
var : w12 , .
, wk ;
i i wi ; i wi hi ( x ) ( ra ( x ) +
i wi ga
i ( x ) ) x x , a a .
fin , we can rew thi lp to use con of the sam for as the one in equ -
var : w12 , .
, wk ; sub to : 123 max ( ra ( x ) +
i i wi ;
i wi ( ga
i ( x ) hi ( x ) ) ) a a .
we can now use our fac lp con in sec 123 to rep the non - lin con com .
bas , the is one set of fac lp con for eac act a .
spe , we can wri the non - lin con in the sam for as tho in equ - tio ( 123 ) by exp the fun c as : ci ( x ) = hi ( x ) ga i ( x ) .
eac ci ( x ) is a res
gue , kol , par & ven
i ) , whi mea tha ci ( x ) has sco res to ci a ( c ( cid : 123 )
i ( x ) has sco res sco fun tha is , if hi ( x ) has sco res to ci , the ga i ) .
nex , the tar fun b bec the rew fun ra ( x ) whi , by ass , is fac .
fin , in the con in equ ( 123 ) , is a fre var .
on the oth han , in the lp in ( 123 ) the max in the rig han sid mus be les tha zer .
thi nal con can be ach by add a con = 123
thu , our alg gen a set of fac lp con , one for eac act .
the tot num of con and var in thi new lp is lin in the num of act |a| and onl exp in the ind wid of eac cos net , rat tha in the tot num of var .
the com fac app lin pro alg is out in fig 123
123 an exa
we now pre a com exa of the ope req by the app lp alg - rit to sol the fac mdp sho in fig 123 ( a ) .
our pre fol fou ste : pro rep , bas fun sel , bac and lp con .
fir , we mus ful spe the fac mdp mod for the pro .
the str of the dbn is sho in fig 123 ( b ) .
thi str is mai for all act cho .
nex , we mus den the tra pro for eac act .
the are 123 act in thi pro : do not , or reb one of the 123 mac in the net .
the cpd for the act are sho in fig 123 ( c ) .
fin , we mus den the rew fun .
we dec the glo rew as the sum of 123 loc rew fun , one for eac mac , suc tha the is a rew if the mac is wor .
spe , ri ( xi = tru ) = 123 and ri ( xi = fal ) = 123 , bre sym by set r12 ( x12 = tru ) = 123
we use a dis fac of = 123 .
in thi sim exa , we use ve sim bas fun .
bas fun sel : fir , we inc the con fun h12 = 123
nex , we add ind for eac mac whi tak val 123 if the mac is wor : hi ( xi = tru ) = 123 and hi ( xi = fal ) = 123
the rst alg ste is com the bac of the bas fun , as den in sec 123 .
the bac of the con bas is
pa ( x ( cid : 123 ) | x ) h12 ; pa ( x ( cid : 123 ) | x ) 123 ;
nex , we mus bac our ind bas fun hi :
pa ( x ( cid : 123 ) | x ) hi ( x ( cid : 123 )
j | xj1 , xj ) hi ( x ( cid : 123 )
eff sol alg for fac mdp
i | xi1 , xi ) hi ( x ( cid : 123 ) i | xi1 , xi ) hi ( x ( cid : 123 )
i = tru | xi1 , xi ) 123 + pa ( x ( cid : 123 ) i = tru | xi1 , xi ) .
j | xj1 , xj ) ;
i = fal | xi1 , xi ) 123 ;
is a res sco fun of ( xi1 , xi ) .
we can now use the cpd in fig -
ure 123 ( c ) to spe ga
gre = i
( xi1 , xi ) =
gre ( cid : 123 ) = i
( xi1 , xi ) =
xi1 = tru xi1 = fal
xi1 = tru xi1 = fal
xi = tru xi = fal
xi = tru xi = fal
to ill the fac lps con by our alg , we den the con for the app lin pro app pre abo .
i hi , as sho in equ ( 123 ) .
in our exa , fir , we den the fun ca 123 = 123 = 123 for the con bas , and for the ind bas : the fun are ca
i = ga
cre = i
( xi1 , xi ) =
xi1 = tru xi1 = fal
cre ( cid : 123 ) = i
( xi1 , xi ) =
xi = tru xi = fal
xi = tru xi = fal
xi1 = tru xi1 = fal
usi thi den of ca
i , the app lin pro con are giv by :
we pre the lp con for one of the 123 act : reb = 123
ana con can be mad for the oth act .
in the rst set of con , we abs awa the die bet rew and bas fun by int lp var u and equ con .
we beg wit the rew
x12 = 123 , ur1 x12 = 123 , ur1
x12 = 123 ; x12 = 123 ;
x12 = 123 , ur1 x12 = 123 , ur1
x12 = 123 ; x12 = 123 .
we now rep the equ con for the ca j fun for the reb = 123 act .
not tha the app bas fun wei fro equ ( 123 ) app in the con :
gue , kol , par & ven
uc1 = 123 w12 ; x12 , x12 = 123 w12 , x12 , x12 = 123 w12 , x12 , x12 = 123 w12 , x12 , x12 = 123 w12 ; x12 , x12 = 123 w12 , uc1 x12 , x12 = 123 w12 , uc1 x12 , x12 = 123 w12 , uc1 x12 , x12 = 123 w12 ; x12 , x12 = 123 w12 , uc1 x12 , x12 = 123 w12 , uc1 x12 , x12 = 123 w12 , uc1 x12 , x12 = 123 w12 ; x12 , x12 = 123 w12 , uc1 x12 , x12 = 123 w12 , uc1 x12 , x12 = 123 w12 , uc1 x12 , x12 = 123 w12 .
usi the new lp var , our lp con fro equ ( 123 ) for the reb = 123 act
+ uc1 +
we are now rea for the var eli pro .
we ill the eli of
+ uc1 +
we can rep the ter max one for eac ass of x12 and x12 , usi the new lp var ue1
by a set of lin con , to rep thi
x12 + uc1 x12 + uc1 x12 + uc1 x12 + uc1 x12 + uc1 x12 + uc1 x12 + uc1 x12 + uc1
x12 , x12 + uc1 x12 , x12 + uc1 x12 , x12 + uc1 x12 , x12 + uc1 x12 , x12 + uc1 x12 , x12 + uc1 x12 , x12 + uc1 x12 , x12 + uc1
we hav now eli var x12 and our glo non - lin con bec :
+ uc1 +
nex , we eli var x12
the new lp con and var hav the for :
, x12 , x12 , x12 ;
thu , rem x12 fro the glo non - lin con :
+ uc1 + uc1
eff sol alg for fac mdp
fig 123 : num of con in the lp gen by the exp sta rep ver the fac lp con for the sol of the rin pro wit bas fun ove sin var and app lin pro as the
we can now eli x12 , gen the lin con :
, x12 , x12 .
now , our glo non - lin con inv onl x12 : + uc1 + ue1
as x12 is the las var to be eli , the sco of the new lp var is emp and the lin con are giv by :
, x12 .
all of the sta var hav now bee eli , tur our glo non - lin con int a sim lin con :
123 uc1 + ue1 ,
whi com the lp des for the app lin pro sol to the pro in fig 123
in thi sma exa wit onl fou sta var , our fac lp tec gen a tot of 123 equ con , 123 ine con and 123 lp var , whi the exp sta rep in equ ( 123 ) gen onl 123 ine con and 123 lp var .
how , as the pro siz inc , the num of con and lp var in our fac lp app gro as o ( n12 ) , whi the exp sta app gro exp , at o ( n12 ) .
thi sca eec is ill in fig 123
app pol ite wit max - nor pro
the fac app lin pro app des in the pre sec is bot ele and eas to imp .
how , we can , in gen , pro str
123 of mac in rin of lp con lpf lp# fac con = 123 + 123 - 123 exp con = ( n+1 ) 123 n gue , kol , par & ven
gua abo the err it ach .
an alt is to use the app pol ite des in sec 123 , whi doe oer cer bou on the err .
how , as we sha see , thi alg is sig mor com , and req tha we pla add res on the fac mdp .
in par , app pol ite req a rep of the pol at eac ite .
in ord to obt a com pol rep , we mus mak an add ass : eac act onl aec a sma num of sta var .
we rst sta thi ass for .
the , we sho how to obt a com rep of the gre pol wit res to a fac val fun , und thi ass .
fin , we des our fac app pol ite alg usi max - nor pro .
123 def act mod in sec 123 , we pre the fac mdp mod , whe eac act is ass wit its own fac tra mod rep as a dbn and wit its own fac rew fun .
how , die act oft hav ver sim tra dyn , onl dif - fer in the eec on som sma set of var .
in par , in man cas a var has a def evo mod , whi onl cha if an act aec it dir ( bou et al . , 123 ) .
thi typ of str tur out to be use for com rep pol , a pro - ert whi is imp in our app pol ite alg .
thu , in thi sec of the pap , we res att to fac mdp tha are den usi a def tra - tio mod d = ( cid : 123 ) gd , pd ( cid : 123 ) ( kol & par , 123 ) .
for eac act a , we den eec ( a ) x ( cid : 123 ) to be the var in the nex sta who loc pro mod is die fro d , i . e . , tho var x ( cid : 123 ) exa 123 in our sys adm exa , we hav an act ai for reb eac one of the mac , and a def act d for doi not .
the tra mod des abo cor to the do not act , whi is als the def tra mod .
the tra mod for ai is die fro d onl in the tra mod for the i = tru wit pro one , reg of the sta of the nei mac .
thu , in thi exa , eec ( ai ) = x ( cid : 123 )
i , whi is now x ( cid : 123 )
i suc tha pa ( x ( cid : 123 )
i | par ( x ( cid : 123 )
i ) ) ( cid : 123 ) = pd ( x ( cid : 123 )
i | par ( x ( cid : 123 )
as in the tra dyn , we can als den the not of def rew mod .
in i=1 ri ( ui ) ass wit the def act thi cas , the is a set of rew fun d .
in add , eac act a can hav a rew fun ra ( ua ) .
her , the ext rew of i ( x12 , .
thu , the tot rew act a has sco res to rew ( a ) = ua ass wit act a is giv by ra + i=1 ri .
not tha ra can als be fac as a lin com of sma ter for an eve mor com rep .
we can now bui on thi add ass to den the com alg .
rec tha the app pol ite alg ite thr two ste : pol imp and app val det .
we now dis eac of the ste .
123 com gre pol the pol imp ste com the gre pol rel to a val fun v ( t12 ) :
( t ) = gre ( v ( t12 ) ) .
eff sol alg for fac mdp
rec tha our val fun est hav the lin for hw .
as we des in sec 123 , the gre pol for thi typ of val fun is giv by :
gre ( hw ) ( x ) = arg max
whe eac qa can be rep by : qa ( x ) = r ( x , a ) +
i wi ga
if we att to rep thi pol nai , we are aga fac wit the pro of exp lar sta spa .
for , as sho by kol and par ( 123 ) , the gre pol rel to a fac val fun has the for of a dec lis .
mor pre , the pol can be wri in the for ( cid : 123 ) t12 , a12 ( cid : 123 ) , ( cid : 123 ) t12 , a12 ( cid : 123 ) , .
, ( cid : 123 ) tl , al ( cid : 123 ) , whe eac ti is an ass of val to som sma sub ti of var , and eac ai is an act .
the gre act to tak in sta x is the act aj cor to the rst eve tj in the lis wit whi x is con .
for com , we now rev the con of thi dec - lis pol .
the cri ass tha all us to rep the pol as a com dec lis is the def act ass des in sec 123 .
und thi ass , the qa fun can be wri as :
qa ( x ) = ra ( x ) +
whe ra has sco res to ua .
the q fun for the def act d is jus :
i=1 ri ( x ) +
i wi gd
is equ to gd
i for mos i .
int , a com ga
we now hav a set of lin q - fun whi imp des a pol .
not imm obv tha the q fun res in a com exp pol .
an imp ins is tha mos of the com in the wei com are ide , so tha ga to the bac of bas fun hi ( ci ) is onl die if the act a inu one of the var in ci .
mor for , ass tha eec ( a ) ci = .
in thi cas , all of the var in ci hav the sam tra mod in a and d .
thu , we hav i ( x ) ; in oth wor , the ith com of the qa fun is irr whe dec whe act a is bet tha the def act d .
we can den whi com are act rel : let ia be the set of ind i suc tha eec ( a ) ci ( cid : 123 ) = .
the are the ind of tho bas fun who bac die in pa and pd .
in our exa dbn of fig 123 , act and bas fun inv sin var , so iai = i .
i ( x ) = gd
let us now con the imp of tak act a ove the def act d .
we can
den the imp the die in val as : a ( x ) = qa ( x ) qd ( x ) ;
= ra ( x ) +
thi ana sho tha a ( x ) is a fun who sco is res to
i ( x ) gd
ta = ua ( cid : 123 ) iia ( c ( cid : 123 )
gue , kol , par & ven
/ / qa is the set of q - fun , one for eac act / / ret the dec lis pol .
/ / ini dec lis .
let = ( ) .
/ / com the bon fun .
for eac act a , oth tha the def act d :
com the bon for tak act a ,
a ( x ) = qa ( x ) qd ( x ) ;
as in equ ( 123 ) .
not tha a has sco res to ta , as in for eac ass t ta :
/ / add sta wit pos bon to the ( uns ) dec lis .
if a ( t ) > 123 , add bra to dec lis :
= ( ( cid : 123 ) t , a , a ( t ) ( cid : 123 ) ) .
/ / add the def act to the ( uns ) dec lis .
let = ( ( cid : 123 ) , d , 123 ( cid : 123 ) ) .
/ / sor dec lis to obt nal pol .
sor the dec lis in dec ord on the ele of ( cid : 123 ) t , a , ( cid : 123 ) .
fig 123 : met for com the dec lis pol fro the fac rep
of the qa fun .
in our exa dbn , ta1 = ( x12 , x12 ) .
int , we now hav a sit whe we hav a bas val fun qd ( x ) whi den a val for eac sta x .
eac act a cha tha bas by add or sub an amo fro eac sta .
the poi is tha thi amo dep onl on ta , so tha it is the sam for all sta in whi the var in ta tak the sam val .
we can now den the gre pol rel to our q fun .
for eac act a , den a set of con ( cid : 123 ) t , a , ( cid : 123 ) , whe eac t is som ass of val to the var ta , and is a ( t ) .
now , sor the con for all of the act by ord of dec :
( cid : 123 ) t12 , a12 , 123 ( cid : 123 ) , ( cid : 123 ) t12 , a12 , 123 ( cid : 123 ) , .
, ( cid : 123 ) tl , al , l ( cid : 123 ) .
con our opt act in a sta x .
we wou lik to get the lar pos bon ove the def val .
if x is con wit t12 , we sho cle tak act a12 , as it giv us bon 123
if not , the we sho try to get 123 thu , we sho che if x is con wit t12 , and if so , tak a12
usi thi pro , we can com the dec - lis pol ass wit our lin est of the val fun .
the com alg for com the dec lis pol is sum in fig 123
a |do ( ta ) |; ta , in tur , dep on the set of bas fun clu tha int wit the eec of a .
thu , the siz of the pol dep in a nat way on the int bet the str of our
not tha the num of con in the lis is
eff sol alg for fac mdp
pro des and the str of our bas fun .
in pro whe the act mod a lar num of var , the pol rep cou bec unw .
the app lin pro app in sec 123 is mor app in suc cas , as it doe not req an exp rep of the pol .
123 val det in the app val det ste our alg com : ( cid : 123 ) hw ( r ( t ) + p ( t ) hw ) ( cid : 123 ) .
w ( t ) = arg min
by rea the exp , we get :
w ( t ) = arg min
( cid : 123 ) ( h p ( t ) h ) w r ( t ) ( cid : 123 ) .
thi equ is an ins of the opt in equ ( 123 ) .
if p ( t ) is fac , we can con tha c = ( h p ( t ) h ) is als a mat who col cor to res - sco fun .
mor spe :
ci ( x ) = hi ( x ) g ( t )
is the bac of the bas fun hi thr the tra mod p ( t ) , as des in sec 123 .
the tar b = r ( t ) cor to the rew fun , whi for the mom is ass to be fac .
thu , we can aga app our fac lp in sec 123 . 123 to est the val of the pol ( t ) .
unf , the tra mod p ( t ) is not fac , as a dec lis rep - tio for the pol ( t ) wil , in gen , ind a tra mod p ( t ) whi can be rep by a com dbn .
non , we can sti gen a com lp by ex - plo the dec lis str of the pol .
the bas ide is to int cos net cor to eac bra in the dec lis , ens , add , tha onl sta con wit thi bra are con in the cos net max .
spe , we hav a fac lp con for eac bra ( cid : 123 ) ti , ai ( cid : 123 ) .
the ith cos net onl con a sub of the sta tha is con wit the ith bra of the dec lis .
let si be the set of sta x suc tha ti is the rst eve in the dec lis for whi x is con .
tha is , for eac sta x si , x is con wit ti , but it is not con wit any tj wit j < i .
imp tha ( cid : 123 ) i wi ci ( x ) b ( x ) for eac sta x .
rec tha , as in equ ( 123 ) , our lp con den a set of con tha ins , we hav a sep set of con for the sta in eac sub si .
for eac sta in si , we kno tha act ai is tak .
hen , we can app our con abo usi pai a tra mod whi is fac by ass in pla of the non - fac p ( t ) .
sim , the rew fun bec rai ( x ) +
i=1 ri ( x ) for thi sub of sta .
the onl iss is to gua tha the cos net con der fro thi tra - sit mod are app onl to sta in si .
spe , we mus gua tha the are app onl to sta con wit ti , but not to sta tha are con wit som tj for j < i .
to gua the rst con , we sim ins the var in ti to tak the val spe in ti .
tha is , our cos net now con onl the var in
gue , kol , par & ven
fac ( p , r , , h , o , , tma )
/ / p is the fac tra mod .
/ / r is the set of fac rew fun .
/ / is the dis fac .
/ / h is the set of bas fun h = ( h12 , .
/ / o sto the eli ord .
/ / bel err pre .
/ / tma max num of ite .
/ / ret the bas fun wei w com by app pol ite .
let w ( 123 ) = 123
/ / cac the bac of the bas fun .
for eac bas fun hi h; for eac act a :
i = bac ( hi ) .
/ / mai app pol ite loo .
let t = 123
/ / pol imp par of the loo .
/ / com dec lis pol for ite t wei .
let ( t ) = dec ( ra +
/ / val det par of the loo .
/ / ini con for max - nor pro lp .
let + = ( ) and = ( ) .
let i = ( ) .
/ / for eve bra of the dec lis pol , gen the rel set of con , and
upd the ind to con the sta spa for fut bra .
, hk gaj
for eac bra ( cid : 123 ) tj , aj ( cid : 123 ) in the dec lis pol ( t ) : / / ins the var in tj to the ass giv in tj .
ins the set of fun ( h12 gaj par sta ass tj and sto in c .
k ) wit the ins the tar fun raj wit the par sta ass - men tj and sto in b .
ins the ind fun i wit the par sta as - sig tj and sto in i ( cid : 123 ) .
/ / gen the fac lp con for the cur dec lis bra .
let + = + fac ( c , b + i ( cid : 123 ) , o ) .
let = fac ( c , b + i ( cid : 123 ) , o ) .
/ / upd the ind fun .
let ij ( x ) = 123 ( x = tj ) and upd the ind i = i ij .
/ / we can now obt the new set of wei by sol an lp , whi cor to the
let w ( t+1 ) be the sol of the lin pro : min , sub to the con ( + , ) .
let t = t + 123
unt bel ( hw ( t ) ) or t tma or w ( t12 ) = w ( t ) .
fig 123 : fac app pol ite wit max - nor pro alg .
eff sol alg for fac mdp
, xn ) ti , and com the max onl ove the sta con wit ti = ti .
to gua the sec con , we ens tha we do not imp any con on sta ass wit pre dec .
thi is ach by add ind ij for eac pre dec tj , wit wei .
mor spe , ij is a fun tha tak val for sta con wit tj and zer for oth all ass of tj .
the con for the ith bra wil be of the for :
r ( x , ai ) +
wl ( gl ( x , ai ) h ( x ) ) +
123 ( x = tj ) ,
whe x ( ti ) den the ass of x con wit ti .
the int of the ind cau the con ass wit ti to be tri sat by sta in sj for j < i .
not tha eac of the ind is a res - sco fun of tj and can be han in the sam fas as all oth ter in the fac lp .
thu , for a dec lis of siz l , our fac lp con con fro 123 cos net .
the com app pol ite wit max - nor pro alg is out in fig 123
it is ins to com our max - nor pol ite alg to the l12 - pro pol ite alg of kol and par ( 123 ) in ter of com cos per ite and imp com .
com the l12 pro req ( amo oth thi ) a ser of dot pro ope bet bas fun and bac bas fun ( cid : 123 ) hig j ( cid : 123 ) .
the exp are eas to com if p ref to the tra mod of a par act a .
how , if the pol is rep as a dec lis , as is the res of the pol imp ste , the thi ste bec muc mor com .
in par , for eve bra of the dec lis , for eve pai of bas fun i and j , and for eac ass to the var in sco ( hi ) sco ( ga j ) , it req the sol of a cou pro whi is ( cid : 123 ) p - com in gen .
alt kol and par sho tha thi com can be per usi a bay net ( bn ) inf , the alg sti req a bn inf for eac one of tho ass at eac bra of the dec lis .
thi mak the alg ver dic to imp eci in pra .
the max - nor pro , on the oth han , rel on sol a lin pro at eve ite .
the siz of the lin pro dep on the cos net gen .
as we dis , two cos net are nee for eac poi in the dec lis .
the com of eac of the cos net is app the sam as onl one of the bn inf in the cou pro for the l12 pro .
ove , for eac bra in the dec lis , we hav a tot of two of the inf , as opp to one for eac ass of j ) for eve pai of bas fun i and j .
thu , the max - nor pol ite alg is sub les com com tha the app bas on l12 - pro .
fur , the use of lin pro all us to rel on exi lp pac ( suc as cpl ) , whi are ver hig opt .
it is als int to com the app pol ite alg to the ap - pro lin pro alg we pre in sec 123
in the app lin pro alg , we nev nee to com the dec lis pol .
the pol is alw rep imp by the qa fun .
thu , thi alg doe not
gue , kol , par & ven
req exp com or man of the gre pol .
thi die has two imp con : one com and the oth in ter of gen .
fir , not hav to com or con the dec lis mak app lin pro fas and eas to imp .
in thi alg , we gen a sin lp wit one cos net for eac act and nev nee to com a dec lis pol .
on the oth han , in eac ite , app pol ite nee to gen two lps for eve bra of the dec lis of siz l , whi is usu sig lon tha |a| , wit a tot of 123 cos net .
in ter of rep , we do not req the pol to be com thu , we do not nee to mak the def act ass .
the , the app lin pro alg can dea wit a mor gen cla of pro , whe eac act can hav its own ind dbn tra mod .
on the oth han , as des in sec 123 , app pol ite has str gua in ter of err bou .
the die wil be hig fur in our exp res pre in sec 123
com bou on pol qua
are the res bas fun wei .
in pra , the age wil den its beh by
we hav pre two alg for com app sol to fac mdp .
in sec 123 , we sho som a pri bou for the qua of the pol .
ano pos pro is to com an a pos bou .
tha is , giv our res wei
all the alg gen lin val fun whi can be den by h ( cid : 123 ) w , whe ( cid : 123 ) w act acc to the gre pol ( cid : 123 ) = gre ( h ( cid : 123 ) w ) .
one iss tha rem is how thi pol ( cid : 123 ) com to the tru opt pol ; tha is , how the act val v ( cid : 123 ) of pol ( cid : 123 ) com to v .
( cid : 123 ) w , we com a bou on the los of act acc to the gre pol ( cid : 123 ) rat tha the opt pol .
thi can be ach by usi the bel err ana of wil and bai ( 123 ) .
pol ( cid : 123 ) = gre ( v ) , the ana pro the bou : the bel err is den as bel ( v ) = ( cid : 123 ) t v v ( cid : 123 ) .
giv the gre
thu , we can use the bel err bel ( h ( cid : 123 ) w ) to eva the qua of our res
not tha com the bel err inv a max ove the sta spa .
thu , the com of thi com gro exp wit the num of sta var .
kol and par ( 123 ) sug tha str in the fac mdp can be exp to com the bel err eci .
her , we sho how thi err bou can be com by a set of cos net usi a sim con to the one in our max -
nor pro alg .
thi tec can be use for any ( cid : 123 ) tha can be rep for som set of wei ( cid : 123 ) w , the bel err is giv by :
as a dec lis and doe not dep on the alg use to det the pol .
thu , we can app thi tec to sol det app lin pro if the act des per a dec lis rep of the pol .
eff sol alg for fac mdp
fac ( p , r , , h , o , ( cid : 123 ) w )
/ / p is the fac tra mod .
/ / r is the set of fac rew fun .
/ / is the dis fac .
/ / h is the set of bas fun h = ( h12 , .
/ / o sto the eli ord .
/ / ( cid : 123 ) w are the wei for the lin val fun .
/ / ret the bel err for the val fun h ( cid : 123 ) w .
/ / com dec lis pol for val fun h ( cid : 123 ) w .
let ( cid : 123 ) = dec ( ra +
for eac bas fun hi h; for eac act a :
/ / cac the bac of the bas fun .
i = bac ( hi ) .
let i = ( ) .
/ / ini bel err .
let = 123
/ / for eve bra of the dec lis pol , gen the rel cos net , sol it wit var eli , and upd the ind to con the sta spa for fut bra .
for eac bra ( cid : 123 ) tj , aj ( cid : 123 ) in the dec lis pol ( cid : 123 ) :
ins the set of fun ( ( cid : 123 ) w12 ( h12
par sta ass tj and sto in c .
k ) ) wit the ins the tar fun raj wit the par sta ass tj and sto in b .
ins the ind fun i wit the par sta ass tj and sto in i ( cid : 123 ) .
, ( cid : 123 ) wk ( hkg
/ / ins the var in tj to the ass giv in tj .
/ / use var eli to sol rst cos net , and upd bel err , if err for thi bra is lar .
let = max ( , var ( c b + i ( cid : 123 ) , o ) ) .
/ / use var eli to sol sec cos net , and upd bel err , if err for thi bra is lar .
let = max ( , var ( c + b + i ( cid : 123 ) , o ) ) .
/ / upd the ind fun .
let ij ( x ) = 123 ( x = tj ) and upd the ind i = i ij .
fig 123 : alg for com bel err for fac val fun h ( cid : 123 ) w .
gue , kol , par & ven
bel ( h ( cid : 123 ) w ) = ( cid : 123 ) t h ( cid : 123 ) w h ( cid : 123 ) w ( cid : 123 ) ;
x ( cid : 123 ) p ( cid : 123 ) ( x ( cid : 123 ) | x ) i wih ( x ) r ( cid : 123 ) ( x ) j wjh ( x ( cid : 123 ) ) ( cid : 123 ) x ( cid : 123 ) p ( cid : 123 ) ( x ( cid : 123 ) | x ) j wjh ( x ( cid : 123 ) ) , if the rew r ( cid : 123 ) and the tra mod p ( cid : 123 ) are fac app , the we can net as des in sec 123 . 123
how , ( cid : 123 ) is a dec lis pol and it doe not
com eac one of the two max ( max ) usi var eli in a cos
max r ( cid : 123 ) ( x ) +
ind a fac tra mod .
for , as in the app pol ite alg in sec 123 , we can exp the str in the dec lis to per suc max eci .
in par , as in app pol ite , we wil gen two cos net for eac bra in the dec lis .
to gua tha our max is per onl ove sta whe thi bra is rel , we inc the sam typ of ind fun , whi wil for irr sta to hav a val of , thu gua - tee tha at eac poi of the dec lis pol we obt the cor sta wit the max err .
the sta wit the ove lar bel err wil be the max ove the one gen for eac poi the in the dec lis pol .
the com fac alg for com the bel err is out in fig 123
one las int not con our app pol ite alg wit max - nor pro of sec 123
in all our exp , thi alg con , so tha w ( t ) = w ( t+1 ) aft som ite .
if suc con occ , the the obj fun ( t+1 ) of the lin pro in our las ite is equ to the bel err of the nal
lem 123 if app pol ite wit max - nor pro con , so tha w ( t ) = w ( t+1 ) for som ite t , the the max - nor pro err ( t+1 ) of the las
ite is equ to the bel err for the nal val fun est h ( cid : 123 ) w = hw ( t ) :
bel ( h ( cid : 123 ) w ) = ( t+1 ) .
pro : see app a . 123
thu , we can bou the los of act acc to the nal pol ( t+1 ) by sub
( t+1 ) int the bel err bou :
cor 123 if app pol ite wit max - nor pro con aft
t ite to a nal val fun est h ( cid : 123 ) w ass wit a gre pol ( cid : 123 ) = gre ( h ( cid : 123 ) w ) , the the los of act acc to ( cid : 123 ) ins of the opt pol is
whe v ( cid : 123 ) is the act val of the pol ( cid : 123 ) .
the , whe app pol ite con we can obt a bou on the qua of the res pol wit nee to com the bel err exp .
eff sol alg for fac mdp
exp con - spe str
thu far , we hav pre a sui of alg whi exp add str in the rew and bas fun and spa con in the dbn rep the tra mod .
how , the exi ano imp typ of str tha sho als be exp for eci dec mak : con - spe ind ( csi ) .
for exa , con an age res for bui and mai a hou , if the pai tas can onl be com aft the plu and the ele wir hav bee ins , the the pro tha the pai is don is 123 , in all con whe plu or ele are not don , ind of the age act .
the rep we hav use so far in thi pap wou use a tab to rep thi typ of fun .
thi tab is exp lar in the num of var in the sco of the fun , and ign the con - spe str inh in the pro den .
bou et al .
( bou et al . , 123 dea & bou , 123 bou , dea , & han , 123 bou et al . , 123 ) hav dev a set of alg whi can exp csi in the tra and rew mod to per eci ( app ) pla .
alt thi app is oft suc in pro whe the val fun con suc con - spe str , the app is not abl to exp the add str whi is als oft pre in rea - wor pro .
in thi sec , we ext the fac mdp mod to inc con - spe str .
we pre a sim , yet eec ext of our alg whi can exp bot csi and add str to obt eci app for fac mdp .
we rst ext the fac mdp rep to inc con - spe str and the sho how the bas ope fro sec 123 req by our alg can be per eci in thi new rep .
123 fac mdp wit con - spe and add str the are sev rep for con - spe fun .
the mos com are dec tre ( bou et al . , 123 ) , alg dec dia ( add ) ( hoe , st - aub , hu , & bou , 123 ) , and rul ( zha & poo , 123 ) .
we cho to use rul as our bas rep , for two mai rea .
fir , the rul - bas rep all a fai sim alg for var eli , whi is a key ope in our fra .
sec , rul are not req to be mut exc and exh , a req tha can be res if we wan to exp add ind , whe fun can be rep as a lin com of a set of non - mut exc fun .
we beg by des the rul - bas rep ( alo the lin of zha and poo pre ( 123 ) ) for the pro tra mod , in par , the cpd of our dbn mod .
rou spe , eac rul cor to som set of cpd ent tha are all ass wit a par pro val .
the ent wit the sam val are ref to as con con : den 123 let c ( x , x ( cid : 123 ) ) and c dom ( c ) .
we say tha c is con wit b dom ( b ) , for b ( x , x ( cid : 123 ) ) , if c and b hav the sam ass for the var in the pro of the con con wil be rep by pro rul :
gue , kol , par & ven
123 = ( cid : 123 ) ele : 123 ( cid : 123 )
123 = ( cid : 123 ) ele plu : 123 ( cid : 123 ) 123 = ( cid : 123 ) ele plu : 123 ( cid : 123 )
123 = ( cid : 123 ) ele : 123 ( cid : 123 )
123 = ( cid : 123 ) ele plu : 123 ( cid : 123 )
123 = ( cid : 123 ) ele plu pai : 123 ( cid : 123 ) 123 = ( cid : 123 ) ele plu pai : 123 ( cid : 123 )
fig 123 : exa cpd for var the pai = tru rep as dec tre : ( a ) whe the act is pai ( b ) whe the act is not pai .
the sam cpd can be rep by pro rul as sho in ( c ) and ( d ) , res .
den 123 a pro rul = ( cid : 123 ) c : p ( cid : 123 ) is a fun : ( x , x ( cid : 123 ) ) ( cid : 123 ) ( 123 , 123 ) , whe the con c dom ( c ) for c ( x , x ( cid : 123 ) ) and p ( 123 , 123 ) , suc tha ( x , x ( cid : 123 ) ) = p if ( x , x ( cid : 123 ) ) is con wit c and is equ to 123 oth .
in thi cas , it is con to req tha the rul be mut exc and exh -
tiv , so tha eac cpd ent is uni den by its ass wit a sin rul .
den 123 a rul - bas con pro dis ( rul cpd ) pa is a fun - tio pa : ( ( x ( cid : 123 ) i ) x ) ( cid : 123 ) ( 123 , 123 ) , com of a set of pro rul ( 123 , 123 , .
, m ) who con are mut exc and exh .
we den :
whe j is the uni rul in pa for whi cj is con wit ( x ( cid : 123 ) for all x ,
we req tha ,
i | x ) = j ( x , x ( cid : 123 ) ) ,
i | x ) = 123
we can den par ( x ( cid : 123 ) i ) to be the uni of the con of the rul in pa ( x ( cid : 123 ) exa of a cpd rep by a set of pro rul is sho in fig 123
i | x )
rul can als be use to rep add fun , suc as rew or bas fun .
we rep suc con spe val dep usi val rul :
ele ele plu ( pai ) = 123 don don ( pai ) = 123 ( pai ) = 123 ele plu ( pai ) = 123 don don don ( pai ) = 123 ( pai ) = 123 ( pai ) = 123 eff sol alg for fac mdp
den 123 a val rul = ( cid : 123 ) c : v ( cid : 123 ) is a fun : x ( cid : 123 ) r suc tha ( x ) = v whe x is con wit c and 123 oth .
not tha a val rul ( cid : 123 ) c : v ( cid : 123 ) has a sco c .
it is imp to not tha val rul are not req to be mut exc and exh .
eac val rul rep a ( wei ) ind fun , whi tak on a val v in sta con wit som con c , and 123 in all oth sta .
in any giv sta , the val of the zer or mor rul con wit tha sta are sim add tog .
exa 123 in our con exa , we mig hav a set of rul :
123 = ( cid : 123 ) plu = don : 123 ( cid : 123 ) ; 123 = ( cid : 123 ) ele = don : 123 ( cid : 123 ) ; 123 = ( cid : 123 ) pai = don : 123 ( cid : 123 ) ; 123 = ( cid : 123 ) act = plu : 123 ( cid : 123 ) ;
whi , whe sum tog , den the rew fun r = 123 + 123 + 123 + 123 + .
in gen , our rew fun ra is rep as a rul - bas fun :
den 123 a rul - bas fun f : x ( cid : 123 ) r is com of a set of rul ( 123 , .
, n ) suc tha f ( x ) =
in the sam man , eac one of our bas fun hj is now rep as a rul - bas
thi not of a rul - bas fun is rel to the tre - str fun use by bou et al .
( 123 ) , but is sub mor gen .
in the tre - str val fun - tio , the rul cor to the die lea are mut exc and exh .
thu , the tot num of die val rep in the tre is equ to the num of lea ( or rul ) .
in the rul - bas fun rep , the rul are not mut exc , and the val are add to for the ove fun val for die set of the var .
die rul are add in die set , and , in fac , wit k rul , one can eas gen 123 die pos val , as is dem in sec 123
thu , the rul - bas fun can pro a com rep for a muc ric cla of
usi thi rul - bas rep , we can exp bot csi and add ind in the rep of our fac mdp and bas fun .
we now sho how the bas ope in sec 123 can be ada to exp our rul - bas rep .
123 add , mul and max con rul in our tab - bas alg , we rel on sta sum and pro ope app to tab .
in ord to exp csi usi a rul - bas rep , we mus red the sta ope .
in par , the alg wil nee to add or mul rul tha asc val to ove set of sta .
we wil sta by den the ope for rul wit the sam con :
gue , kol , par & ven
den 123 let 123 = ( cid : 123 ) c : v12 ( cid : 123 ) and 123 = ( cid : 123 ) c : v12 ( cid : 123 ) be two rul wit con c .
den the rul pro as 123 123 = ( cid : 123 ) c : v12 v12 ( cid : 123 ) , and the rul sum as 123 + 123 = ( cid : 123 ) c : v12 + v12 ( cid : 123 ) .
not tha thi den is res to rul wit the sam con .
we wil add thi iss in a mom .
fir , we wil int an add ope whi max a var fro a set of rul , whi oth sha a com con : den 123 let y be a var wit dom ( y ) = ( y12 , .
, yk ) , and let i , for eac i = 123 , .
, k , be a rul of the for i = ( cid : 123 ) c y = yi : vi ( cid : 123 ) .
the for the rul - bas fun f = 123 + + k , den the rul max ove y as max f = ( cid : 123 ) c : max vi ( cid : 123 ) .
aft thi ope , y has bee max out fro the sco of the fun f .
the thr ope we hav jus des can onl be app to set of rul tha sat ver str con .
to mak our set of rul ame to the app of the ope , we mig nee to ren som of the rul .
we the den the den 123 let = ( cid : 123 ) c : v ( cid : 123 ) be a rul , and y be a var .
den the rul spl spl ( ( cid : 123 ) y ) of on a var y as fol : if y sco ( c ) , the spl ( ( cid : 123 ) y ) = ( ) ;
spl ( ( cid : 123 ) y ) = ( ( cid : 123 ) c y = yi : v ( cid : 123 ) | yi dom ( y ) ) .
thu , if we spl a rul on var y tha is not in the sco of the con of , the we gen a new set of rul , wit one for eac ass in the dom of y .
in gen , the pur of rul spl is to ext the con c of one rul coi wit the con c ( cid : 123 ) of ano con rul ( cid : 123 ) .
nai , we mig tak all var in sco ( c ( cid : 123 ) ) sco ( c ) and spl rec on eac one of the .
how , thi pro cre unn man rul : if y is a var in sco ( c ( cid : 123 ) ) sco ( c ) and we spl on y , the onl one of the |do ( y ) | new rul gen wil rem con wit ( cid : 123 ) : the one whi has the sam ass for y as the one in c ( cid : 123 ) .
thu , onl thi con rul nee to be spl fur .
we can now den the rec spl pro tha ach thi mor par rep : den 123 let = ( cid : 123 ) c : v ( cid : 123 ) be a rul , and b be a con suc tha b dom ( b ) .
den the rec rul spl spl ( ( cid : 123 ) b ) of on a con b as fol :
( ) , if c is not con wit b; els , 123
( ) , if sco ( b ) sco ( c ) ; els , 123
( spl ( i ( cid : 123 ) b ) | i spl ( ( cid : 123 ) y ) ) , for som var y sco ( b ) sco ( c ) .
in thi den , eac var y sco ( b ) sco ( c ) lea to the gen of k = |do ( y ) | rul at the ste in whi it is spl .
how , onl one of the k rul is use in the nex rec ste bec onl one is con wit b .
the , the siz of the y sco ( b ) sco ( c ) ( |do ( y ) | 123 ) .
thi siz is ind of the spl set is sim 123 + ord in whi the var are spl wit the ope .
eff sol alg for fac mdp
not tha onl one of the rul in spl ( ( cid : 123 ) b ) is con wit b : the one wit con c b .
thu , if we wan to add two con rul 123 = ( cid : 123 ) c12 : v12 ( cid : 123 ) and 123 = ( cid : 123 ) c12 : v12 ( cid : 123 ) , the all we nee to do is rep the rul by the set :
spl ( 123 ( cid : 123 ) c12 ) spl ( 123 ( cid : 123 ) c12 ) ,
and the sim rep the res rul ( cid : 123 ) c12 c12 : v12 ( cid : 123 ) and ( cid : 123 ) c12 c12 : v12 ( cid : 123 ) by the sum ( cid : 123 ) c12 c12 : v12 + v12 ( cid : 123 ) .
mul is per in an ana man .
exa 123 con add the fol set of con rul :
123 = ( cid : 123 ) a b : 123 ( cid : 123 ) , 123 = ( cid : 123 ) a c d : 123 ( cid : 123 ) .
in the rul , the con c12 of 123 is a b , and the con c12 of 123 is a c d .
rul 123 and 123 are con , the , we mus spl the to per the add
( cid : 123 ) a b c : 123 ( cid : 123 ) ,
( cid : 123 ) a b c d : 123 ( cid : 123 ) , ( cid : 123 ) a b c d : 123 ( cid : 123 ) .
( cid : 123 ) a b c d : 123 ( cid : 123 ) , ( cid : 123 ) a b c d : 123 ( cid : 123 ) .
spl ( 123 ( cid : 123 ) c12 ) =
spl ( 123 ( cid : 123 ) c12 ) =
the res of add rul 123 and 123 is
( cid : 123 ) a b c : 123 ( cid : 123 ) , ( cid : 123 ) a b c d : 123 ( cid : 123 ) , ( cid : 123 ) a b c d : 123 ( cid : 123 ) , ( cid : 123 ) a b c d : 123 ( cid : 123 ) .
123 rul - bas one - ste loo usi thi com rul - bas rep , we are abl to com a one - ste loo pla eci for mod wit sig con - spe or add ind .
as in sec 123 for the tab - bas cas , the rul - bas qa fun can be rep as the sum of the rew fun and the dis exp val of the nex sta .
due to our lin app of the val fun , the exp ter is , in tur , rep as the lin com of the bac of our bas fun .
to exp csi , we are rep the rew and bas fun as rul - bas fun .
to rep qa as a rul - bas fun , it is suc for us to sho how to rep the bac gj of the bas fun hj as a rul - bas fun .
eac hj is a rul - bas fun , whi can be wri as hj ( x ) =
eac rul is a res sco fun thu , we can
i ( hj )
has the for
: v ( hj ) sim the bac as :
gue , kol , par & ven
rul ( ) , whe is giv by ( cid : 123 ) c : v ( cid : 123 ) , wit c dom ( c ) .
let g = ( ) .
sel the set p of rel pro rul : i c and c is con wit cj ) .
p = ( j p ( x ( cid : 123 ) rem the x ( cid : 123 ) ass fro the con of all rul in p .
/ / mul con rul : whi the are two con rul 123 = ( cid : 123 ) c12 : p12 ( cid : 123 ) and 123 = ( cid : 123 ) c12 : p12 ( cid : 123 ) :
i | par ( x ( cid : 123 )
i ) ) | x ( cid : 123 )
if c12 = c12 , rep the two rul by ( cid : 123 ) c12 : p12 ( cid : 123 ) ; els rep the two rul by the set : spl ( 123 ( cid : 123 ) c12 ) spl ( 123 ( cid : 123 ) c12 ) .
/ / gen val rul : for eac rul i in p :
upd the bac g = g ( ( cid : 123 ) ci : piv ( cid : 123 ) ) .
fig 123 : rul - bas bac .
j ( x ) =
pa ( x ( cid : 123 ) | x ) hj ( x ( cid : 123 ) ) ; pa ( x ( cid : 123 ) | x )
pa ( x ( cid : 123 ) | x ) ( hj )
i pa ( c ( hj )
whe the ter v ( hj ) pro ope by rul ( ( hj )
i pa ( c ( hj )
| x ) can be wri as a rul fun .
we den thi bac -
the bac pro , des in fig 123 , fol thr ste .
fir , the rel rul are sel : in the cpd for the var tha app in the con of , we sel the rul con wit thi con , as the are the onl rul tha pla a rol in the bac com .
sec , we mul all con pro rul to for a loc set of mut - exc rul .
thi pro is ana to the add pro des in sec 123 .
now tha we hav rep the pro tha can aec by a mut - exc set , we can sim rep the bac of by the pro of the pro wit the val of .
tha is , the bac of is a rul - bas fun wit one rul for eac one of the mut - exc pro rul i .
the con of thi new val rul is the sam as tha of i , and the val is the pro of the pro of i and the val of .
exa 123 for exa , con the bac of a sim rul ,
= ( cid : 123 ) pai = don : 123 ( cid : 123 ) ,
thr the cpd in fig 123 ( c ) for the pai act :
ppa ( x ( cid : 123 ) | x ) ( x ( cid : 123 ) ) ;
eff sol alg for fac mdp
( cid : 123 ) | x ) ( pai
i ( pai = don , x ) .
not tha the pro of the sim rul is equ to the dec tre cpd sho in fig 123 ( a ) .
hen , thi pro is equ to 123 in mos con , for exa , whe ele is not don at tim t .
the pro in non - zer onl in one con : in the con ass wit rul 123
thu , we can exp the res of the bac ope by a rul - bas fun wit a sin rul :
rul ( ) = ( cid : 123 ) plu ele : 123 ( cid : 123 ) .
sim , the bac of whe the act is not pai can als be rep by a
rul ( ) = ( cid : 123 ) plu ele pai : 123 ( cid : 123 ) .
usi thi alg , we can now wri the bac of the rul - bas bas fun -
tio hj as :
j ( x ) =
sim of not , we use ga jec .
usi thi not , we can wri qa ( x ) = ra ( x ) +
j is a sum of rul - bas fun , and the als a rul - bas fun .
for j = rul ( hj ) to ref to thi den of bac - j ( x ) , whi is aga a
123 rul - bas max ove the sta spa the sec key ope req to ext our pla alg to exp csi is to mod the var eli alg in sec 123 . 123 to han the rul - bas rep - in sec 123 . 123 , we sho tha the max of a lin com of tab - bas fun wit res sco can be per eci usi non - ser dyn pro ( ber & bri , 123 ) , or var eli .
to exp str - tur in rul , we use an alg sim to var eli in a bay net wit con - spe ind ( zha & poo , 123 ) .
int , the alg ope by sel the val rul rel to the var bei max in the cur ite .
the , a loc max is per ove thi sub of the rul , gen a new set of rul wit the cur var .
the pro is the rep rec unt all var hav bee eli .
mor pre , our alg eli var one by one , whe the eli - tio pro per a max ste ove the var dom .
sup tha we are eli xi , who col val rul lea to a rul fun f , and f inv add var in som set b , so tha fs sco is b ( xi ) .
we nee to com the max val for xi for eac cho of b dom ( b ) .
we use max ( f , xi ) to de - not a pro tha tak a rul fun f ( b , xi ) and ret a rul fun g ( b ) suc
gue , kol , par & ven
max ( f , b ) let g = ( ) .
add com rul to f : ( cid : 123 ) b = bi : 123 ( cid : 123 ) , i = 123 , .
/ / sum con rul : whi the are two con rul 123 = ( cid : 123 ) c12 : v12 ( cid : 123 ) and 123 = ( cid : 123 ) c12 : v12 ( cid : 123 ) :
if c12 = c12 , the rep the two rul by ( cid : 123 ) c12 : v12 + v12 ( cid : 123 ) ; els rep the two rul by the set : spl ( 123 ( cid : 123 ) c12 ) spl ( 123 ( cid : 123 ) c12 ) .
/ / max out var b : rep unt f is emp :
the rem the rul fro f and add rul ( cid : 123 ) c : max vi ( cid : 123 ) to g;
if the are rul ( cid : 123 ) c b = bi : vi ( cid : 123 ) , bi dom ( b ) : els sel two rul : i = ( cid : 123 ) ci b = bi : vi ( cid : 123 ) and j = ( cid : 123 ) cj b = bj : vj ( cid : 123 ) suc tha ci is con wit cj , but not ide , and rep the wit spl ( i ( cid : 123 ) cj ) spl ( j ( cid : 123 ) ci ) .
fig 123 : max out var b fro rul fun f .
tha : g ( b ) = max f ( b , xi ) .
suc a pro is an ext of the var eli alg of zha and poo ( zha & poo , 123 ) .
the rul - bas var eli alg mai a set f of val rul , ini con the set of rul to be max .
the alg the rep the fol ste for eac var xi unt all var hav bee eli :
col all rul whi dep on xi int fi fi = ( ( cid : 123 ) c : v ( cid : 123 ) f | xi c ) and
rem the rul fro f .
per the loc max ste ove xi : gi = max ( fi , xi ) ; 123
add the rul in gi to f; now , xi has bee eli .
the cos of thi alg is pol in the num of new rul gen in the max ope max ( fi , xi ) .
the num of rul is nev lar and in man cas exp sma tha the com bou on the tab - bas max in sec 123 . 123 , whi , in tur , was exp onl in the ind wid of the cos net gra ( dec , 123 ) .
how , the com cos inv in man set of rul usu imp tha the com adv of the rul - bas app ove the tab - bas one wil onl be sig in pro tha pos a fai amo of con - spe
in the rem of thi sec , we pre the alg for com the loc max max ( fi , xi ) .
in the nex sec , we sho how the ide can be app to ext the alg in sec 123 . 123 to exp csi in the lp rep for pla in fac mdp .
the pro , pre in fig 123 , is div int two par : rst , all con rul are add tog as des in sec 123 the , var b is max .
thi max is per by gen a set of rul , one for eac ass of b , who con hav the sam ass for all var exc for b , as in den 123 .
thi set is the sub by a sin rul wit a b ass in its con and wit val equ to the max of the val of the rul in the ori set .
not tha , to sim
eff sol alg for fac mdp
the alg , we ini nee to add a set of val rul wit 123 val , whi gua tha our rul fun f is com ( i . e . , the is at lea one rul con wit eve
the cor of thi pro fol dir fro the cor of the rul - bas var eli pro des by zha and poo , mer by rep sum - tio wit pro wit max , and pro wit pro wit sum .
we con thi sec wit a sma exa to ill the alg : exa 123 sup we are max a for the fol set of rul :
123 = ( cid : 123 ) a : 123 ( cid : 123 ) , 123 = ( cid : 123 ) a b : 123 ( cid : 123 ) , 123 = ( cid : 123 ) a b c : 123 ( cid : 123 ) , 123 = ( cid : 123 ) a b : 123 ( cid : 123 ) .
whe we add com rul , we get :
123 = ( cid : 123 ) a : 123 ( cid : 123 ) , 123 = ( cid : 123 ) a : 123 ( cid : 123 ) .
in the rst par of the alg , we nee to add con rul : we add 123 to 123 ( whi rem unc ) , com 123 wit 123 , 123 wit 123 , and the the spl of 123 on the con of 123 , to get the fol inc set of rul :
123 = ( cid : 123 ) a b : 123 ( cid : 123 ) , 123 = ( cid : 123 ) a b c : 123 ( cid : 123 ) , 123 = ( cid : 123 ) a b : 123 ( cid : 123 ) , 123 = ( cid : 123 ) a b : 123 ( cid : 123 ) , 123 = ( cid : 123 ) a b c : 123 ( cid : 123 ) ,
( fro add 123 to the con rul fro spl ( 123 ( cid : 123 ) b ) ) ( fro spl ( 123 ( cid : 123 ) b ) ) ( fro spl ( 123 ( cid : 123 ) a b c ) ) .
not tha sev rul wit val 123 are als gen , but not sho her bec the are add to oth rul wit con con .
we can mov to the sec sta ( rep loo ) of max .
we rem 123 , and 123 , and max a out of the , to giv :
123 = ( cid : 123 ) b : 123 ( cid : 123 ) .
we the sel rul 123 and 123 and spl 123 on c ( 123 is spl on the emp set and is not
123 = ( cid : 123 ) a b c : 123 ( cid : 123 ) , 123 = ( cid : 123 ) a b c : 123 ( cid : 123 ) .
max out a fro rul 123 and 123 , we get :
123 = ( cid : 123 ) b c : 123 ( cid : 123 ) .
we are lef wit 123 , whi max ove its cou 123 giv
123 = ( cid : 123 ) b c : 123 ( cid : 123 ) .
not tha , thr thi max , we hav not spl on the var c whe b ci , giv us onl 123 dis rul in the nal res .
thi is not pos in a tab - bas rep , sin our fun wou the be ove the 123 var a , b , c , and the mus hav 123 ent .
gue , kol , par & ven
con of the for : ( cid : 123 )
123 rul - bas fac lp in sec 123 . 123 , we sho tha the lps use in our alg hav exp man i wi ci ( x ) b ( x ) , x , whi can be sub by a sin , i wi ci ( x ) b ( x ) .
we the sho tha , usi equ , non - lin con : max var eli , we can rep thi non - lin con by an equ set of lin con in a con we cal the fac lp .
the num of con in the fac lp is lin in the siz of the lar tab gen in the var eli pro .
thi tab - bas alg can onl exp add ind .
we now ext the alg in sec 123 . 123 to exp bot add and con - spe str , by usi the rul - bas var eli des in the pre sec .
sup we wis to enf the mor gen con 123 max f w ( y ) , whe f w ( y ) = j ( y ) suc tha eac fj is a rul .
as in the tab - bas ver , the sup w mea j f w tha fj mig dep on w .
spe , if fj com fro bas fun hi , it is mul by the wei wi; if fj is a rul fro the rew fun , it is not .
in our rul - bas fac lin pro , we gen lp var ass wit con we cal the lp rul .
an lp rul has the for ( cid : 123 ) c : u ( cid : 123 ) ; it is ass wit a con c and a var u in the lin pro .
we beg by tra all our ori int lp rul as fol : if rul fj has the for ( cid : 123 ) cj : vj ( cid : 123 ) and com fro bas rul f w fun hi , we int an lp rul ej = ( cid : 123 ) cj : uj ( cid : 123 ) and the equ con uj = wiv .
if fj has the sam for but com fro a rew fun , we int an lp rul of the sam for , but the equ con bec uj = vj .
now , we hav onl lp rul and nee to rep the con : 123 max
to rep suc a con , we fol an alg ver sim to the var eli - tio pro in sec 123 .
the mai die occ in the max ( f , b ) ope in fig 123
ins of gen new val rul , we gen new lp rul , wit ass new var and new con .
the sim cas occ whe com a spl or add two lp rul .
for exa , whe we add two val rul in the ori alg , we ins per the fol ope on the ass lp rul : if the lp rul are ( cid : 123 ) c : ui ( cid : 123 ) and ( cid : 123 ) c : uj ( cid : 123 ) , we rep the by a new rul ( cid : 123 ) c : uk ( cid : 123 ) , ass wit a new lp var uk wit con c , who val sho be ui + uj .
to enf thi val con , we sim add an add con to the lp : uk = ui + uj .
a sim pro can be fol whe com the spl .
mor int con are gen whe we per a max .
rul - bas var eli alg in fig 123 , thi max occ whe we rep a set of rul :
( cid : 123 ) c b = bi : vi ( cid : 123 ) , bi dom ( b ) ,
by a new rul
c : max
fol the sam pro as in the lp rul sum abo , if we are max
ei = ( cid : 123 ) c b = bi : ui ( cid : 123 ) , bi dom ( b ) ,
we gen a new lp var uk ass wit the rul ek = ( cid : 123 ) c : uk ( cid : 123 ) .
how , we can add the non con uk = max ui , but we can add a set of equ lin
eff sol alg for fac mdp
the , usi the sim ope , we can exp str in the rul fun to rep the non con en max j ej ( y ) , whe en is the ver las lp rul we gen .
a nal con un = imp tha we are rep exa the con in equ ( 123 ) , wit hav to enu eve sta .
uk ui , i .
the cor of our rul - bas fac lp con is a cor of the 123 and of the cor of the rul - bas var eli alg ( zha & poo , cor 123 the con gen by the rul - bas fac lp con are equ to the non - lin con in equ ( 123 ) .
tha is , an ass to ( , w ) sat the rul - bas fac lp con if and onl if it sat the con in the num of var and con in the rul - bas fac lp is lin in the num of rul gen by the var eli pro .
in tur , the num of rul is no lar , and oft exp sma , tha the num of ent in the tab - bas
to ill the gen of lp con as jus des , we now pre a sma
exa 123 let e12 , e12 , e12 , and e12 be the set of lp rul whi dep on the var b bei max .
her , rul ei is ass wit the lp var ui :
e12 = ( cid : 123 ) a b : u12 ( cid : 123 ) , e12 = ( cid : 123 ) a b c : u12 ( cid : 123 ) , e12 = ( cid : 123 ) a b : u12 ( cid : 123 ) , e12 = ( cid : 123 ) a b c : u12 ( cid : 123 ) .
in thi set , not tha rul e12 and e12 are con .
we com the to gen the
e12 = ( cid : 123 ) a b c : u12 ( cid : 123 ) , e12 = ( cid : 123 ) a b c : u12 ( cid : 123 ) .
and the con u12 + u12 = u12
sim , e12 and e12 may be com , res in :
e12 = ( cid : 123 ) a b c : u12 ( cid : 123 ) .
wit the con u12 = u12 + u12
now , we hav the fol thr inc rul for
e12 = ( cid : 123 ) a b : u12 ( cid : 123 ) , e12 = ( cid : 123 ) a b c : u12 ( cid : 123 ) , e12 = ( cid : 123 ) a b c : u12 ( cid : 123 ) .
fol the max pro , sin no pai of rul can be eli rig awa , we spl e12 and e12 to gen the fol rul :
e12 = ( cid : 123 ) a b c : u12 ( cid : 123 ) , e12 = ( cid : 123 ) a b c : u12 ( cid : 123 ) , e12 = ( cid : 123 ) a b c : u12 ( cid : 123 ) .
gue , kol , par & ven
we can now max b out fro e12 and e12 , res in the fol rul and con
e12 = ( cid : 123 ) a c : u12 ( cid : 123 ) ,
lik , max b out fro e12 and e12 , we get :
e12 = ( cid : 123 ) a c : u12 ( cid : 123 ) ,
whi com the eli of var b in our rul - bas fac lp .
we hav pre an alg for exp bot add and con - spe str - tur in the lp con ste of our pla alg .
thi rul - bas fac lp app can now be app dir in our app lin pro and app - ima pol ite alg , whi wer pre in sec 123 and 123
the onl add mod req con the man of the dec lis pol pre in sec 123 .
alt app lin pro doe not req any exp pol rep ( or the def act mod ) , app pol - icy ite req us to rep suc pol .
for , no maj mod are in par , the con ( cid : 123 ) ti , ai , i ( cid : 123 ) in the dec req in the rul - bas cas .
lis pol are alr con - spe rul .
thu , the pol rep alg in sec 123 can be app dir wit our new rul - bas rep .
the , we now hav a com fra for exp bot add and con - spe str for eci pla in fac mdp .
exp res
the fac rep of a val fun is mos app in cer typ of sys : sys tha inv man var , but whe the str int bet the var are fai spa , so tha the dec of the inu bet var doe not ind an una los in acc .
as arg by her sim ( 123 ) in arc of com , man com sys hav a nea dec , hie str , wit the sub int onl wea bet the .
to eva our alg , we sel pro tha we bel exh thi typ of str .
in thi sec , we per var exp int to exp the per of our alg .
fir , we com our fac app lin pro ( lp ) and app pol ite ( pi ) alg .
we als com to the l12 - pro alg of kol and par ( 123 ) .
our sec eva com a tab - bas im - ple to a rul - bas imp tha can exp csi .
fin , we pre com bet our app and the alg of bou et al .
( 123 ) .
123 app lp and app pi in ord to com our app lp and app pi alg , we tes bot on the sys pro des in det in sec 123 .
thi pro rel to a sys
eff sol alg for fac mdp
adm who has to mai a net of com we exp wit var net arc , sho in fig 123
mac fai ran , and a fau mac inc the pro tha its nei mac wil fai .
at eve tim ste , the sys can go to one mac and reb it , cau it to be wor in the nex tim ste wit hig pro .
rec tha the sta spa in thi pro gro exp in the num of mac in the net , tha is , a pro wit m mac has 123 sta .
eac mac rec a rew of 123 whe wor ( exc in the rin , whe one mac rec a rew of 123 , to int som asy ) , a zer rew is giv to fau mac , and the dis fac is = 123 .
the opt str for reb mac wil dep upo the top , the dis fac , and the sta of the mac in the net .
if mac i and mac j are bot fau , the ben of reb i mus be wei aga the exp dis imp of del reb j on js suc .
for top suc as rin , thi pol may be a fun of the sta of eve sin mac in the net .
the bas fun use inc ind ind for eac mac , wit val 123 if it is wor and zer oth ( i . e . , eac one is a res sco fun of a sin var ) , and the con bas , who val is 123 for all sta .
we sel str var eli ord : for the sta and thr leg top , we rst eli the var cor to com in the leg , and the cen com ( ser ) was eli las for rin , we sta wit an arb com and fol the rin ord for rin and sta , the rin mac wer eli rst and the the cen one nal , for the rin of rin top , we eli the com in the out rin rst and the the one in the inn rin .
we imp the fac pol ite and lin pro alg in mat , usi cpl as the lp sol .
exp wer per on a sun ult - ii , 123 mhz wit 123 of ram .
to eva the com of the app pol ite wit max - nor pro alg , tes wer per wit inc the num of sta , tha is , inc num of mac on the net .
fig 123 sho the run tim for inc pro siz , for var arc .
the sim one is the sta , whe the bac of eac bas fun has sco res to two var and the lar fac in the cos net has sco res to two var .
the mos dic one was the bid rin , whe fac con ve var .
not tha the num of sta is gro exp ( ind by the log sca in fig 123 ) , but run tim inc onl log in the num of sta , or pol in the num of var .
we ill thi beh in fig 123 ( d ) , whe we t a 123 ord pol to the run tim for the uni rin .
not tha the siz of the pro des gro qua wit the num of var : add a mac to the net als add the pos act of xin tha mac .
for thi pro , the com cos of our fac alg emp gro app , for a pro wit n var , as opp to the exp com pol ( 123 , |a| ) of the exp alg .
for fur eva , we mea the err in our app val fun rel to the tru opt val fun v .
not tha it is onl pos to com v for sma pro in our cas , we wer onl abl to go up to 123 mac .
for com , we als eva the err in the app val fun pro by the l12 - pro
gue , kol , par & ven
fig 123 : ( a ) ( c ) run tim for pol ite wit max - nor pro on var of the sys pro ( d ) fit a pol to the run tim for the
alg of kol and par ( 123 ) .
as we dis in sec 123 , the l12 pro in fac mdp by kol and par are dic and tim con hen , we wer onl abl to com the two alg for sma pro , whe an equ l12 - pro can be imp usi an exp sta spa for .
res for bot alg are pre in fig 123 ( a ) , sho the rel err of the app sol to the tru val fun for inc pro siz .
the res ind tha , for lar pro , the max - nor for gen a bet app of the tru opt val fun v tha the l12 - pro .
her , we use two typ of bas fun : the sam sin var fun , and pai bas fun .
the pai bas fun con ind for nei pai of mac ( i . e . , fun of two var ) .
as exp , the use of pai bas fun res in bet app .
123 of sta tim ( min ) rin leg of sta tim ( min ) rin of rin and sta of sta tim ( min ) uni : fit a pol : tim = 123 - 123 + 123 - 123 of the fit : r12 = 123 of var |x| tim ( min ) eff sol alg for fac mdp
fig 123 : ( a ) rel err to opt val fun v and com to l12 pro for rin ( b ) for lar mod , mea bel err aft con .
for the sma pro , we can als com the act val of the pol gen by our alg to the val of the opt pol .
her , the val of the pol gen by our alg is muc clo to the val of the opt pol tha the err imp by the die bet our app val fun and v .
for exa , for the sta arc wit one ser and up to 123 cli , our app wit sin var bas fun had rel err of 123 , but the pol we gen had the sam val as the opt pol .
in thi cas , the sam was tru for the pol gen by the l12 in a uni rin wit 123 mac and pai bas , the rel err bet our app and v was abo 123 , but the res pol onl had a 123 los ove the opt pol .
for the sam pro , the l12 app has a val fun err of 123 , and a tru pol los was 123 .
in oth wor , bot met ind pol tha hav low err tha the err in the app val fun ( at lea for sma pro ) .
how , our alg con to out the l12 alg , eve wit res to act pol los .
for lar mod , we can no lon com the cor val fun , so we can eva our res by com ( cid : 123 ) v hw ( cid : 123 ) .
for , as dis in sec 123 , the bel err can be use to pro a bou on the app err and can be com eci by exp pro - spe str .
fig 123 ( b ) sho tha the bel err inc ver slo wit the num of sta .
it is als val to loo at the act dec - lis pol gen in our exp .
fir , we not tha the lis ten to be sho , the len of the nal dec lis pol gre app lin wit the num of mac .
fur , the pol its is oft fai int .
in the rin and sta arc , for exa , the dec lis say : if the ser is fau , x the ser els , if ano mac is fau , x it .
thu far , we hav pre sca res for run tim and app err for our app pi app .
we now com thi alg to the sim app
123 . 123 of var err : max nor , sin bas , sin bas nor , pai bas , pai bas . 123 . 123 of sta err / rma leg gue , kol , par & ven
fig 123 : app lp ver app pi on the sys pro wit a rin
top : ( a ) run tim ( b ) est val of pol .
lp app of sec 123
as sho in fig 123 ( a ) , the app lp alg for fac mdp is sig fas tha the app pi alg .
in fac , app - mat pi wit sin - var bas fun var is mor cos com tha the lp app usi bas fun ove con tri of var .
as sho in fig 123 ( b ) , for sin bas fun , the app pi pol obt sli bet per for som pro siz .
how , as we inc the num of bas fun for the app lp for , the val of the res pol is muc bet .
thu , in thi pro , our fac app lin pro for all us to use mor bas fun and to obt a res pol of hig val , whi sti mai a fas run tim .
the res , alo wit the sim imp , sug tha in pra one may rst try to app the app lin pro alg bef dec to mov to the mor ela app pol ite app .
123 com tab - bas and rul - bas imp
our nex eva com a tab - bas rep , whi exp onl add ind , to the rul - bas rep pre in sec 123 , whi can exp bot add and con - spe ind .
for the exp , we imp our fac app lin pro alg wit tab - bas and rul - bas rep in c++ , usi cpl as the lp sol .
exp wer per on a sun ult - ii , 123 mhz wit 123 of ram .
to eva and com the alg , we uti a mor com ext of the sys pro .
thi pro , dub the pro - sys pro , con thr sta var for eac mac i in the net : loa , sta and sel .
eac com - put run pro and rec rew whe the pro ter .
the pro are rep by the loa var , whi tak val in ( idl , loa , suc ) , and the com rec a rew whe the ass of loa is suc .
the sta var ,
123 of mac run tim ( min ) pi sin bas sin bas pai bas tri bas of mac rew of fin pol ( ave ove 123 tri of 123 ste ) pi sin bas sin bas pai bas tri bas eff sol alg for fac mdp
fig 123 : run tim for pro - sys pro for var top : ( a ) sta
( b ) rin ( c ) rev sta ( wit t fun ) .
123 of sta run tim ( min ) tab - bas , sin bas - bas , sin bas - bas , pai bas - bas , pai bas of sta run tim ( min ) tab - bas , sin bas - bas , sin bas - bas , pai bas - bas , pai bas of mac run tim ( min ) tab - bas , sin bas - bas , sin bas = 123 - 123 + 123 - 123 = 123 = 123 - 123 x * 123 + 123 - 123 x * 123 + 123 = 123 ( x - 123 ) 123 ( x - 123 ) 123 gue , kol , par & ven
fig 123 : fra of tot run tim spe in cpl for the pro - sys pro -
lem wit a rin top .
rep the sta of mac i , tak val in ( goo , fau , dea ) ; if its val is fau , the pro hav a sma pro of ter and if its val is dea , the any run pro is los and loa bec idl .
the sta of mac i can be - com fau and eve dea at ran how , if mac i rec a pac fro a dea mac , the the pro tha sta bec fau and the dea inc .
the sel var rep thi com by sel one of the nei of i uni at ran at eve tim ste .
the sys can sel at mos one com to reb at eve tim ste .
if com i is reb , the its sta bec goo wit pro 123 , but any run pro is los , i . e . , the loa var bec idl .
thu , in thi pro , the sys mus bal sev con goa : reb a mac kil pro , but not reb a mac may cau cas fau in net .
fur , the sys can onl cho one mac to reb , whi imp the ad - dit tra of sel onl one of the ( pot man ) fau or dea mac in the net to reb .
we exp wit two typ of bas fun : sin inc ind ove all of the joi ass of loa , sta and sel , and pai whi , in add , inc a set of ind ove sta , sta , and sel = j , for eac nei j of mac i in the net .
the dis fac was = 123 .
the var eli ord eli all of the loa var rst , and the fol the sam pat as in the sim sys pro , eli rst sta and the sel whe mac i
fig 123 com the run tim for the tab - bas imp to the one for the rul - bas rep for thr top : sta , rin , and rev sta .
the rev sta top rev the dir of the inu in the sta : rat tha the cen mac inu all mac in the top , all mac inu the cen one .
the thr top dem thr die lev of csi : in the
123 . 123 . 123 of mac tim / tot tim - bas , sin bas - bas , sin bas eff sol alg for fac mdp
sta top , the fac gen by var eli are sma .
thu , alt the run tim are pol in the num of sta var for bot met , the tab - bas rep is sig fas tha the rul - bas one , due to the ove of man the rul .
the rin top ill an int beh : sin bas fun ind rel sma var eli fac , thu the tab - bas app is fas .
how , wit pai bas the fac are lar and the rul - bas app sta to dem fas run tim in lar pro .
fin , the re - ver sta top rep the wor - cas sce for the tab - bas app .
her , the sco of the bac of a bas fun for the cen mac wil inv all com in the net , as all mac can pot inu the cen one in the nex tim ste .
thu , the siz of the fac in the tab - bas var eli ap - pro are exp in the num of mac in the net , whi is ill by the exp gro in fig 123 ( c ) .
the rul - bas app can exp the csi in thi pro for exa , the sta of the cen mac sta onl dep on mac j if the val sel is j , i . e . , if sel = j .
by exp csi , we can sol the sam pro in pol tim in the num of sta var , as see in the sec cur in
it is als ins to com the por of the tot run tim spe in cpl for the tab - bas as com to the rul - bas app .
fig 123 ill thi com .
not tha amo of tim spe in cpl is sig hig for the tab - bas app .
the are two rea for thi die : rst , due to csi , the lps gen by the rul - bas app are sma tha the tab - bas one sec , rul - bas var eli is mor com tha the tab - bas one , due to the ove int by rul man .
int , the pro of cpl tim inc as the pro siz inc , ind tha the asy com of the lp sol is hig tha tha of var eli , thu sug tha , for lar pro , add lar - sca lp opt pro , suc as con gen , may be hel .
123 com to apr
the mos clo rel wor to our is a lin of res tha beg wit the wor of bou et al .
( 123 ) .
in par , the app apr alg of hoe et al .
( 123 ) , whi use ana dec dia ( add ) to rep the val fun is a str alt app for sol fac mdp .
as dis in det in sec - tio 123 , the apr alg can suc exp con - spe str in the val fun , by rep it wit the set of mut - exc and exh bra of the add .
on the oth han , our app can exp bot add and con - spe str in the pro , by usi a lin com of non - mut - exc rul .
to bet und thi die , we eva bot our rul - bas app lin pro alg and apr in two pro , lin and exp , des by bou et al .
( 123 ) to ill res the bes - cas and the wor - cas beh of the alg .
in the exp , we use the web - dis ver of apr - cod ( hoe , st - aub , hu , & bou , 123 ) , run it loc on a lin pen iii 123 wit 123 of ram .
gue , kol , par & ven
fig 123 : com apr to rul - bas app lin pro on the ( a )
lin and ( b ) exp pro .
the two pro inv n bin var x12 , .
, xn and n det act a12 , .
the rew is 123 whe all var xk are tru , and is 123 oth .
the pro is dis by a fac = 123 .
the die bet the lin and the exp pro is in the tra pro .
in the lin pro , the act ak set the var xk to tru and mak all suc var , xi for i > k , fal .
if the sta spa of the lin pro is see as a bin num , the opt pol is to set rep the lar bit ( xk var ) whi has all pre bit set to tru .
usi an add , the opt val fun for thi pro can be rep in lin spa , wit n+1 lea ( bou et al . , 123 ) .
thi is the bes - cas for apr , and the alg can com thi val fun qui eci .
fig 123 ( a ) com the run tim of apr to tha of one of our alg wit ind bas fun bet pai of con var .
not tha bot alg obt the sam pol in pol tim in the num of var .
how , in suc str pro , the eci imp of the add pac use in apr mak it fas in thi pro .
on the oth han , the exp pro ill the wor - cas for apr .
in thi pro , the act ak set the var xk to tru , if all pre var , xi for i < k , are tru , and it mak all pre var fal .
if the sta spa is see as a bin num , the opt pol goe thr all bin num in seq , by rep set the lar bit ( xk var ) whi has all pre bit set to tru .
due to dis , the opt val fun ass a val of 123 to the jth bin num , so tha the val fun con exp man die val .
usi an add , the opt val fun for thi pro req an exp num of lea ( bou et al . , 123 ) , whi is ill by the exp run tim in fig 123 ( b ) .
how , the sam val fun can be app ver com as a fac lin val fun usi n + 123 bas fun : an ind ove eac var xk and the con bas .
as sho in fig 123 ( b ) , usi thi rep , our fac app lin pro alg com the val fun in pol tim .
fur , the
y = 123 - 123 + 123 - 123 = 123 = 123 + 123 + 123 = 123 of var ( in sec ) apr - bas = 123 - 123 + 123 - 123 = 123 of var tim ( in sec ) apr - bas = 123 - 123 * 123 - 123 * 123 + 123 = 123 eff sol alg for fac mdp
fig 123 : com apr to rul - bas app lin pro wit sin - gle bas fun on the pro - sys pro wit rin top ( a ) run tim and ( b ) val of the res pol and wit sta top ( c ) run tim and ( d ) val of the res pol .
pol obt by our app was opt for thi pro .
thu , in thi pro , the abi to exp add ind all an eci pol tim sol .
we hav als com apr to our rul - bas app lin pro alg on the pro - sys pro .
thi pro has sig add str - tur in the rew fun and fac in the tra mod .
alt thi typ of str is not exp dir by apr , the add app ste per by the alg can , in pri , all apr to nd app sol to the pro - lem .
we spe a sig amo of tim att to nd the bes set of par for apr for the pro . 123 we set on the sif met of var reo and the rou app met wit the siz ( max add siz ) cri
we are ver gra to jes hoe and rob st - aub for the ass in sel the par .
123 of mac tim ( min ) rul - bas lpa of mac val of pol ( avg .
123 run of 123 ste ) rul - bas lpa of mac tim ( min ) rul - bas lpa of mac val of pol ( avg .
123 run of 123 ste ) rul - bas lpa gue , kol , par & ven
all the val fun rep to sca wit the pro siz , we set the max add siz to 123 + 123 for a net wit n mac .
( we exp wit a var of die gro rat for the max add siz her , as for the oth par , we sel the cho tha gav the bes res for apr . ) we com apr wit the par to our rul - bas app lin pro alg wit sin bas fun on a pen iii 123 wit 123 of ram .
the res are sum in fig 123
on ver sma pro ( up to 123 mac ) , the per of the two alg is fai sim in ter of bot the run tim and the qua of the pol gen .
how , as the pro siz gro , the run tim of apr inc rap , and bec sig hig tha tha of our alg .
fur , as the pro siz inc , the qua of the pol gen by apr als det .
thi die in pol qua is cau by the die val fun rep use by the two alg .
the add use in apr rep k die val wit k lea thu , the are for to agg man die sta and rep the usi a sin val .
for sma pro , suc agg can sti rep goo pol .
unf , as the pro siz inc and the sta spa gro exp , apr pol rep bec ina , and the qua of the pol dec .
on the oth han , our lin val fun can rep exp man val wit onl k bas fun , whi all our app to sca up to sig lar pro .
rel wor
